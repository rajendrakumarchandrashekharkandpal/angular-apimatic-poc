#%RAML 0.8
title: 'Launchpad: Non-POS Merchant Boarding'
version: 2.6.2
documentation:
- title: 'Launchpad: Non-POS Merchant Boarding'
  content: The Launchpads Merchant Boarding API allows Worldpay partners to onboard merchants to Worldpay's Payments Platform. Please see the Getting Started page for more information. </br> </br> To contact our certifications team, please email <a href="mailto:Certification2@fisglobal.com">Certification2@fisglobal.com</a>.   </br> To contact the product team, please email <a href="mailto:APICustomerIntegration@fisglobal.com">APICustomerIntegration@fisglobal.com</a>.
baseUri: https://apis.cert.worldpay.com/merchant-boarding/v2
securedBy:
- api_key
protocols:
- HTTPS
baseUriParameters: {}
schemas:
- Schema: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Schema",
      "title": "Schema",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
- ExistingApplication: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ExistingApplication",
      "title": "ExistingApplication",
      "type": "object",
      "properties": {
        "externalRefId": {
          "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
          "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
          "type": "string",
          "maxLength": 36,
          "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
        },
        "businessInfo": {
          "id": "BusinessInfo",
          "title": "BusinessInfo",
          "type": "object",
          "properties": {
            "dbaName": {
              "description": "The merchant name they do business as.  Generally with what their customers know the business.",
              "example": "The DBA Name",
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            },
            "legalName": {
              "description": "Business Legal Name as filed with the IRS.",
              "example": "Timothy Jones",
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            },
            "ownershipType": {
              "title": "OwnershipType",
              "description": "Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).",
              "example": "LLC",
              "type": "string",
              "enum": [
                "GOVERNMENT",
                "SOLE PROPRIETOR",
                "LLC",
                "PARTNERSHIP",
                "FIN INSTITUTION",
                "NON-PROFIT",
                "ASSOCIATION/ESTATE/TRUST",
                "PRIVATE CORPORATION",
                "SEC REGISTERED",
                "PUBLIC CORPORATION",
                "OTHER"
              ]
            },
            "mccCode": {
              "description": "SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.",
              "example": "5812",
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            },
            "businessEstablishedDate": {
              "description": "Date (CCYY-MM-DD) on which the merchant's business was established.",
              "example": "2000-03-23",
              "type": "string",
              "format": "date"
            },
            "websiteUrl": {
              "description": "The URL of the merchant's website.",
              "example": "www.thefoodplace.com",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "numberOfLocation": {
              "description": "Number of current locations.",
              "example": 2,
              "type": "integer",
              "format": "int32"
            },
            "federalTaxId": {
              "description": "The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.",
              "example": "123456789",
              "type": "string",
              "minLength": 9,
              "maxLength": 9,
              "pattern": "^[0-9]{9}$"
            },
            "paymentAcceptanceMethod": {
              "description": "The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.",
              "example": [
                "inPerson",
                "onlineSite"
              ],
              "type": "array",
              "items": {
                "title": "PaymentAcceptanceMethod",
                "type": "string",
                "enum": [
                  "inPerson",
                  "onlineSite",
                  "phoneOrMailOrder"
                ]
              }
            },
            "pciadc": {
              "title": "Pciadc",
              "description": "Indication if the merchant has had an account data compromise.",
              "example": "No",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "pcidssValidated": {
              "title": "PcidssValidated",
              "description": "Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.",
              "example": "No",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "surroundingArea": {
              "title": "SurroundingArea",
              "description": "Type of area surroundning the business.",
              "example": "Commercial",
              "type": "string",
              "enum": [
                "Commercial",
                "Industrial",
                "Residential"
              ]
            },
            "productServiceSold": {
              "description": "Type of goods or services sold.",
              "example": "Food",
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "pattern": "(^[-a-zA-Z0-9_ &()*+,./:;=_'‘]{1,40}$)"
            },
            "ownAddYears": {
              "description": "Years the business has been operating in their current location.",
              "example": 2,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 99.0,
              "format": "int32"
            },
            "lengthOfContract": {
              "description": "Inital contract term in months.",
              "type": "string",
              "pattern": "([0-9]{3})$"
            },
            "seasonal": {
              "title": "Seasonal",
              "description": "Does the business operate seasonally?",
              "example": "Yes",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "activeMonths": {
              "description": "The months during which the business is actively operating.",
              "example": [
                "Jan",
                "Feb",
                "Mar"
              ],
              "type": "array",
              "items": {
                "title": "ActiveMonth",
                "type": "string",
                "enum": [
                  "Jan",
                  "Feb",
                  "Mar",
                  "Apr",
                  "May",
                  "Jun",
                  "Jul",
                  "Aug",
                  "Sep",
                  "Oct",
                  "Nov",
                  "Dec"
                ]
              }
            },
            "warranty": {
              "title": "Warranty",
              "description": "Does the business offer warranties, dues, subscriptions, memberships, or other extended services?",
              "example": "1 YEAR",
              "type": "string",
              "enum": [
                "1 YEAR",
                "30 DAY",
                "60 DAY",
                "90 DAY",
                "LIFETIME",
                "NO"
              ]
            },
            "returnPolicy": {
              "title": "ReturnPolicy",
              "description": "The business's return policy.",
              "example": "30 Day",
              "type": "string",
              "enum": [
                "3 Day",
                "30 Day",
                "60 Day",
                "60+ Day",
                "ALL SALES FINAL",
                "EXCHANGE ONLY/STORE CREDIT",
                "NO RETURN POLICY"
              ]
            },
            "taxExempt": {
              "title": "TaxExempt",
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "acceptCreditCards": {
              "title": "AcceptCreditCards",
              "description": "Does the business accept credit cards?",
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          "required": [
            "dbaName",
            "legalName",
            "ownershipType",
            "mccCode"
          ]
        },
        "transactionInfo": {
          "id": "TransactionInfo",
          "title": "TransactionInfo",
          "type": "object",
          "properties": {
            "annualSalesVolume": {
              "description": "Projected annual sales volume.",
              "example": 20000.12,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999999999.99
            },
            "percentRetailSwipedTransactions": {
              "description": "Projected Percentage of daily card-present transactions.",
              "example": 82,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "averageTicket": {
              "description": "Average ticket dollar amount.",
              "example": 2.3,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999.99
            },
            "highestTicket": {
              "description": "Highest ticket dollar amount.",
              "example": 32.41,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999.99
            },
            "currentProcessor": {
              "description": "the current processor",
              "example": "Global Payments",
              "type": "string"
            },
            "acceptChargebacks": {
              "title": "AcceptChargebacks",
              "description": "Do you have more than 25 chargeback accepted in the last 12 months?",
              "example": "No",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "chargebackPercent": {
              "description": "Projected chargeback percentage.\n\n```Required when acceptChargebacks is 'Yes'```\n\n```Optional when acceptChargebacks is null or 'No'.```",
              "example": 0,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "returnPercent": {
              "description": "Projected return percent of  goods sold",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "cardNotPresentPercent": {
              "description": "Percent of card not present transactions.",
              "example": 20,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "businessToBusinessPercent": {
              "description": "Percent of business-to-business transactions.",
              "example": 20,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "internetTransactionPercent": {
              "description": "Percent of internet transactions.",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "annualCreditSalesVolume": {
              "description": "Projected annual credit card sales volume.",
              "example": 123.32,
              "type": "number",
              "minimum": 0.0,
              "maximum": 999999999.99
            },
            "annualDebitSalesVolume": {
              "description": "Projected annual debit card sales volume.",
              "example": 32.23,
              "type": "number",
              "minimum": 0.0,
              "maximum": 999999999.99
            },
            "annualAmexVolume": {
              "description": "Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```",
              "example": 10000,
              "type": "number",
              "minimum": 0.0,
              "maximum": 999999999.99
            },
            "amexAverageTicket": {
              "description": "AverageTicket dollar amount for Amex.\n ```This field is required when you opt-in for Amex```",
              "example": 2.3,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999.99
            },
            "averageNumberofDays": {
              "description": "Average number of days from when cardholder is charged & when products or services are received IN FULL by cardholder.",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "format": "int32"
            }
          },
          "required": [
            "annualSalesVolume",
            "percentRetailSwipedTransactions"
          ]
        },
        "leadSource": {
          "description": "The source of a lead.",
          "example": "Activate",
          "type": "string",
          "maxLength": 12
        },
        "owners": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Owner",
            "title": "Owner",
            "description": "A Control Owner is required for the following ownership types > LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT",
            "example": {
              "type": "Control Owner Contact",
              "title": "Owner",
              "firstName": "Timothy",
              "middleInitial": "M",
              "lastName": "Jones",
              "phoneNumber": "1234567890",
              "phoneNumberExt": "1234",
              "faxNumber": "1234567890",
              "email": "test@test.com",
              "ownershipPercentage": 23,
              "ssn": "123456789",
              "dob": "2000-03-23",
              "addressLine1": "4355 N Coalwhipe St.",
              "city": "City Town",
              "state": "OH",
              "country": "United States",
              "postalCode": "80123",
              "postalCodeExtension": "1234"
            },
            "type": "object",
            "properties": {
              "type": {
                "title": "Type",
                "description": "The Owner Type. Please note the above Ownership Types where a Control Owner is required.",
                "type": "string",
                "enum": [
                  "Control Owner Contact",
                  "Owner 1 Contact",
                  "Owner 2 Contact",
                  "Owner 3 Contact",
                  "Owner 4 Contact"
                ]
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "title": "State",
                "description": "Valid US state, commonwealth, and territory codes are allowed.",
                "example": "CO",
                "type": "string",
                "enum": [
                  "AK",
                  "AL",
                  "AR",
                  "AS",
                  "AZ",
                  "CA",
                  "CO",
                  "CT",
                  "DC",
                  "DE",
                  "FL",
                  "FM",
                  "GA",
                  "GU",
                  "HI",
                  "IA",
                  "ID",
                  "IL",
                  "IN",
                  "KS",
                  "KY",
                  "LA",
                  "MA",
                  "MD",
                  "ME",
                  "MH",
                  "MI",
                  "MN",
                  "MO",
                  "MP",
                  "MS",
                  "MT",
                  "NC",
                  "ND",
                  "NE",
                  "NH",
                  "NJ",
                  "NM",
                  "NV",
                  "NY",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "PW",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VA",
                  "VI",
                  "VT",
                  "WA",
                  "WI",
                  "WV",
                  "WY"
                ]
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "title": "PhoneType",
                "description": "Phone type.",
                "example": "mobile",
                "type": "string",
                "enum": [
                  "mobile",
                  "home"
                ]
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "title": "AlternatePhoneType",
                "description": "Alternate phone type.",
                "example": "home",
                "type": "string",
                "enum": [
                  "mobile",
                  "home"
                ]
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "ownershipPercentage": {
                "description": "Ownership stake percentage.",
                "type": "integer",
                "minimum": 0.0,
                "maximum": 100.0,
                "format": "int32"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "dob": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              },
              "identification": {
                "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                "type": "array",
                "items": {
                  "id": "Identification",
                  "title": "Identification",
                  "type": "object",
                  "properties": {
                    "idType": {
                      "title": "IdType",
                      "description": "Type of ID provided by the owner.",
                      "example": "PASSPORT",
                      "type": "string",
                      "enum": [
                        "ALIEN ID",
                        "CREDIT BUREAU",
                        "DRIVERS LICENSE",
                        "STATE ID",
                        "MEXICAN CONSULATE",
                        "MILITARY ID",
                        "OTHER",
                        "PASSPORT"
                      ]
                    },
                    "idNumber": {
                      "description": "Owner's ID number.",
                      "example": "312312341",
                      "type": "string",
                      "maxLength": 40
                    },
                    "issuedCity": {
                      "description": "City in which ID was issued.",
                      "example": "City Town",
                      "type": "string",
                      "maxLength": 28
                    },
                    "issuedState": {
                      "title": "IssuedState",
                      "description": "Valid state code where ID was issued.",
                      "example": "CO",
                      "type": "string",
                      "maxLength": 2,
                      "enum": [
                        "AK",
                        "AL",
                        "AR",
                        "AS",
                        "AZ",
                        "CA",
                        "CO",
                        "CT",
                        "DC",
                        "DE",
                        "FL",
                        "FM",
                        "GA",
                        "GU",
                        "HI",
                        "IA",
                        "ID",
                        "IL",
                        "IN",
                        "KS",
                        "KY",
                        "LA",
                        "MA",
                        "MD",
                        "ME",
                        "MH",
                        "MI",
                        "MN",
                        "MO",
                        "MP",
                        "MS",
                        "MT",
                        "NC",
                        "ND",
                        "NE",
                        "NH",
                        "NJ",
                        "NM",
                        "NV",
                        "NY",
                        "OH",
                        "OK",
                        "OR",
                        "PA",
                        "PR",
                        "PW",
                        "RI",
                        "SC",
                        "SD",
                        "TN",
                        "TX",
                        "UT",
                        "VA",
                        "VI",
                        "VT",
                        "WA",
                        "WI",
                        "WV",
                        "WY"
                      ]
                    },
                    "issuedCountry": {
                      "description": "Country where ID was issued.",
                      "example": "US",
                      "type": "string",
                      "maxLength": 2
                    },
                    "dateIssued": {
                      "description": "Date ID was issued (CCYY-MM-DD).",
                      "example": "1999-01-30",
                      "type": "string",
                      "format": "date"
                    },
                    "dateExpires": {
                      "description": "Date ID expires (CCYY-MM-DD).",
                      "example": "2020-02-11",
                      "type": "string",
                      "format": "date"
                    }
                  },
                  "required": [
                    "idType",
                    "idNumber"
                  ]
                }
              }
            },
            "required": [
              "type",
              "firstName",
              "lastName",
              "phoneNumber",
              "email",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          }
        },
        "guarantors": {
          "description": "Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.",
          "type": "array",
          "items": {
            "id": "Guarantor",
            "title": "Guarantor",
            "type": "object",
            "properties": {
              "type": {
                "example": "Guarantor 1 Contact",
                "type": "string",
                "enum": [
                  "Guarantor 1 Contact"
                ]
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "$ref": "Owner#/properties/state"
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "$ref": "Owner#/properties/phoneType"
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "$ref": "Owner#/properties/alternatePhoneType"
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "ownershipPercentage": {
                "description": "Ownership stake percentage.",
                "type": "integer",
                "minimum": 0.0,
                "maximum": 100.0,
                "format": "int32"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "dob": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              },
              "identification": {
                "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                "type": "array",
                "items": {
                  "$ref": "Identification"
                }
              }
            },
            "required": [
              "type",
              "firstName",
              "lastName",
              "phoneNumber",
              "email",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          },
          "uniqueItems": true
        },
        "authorizedSigners": {
          "description": "",
          "type": "array",
          "items": {
            "id": "AuthorizedSigner",
            "title": "AuthorizedSigner",
            "type": "object",
            "properties": {
              "roleName": {
                "title": "RoleName",
                "description": "The role of the signer. Please note the below.\n\n 1) Merchant role name is mandatory.\n 2) Required fields indicated in schema are those required for all role names other than \"SalesRep\"\n 3) The \"SalesRep\" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email\n 4) The \"Signer2\" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.",
                "example": "Merchant",
                "type": "string",
                "enum": [
                  "SalesRep",
                  "Merchant",
                  "Reviewer",
                  "Signer2",
                  "Signer3",
                  "Signer4",
                  "Signer5",
                  "Signer6",
                  "Signer7",
                  "Signer8"
                ]
              },
              "signingExperience": {
                "title": "SigningExperience",
                "description": "Signing ceremony type",
                "example": "email",
                "type": "string",
                "enum": [
                  "embed",
                  "email",
                  "wet"
                ]
              },
              "signingOrder": {
                "description": "Define the signing order for multiple signers",
                "example": "2",
                "type": "string"
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "dob": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "$ref": "Owner#/properties/state"
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "$ref": "Owner#/properties/phoneType"
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "$ref": "Owner#/properties/alternatePhoneType"
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              },
              "identification": {
                "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                "type": "array",
                "items": {
                  "$ref": "Identification"
                }
              }
            },
            "required": [
              "roleName",
              "signingExperience",
              "signingOrder",
              "firstName",
              "lastName",
              "phoneNumber",
              "email",
              "ssn",
              "dob",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          }
        },
        "contacts": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Contact",
            "title": "Contact",
            "type": "object",
            "properties": {
              "type": {
                "title": "Type1",
                "description": "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST.",
                "example": "Primary Contact",
                "type": "string",
                "enum": [
                  "Primary Contact",
                  "Accounting Contact",
                  "Customer Service Contact",
                  "Shipping Contact",
                  "Third Party Contact",
                  "Vendor Contact Info",
                  "PCI Contact",
                  "Corporate"
                ]
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "birthDate": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "$ref": "Owner#/properties/phoneType"
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "$ref": "Owner#/properties/alternatePhoneType"
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              }
            },
            "required": [
              "type",
              "firstName",
              "lastName",
              "phoneNumber",
              "email"
            ]
          },
          "uniqueItems": true
        },
        "addresses": {
          "description": "",
          "example": [
            {
              "type": "Mailing Address",
              "addressLine1": "1234 W Tester Ave.",
              "city": "City Town",
              "state": "CO",
              "country": "United States",
              "postalCode": "80123",
              "postalCodeExtension": "1234"
            },
            {
              "type": "Physical Address",
              "addressLine1": "1234 W Tester Ave.",
              "city": "City Town",
              "state": "CO",
              "country": "United States",
              "postalCode": "80123",
              "postalCodeExtension": "1234"
            }
          ],
          "type": "array",
          "items": {
            "id": "Address",
            "title": "Address",
            "type": "object",
            "properties": {
              "type": {
                "title": "AddressType",
                "description": "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory.",
                "example": "Physical Address",
                "type": "string",
                "enum": [
                  "Mailing Address",
                  "Physical Address",
                  "Shipping Address"
                ]
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "$ref": "Owner#/properties/state"
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              }
            },
            "required": [
              "type",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          },
          "uniqueItems": true
        },
        "bankAccount": {
          "id": "BankAccount",
          "title": "BankAccount",
          "type": "object",
          "properties": {
            "ddaType": {
              "title": "DdaType",
              "description": "Direct deposit account type.",
              "example": "Checking",
              "type": "string",
              "enum": [
                "Checking",
                "Savings"
              ]
            },
            "achType": {
              "title": "AchType",
              "description": "Check deposit type",
              "example": "Commercial Checking",
              "type": "string",
              "enum": [
                "Commercial Checking",
                "Private Checking"
              ]
            },
            "accountNumber": {
              "description": "Direct deposit account number.  Maximum 17 characters.",
              "example": "011401545",
              "type": "string",
              "minLength": 1,
              "maxLength": 17
            },
            "routingNumber": {
              "description": "Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.",
              "example": "102000076",
              "type": "string",
              "minLength": 9,
              "maxLength": 9
            },
            "bankName": {
              "description": "Bank name used for credit card processing services.",
              "example": "Bank name",
              "type": "string"
            }
          }
        },
        "salesAgent": {
          "id": "SalesAgent",
          "title": "SalesAgent",
          "description": "The agent who is submitting the deal.",
          "type": "object",
          "properties": {
            "firstName": {
              "description": "Sales agent's first name.",
              "example": "John",
              "type": "string",
              "minLength": 1,
              "maxLength": 15
            },
            "lastName": {
              "description": "Sales agent's last name.",
              "example": "Doe",
              "type": "string",
              "minLength": 1,
              "maxLength": 25
            },
            "email": {
              "description": "Sales agent's email address.  Must have @ and a .",
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
            },
            "id": {
              "description": "Id for the Sales Contact.",
              "example": "U15315",
              "type": "string",
              "minLength": 1,
              "maxLength": 15
            },
            "mobilePhoneNumber": {
              "description": "Sales agent's 10-digit phone number of the format 5131234567.",
              "example": "1234567890",
              "type": "string",
              "pattern": "^[0-9]{10}$"
            }
          },
          "required": [
            "firstName",
            "lastName",
            "email"
          ]
        },
        "installationContact": {
          "id": "InstallationContact",
          "title": "InstallationContact",
          "description": "The Technical Agent who is going to do setup.",
          "type": "object",
          "properties": {
            "firstName": {
              "description": "Contact's first name.",
              "example": "Sam",
              "type": "string",
              "minLength": 1,
              "maxLength": 15,
              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
            },
            "lastName": {
              "description": "Contact's last name.",
              "example": "Doe",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
            },
            "email": {
              "description": "Contact's email address. Must have @ and a .",
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
            },
            "id": {
              "description": "Id for Technical Contact",
              "example": "U15318",
              "type": "string",
              "minLength": 1,
              "maxLength": 15,
              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
            },
            "mobilePhoneNumber": {
              "description": "Contact's 10-digit phone number of the format 5131234567.",
              "example": "1234567890",
              "type": "string",
              "minLength": 10,
              "maxLength": 10,
              "pattern": "([0-9]{10})$"
            }
          },
          "required": [
            "firstName",
            "lastName",
            "email"
          ]
        },
        "routeToSalesRep": {
          "description": "Used to route a application to a worldpay or partner sales rep. By default the API is configured to route to a Worldpay sales rep. If you would like to route to partner (Launchpad UI) please work with your implementation consultant.",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "externalRefId",
        "businessInfo",
        "transactionInfo"
      ]
    }
- BusinessInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "BusinessInfo",
      "title": "BusinessInfo",
      "type": "object",
      "properties": {
        "dbaName": {
          "description": "The merchant name they do business as.  Generally with what their customers know the business.",
          "example": "The DBA Name",
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        },
        "legalName": {
          "description": "Business Legal Name as filed with the IRS.",
          "example": "Timothy Jones",
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        },
        "ownershipType": {
          "title": "OwnershipType",
          "description": "Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).",
          "example": "LLC",
          "type": "string",
          "enum": [
            "GOVERNMENT",
            "SOLE PROPRIETOR",
            "LLC",
            "PARTNERSHIP",
            "FIN INSTITUTION",
            "NON-PROFIT",
            "ASSOCIATION/ESTATE/TRUST",
            "PRIVATE CORPORATION",
            "SEC REGISTERED",
            "PUBLIC CORPORATION",
            "OTHER"
          ]
        },
        "mccCode": {
          "description": "SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.",
          "example": "5812",
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        },
        "businessEstablishedDate": {
          "description": "Date (CCYY-MM-DD) on which the merchant's business was established.",
          "example": "2000-03-23",
          "type": "string",
          "format": "date"
        },
        "websiteUrl": {
          "description": "The URL of the merchant's website.",
          "example": "www.thefoodplace.com",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "numberOfLocation": {
          "description": "Number of current locations.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "federalTaxId": {
          "description": "The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.",
          "example": "123456789",
          "type": "string",
          "minLength": 9,
          "maxLength": 9,
          "pattern": "^[0-9]{9}$"
        },
        "paymentAcceptanceMethod": {
          "description": "The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.",
          "example": [
            "inPerson",
            "onlineSite"
          ],
          "type": "array",
          "items": {
            "title": "PaymentAcceptanceMethod",
            "type": "string",
            "enum": [
              "inPerson",
              "onlineSite",
              "phoneOrMailOrder"
            ]
          }
        },
        "pciadc": {
          "title": "Pciadc",
          "description": "Indication if the merchant has had an account data compromise.",
          "example": "No",
          "type": "string",
          "enum": [
            "Yes",
            "No"
          ]
        },
        "pcidssValidated": {
          "title": "PcidssValidated",
          "description": "Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.",
          "example": "No",
          "type": "string",
          "enum": [
            "Yes",
            "No"
          ]
        },
        "surroundingArea": {
          "title": "SurroundingArea",
          "description": "Type of area surroundning the business.",
          "example": "Commercial",
          "type": "string",
          "enum": [
            "Commercial",
            "Industrial",
            "Residential"
          ]
        },
        "productServiceSold": {
          "description": "Type of goods or services sold.",
          "example": "Food",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "(^[-a-zA-Z0-9_ &()*+,./:;=_'‘]{1,40}$)"
        },
        "ownAddYears": {
          "description": "Years the business has been operating in their current location.",
          "example": 2,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 99.0,
          "format": "int32"
        },
        "lengthOfContract": {
          "description": "Inital contract term in months.",
          "type": "string",
          "pattern": "([0-9]{3})$"
        },
        "seasonal": {
          "title": "Seasonal",
          "description": "Does the business operate seasonally?",
          "example": "Yes",
          "type": "string",
          "enum": [
            "Yes",
            "No"
          ]
        },
        "activeMonths": {
          "description": "The months during which the business is actively operating.",
          "example": [
            "Jan",
            "Feb",
            "Mar"
          ],
          "type": "array",
          "items": {
            "title": "ActiveMonth",
            "type": "string",
            "enum": [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec"
            ]
          }
        },
        "warranty": {
          "title": "Warranty",
          "description": "Does the business offer warranties, dues, subscriptions, memberships, or other extended services?",
          "example": "1 YEAR",
          "type": "string",
          "enum": [
            "1 YEAR",
            "30 DAY",
            "60 DAY",
            "90 DAY",
            "LIFETIME",
            "NO"
          ]
        },
        "returnPolicy": {
          "title": "ReturnPolicy",
          "description": "The business's return policy.",
          "example": "30 Day",
          "type": "string",
          "enum": [
            "3 Day",
            "30 Day",
            "60 Day",
            "60+ Day",
            "ALL SALES FINAL",
            "EXCHANGE ONLY/STORE CREDIT",
            "NO RETURN POLICY"
          ]
        },
        "taxExempt": {
          "title": "TaxExempt",
          "type": "string",
          "enum": [
            "true",
            "false"
          ]
        },
        "acceptCreditCards": {
          "title": "AcceptCreditCards",
          "description": "Does the business accept credit cards?",
          "type": "string",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "required": [
        "dbaName",
        "legalName",
        "ownershipType",
        "mccCode"
      ]
    }
- TransactionInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TransactionInfo",
      "title": "TransactionInfo",
      "type": "object",
      "properties": {
        "annualSalesVolume": {
          "description": "Projected annual sales volume.",
          "example": 20000.12,
          "type": "number",
          "minimum": 0.0,
          "maximum": 9999999999999.99
        },
        "percentRetailSwipedTransactions": {
          "description": "Projected Percentage of daily card-present transactions.",
          "example": 82,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "averageTicket": {
          "description": "Average ticket dollar amount.",
          "example": 2.3,
          "type": "number",
          "minimum": 0.0,
          "maximum": 9999999.99
        },
        "highestTicket": {
          "description": "Highest ticket dollar amount.",
          "example": 32.41,
          "type": "number",
          "minimum": 0.0,
          "maximum": 9999999.99
        },
        "currentProcessor": {
          "description": "the current processor",
          "example": "Global Payments",
          "type": "string"
        },
        "acceptChargebacks": {
          "title": "AcceptChargebacks",
          "description": "Do you have more than 25 chargeback accepted in the last 12 months?",
          "example": "No",
          "type": "string",
          "enum": [
            "Yes",
            "No"
          ]
        },
        "chargebackPercent": {
          "description": "Projected chargeback percentage.\n\n```Required when acceptChargebacks is 'Yes'```\n\n```Optional when acceptChargebacks is null or 'No'.```",
          "example": 0,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "returnPercent": {
          "description": "Projected return percent of  goods sold",
          "example": 10,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "cardNotPresentPercent": {
          "description": "Percent of card not present transactions.",
          "example": 20,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "businessToBusinessPercent": {
          "description": "Percent of business-to-business transactions.",
          "example": 20,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "internetTransactionPercent": {
          "description": "Percent of internet transactions.",
          "example": 10,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "annualCreditSalesVolume": {
          "description": "Projected annual credit card sales volume.",
          "example": 123.32,
          "type": "number",
          "minimum": 0.0,
          "maximum": 999999999.99
        },
        "annualDebitSalesVolume": {
          "description": "Projected annual debit card sales volume.",
          "example": 32.23,
          "type": "number",
          "minimum": 0.0,
          "maximum": 999999999.99
        },
        "annualAmexVolume": {
          "description": "Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```",
          "example": 10000,
          "type": "number",
          "minimum": 0.0,
          "maximum": 999999999.99
        },
        "amexAverageTicket": {
          "description": "AverageTicket dollar amount for Amex.\n ```This field is required when you opt-in for Amex```",
          "example": 2.3,
          "type": "number",
          "minimum": 0.0,
          "maximum": 9999999.99
        },
        "averageNumberofDays": {
          "description": "Average number of days from when cardholder is charged & when products or services are received IN FULL by cardholder.",
          "example": 10,
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        }
      },
      "required": [
        "annualSalesVolume",
        "percentRetailSwipedTransactions"
      ]
    }
- Owner: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Owner",
      "title": "Owner",
      "description": "A Control Owner is required for the following ownership types > LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT",
      "example": {
        "type": "Control Owner Contact",
        "title": "Owner",
        "firstName": "Timothy",
        "middleInitial": "M",
        "lastName": "Jones",
        "phoneNumber": "1234567890",
        "phoneNumberExt": "1234",
        "faxNumber": "1234567890",
        "email": "test@test.com",
        "ownershipPercentage": 23,
        "ssn": "123456789",
        "dob": "2000-03-23",
        "addressLine1": "4355 N Coalwhipe St.",
        "city": "City Town",
        "state": "OH",
        "country": "United States",
        "postalCode": "80123",
        "postalCodeExtension": "1234"
      },
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "The Owner Type. Please note the above Ownership Types where a Control Owner is required.",
          "type": "string",
          "enum": [
            "Control Owner Contact",
            "Owner 1 Contact",
            "Owner 2 Contact",
            "Owner 3 Contact",
            "Owner 4 Contact"
          ]
        },
        "firstName": {
          "description": "First name. Region based validations will be applied to this field.",
          "example": "Todd",
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "lastName": {
          "description": "Last name. Region based validations will be applied to this field.",
          "example": "Davis",
          "type": "string",
          "minLength": 1,
          "maxLength": 25,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumber": {
          "description": "10-digit phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "email": {
          "description": "Email address of the contact. Must have @ and a .",
          "example": "test@gmail.com",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
        },
        "addressLine1": {
          "description": "Address Line 1. Field for house number, street and direction.",
          "example": "4355 N Coalwhipe St.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "city": {
          "example": "Denver",
          "type": "string",
          "minLength": 1,
          "maxLength": 28,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "state": {
          "title": "State",
          "description": "Valid US state, commonwealth, and territory codes are allowed.",
          "example": "CO",
          "type": "string",
          "enum": [
            "AK",
            "AL",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ]
        },
        "country": {
          "description": "Only United States is allowed.",
          "type": "string",
          "enum": [
            "United States"
          ]
        },
        "postalCode": {
          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
          "example": "12345",
          "type": "string",
          "minLength": 5,
          "maxLength": 5,
          "pattern": "^[0-9]{5}$"
        },
        "title": {
          "description": "Required for AMEX acquired merchants otherwise optional.",
          "example": "President",
          "type": "string",
          "minLength": 1,
          "maxLength": 30,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "middleInitial": {
          "description": "Middle initial.",
          "example": "M",
          "type": "string",
          "minLength": 1,
          "maxLength": 1,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumberExt": {
          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
          "example": "1234",
          "type": "string",
          "maxLength": 8,
          "pattern": "^[0-9]{1,8}$"
        },
        "phoneType": {
          "title": "PhoneType",
          "description": "Phone type.",
          "example": "mobile",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "alternatePhone": {
          "description": "10-digit alternate phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "alternatePhoneType": {
          "title": "AlternatePhoneType",
          "description": "Alternate phone type.",
          "example": "home",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "faxNumber": {
          "description": "10-digit fax number of the format 5131234567",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "ownershipPercentage": {
          "description": "Ownership stake percentage.",
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "ssn": {
          "description": "Social security number. Do not include dashes.",
          "example": "123456789",
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "dob": {
          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
          "example": "2000-03-23",
          "type": "string",
          "format": "date"
        },
        "addressLine2": {
          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
          "example": "suite 104",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "postalCodeExtension": {
          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
          "example": "1234",
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "identification": {
          "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
          "type": "array",
          "items": {
            "id": "Identification",
            "title": "Identification",
            "type": "object",
            "properties": {
              "idType": {
                "title": "IdType",
                "description": "Type of ID provided by the owner.",
                "example": "PASSPORT",
                "type": "string",
                "enum": [
                  "ALIEN ID",
                  "CREDIT BUREAU",
                  "DRIVERS LICENSE",
                  "STATE ID",
                  "MEXICAN CONSULATE",
                  "MILITARY ID",
                  "OTHER",
                  "PASSPORT"
                ]
              },
              "idNumber": {
                "description": "Owner's ID number.",
                "example": "312312341",
                "type": "string",
                "maxLength": 40
              },
              "issuedCity": {
                "description": "City in which ID was issued.",
                "example": "City Town",
                "type": "string",
                "maxLength": 28
              },
              "issuedState": {
                "title": "IssuedState",
                "description": "Valid state code where ID was issued.",
                "example": "CO",
                "type": "string",
                "maxLength": 2,
                "enum": [
                  "AK",
                  "AL",
                  "AR",
                  "AS",
                  "AZ",
                  "CA",
                  "CO",
                  "CT",
                  "DC",
                  "DE",
                  "FL",
                  "FM",
                  "GA",
                  "GU",
                  "HI",
                  "IA",
                  "ID",
                  "IL",
                  "IN",
                  "KS",
                  "KY",
                  "LA",
                  "MA",
                  "MD",
                  "ME",
                  "MH",
                  "MI",
                  "MN",
                  "MO",
                  "MP",
                  "MS",
                  "MT",
                  "NC",
                  "ND",
                  "NE",
                  "NH",
                  "NJ",
                  "NM",
                  "NV",
                  "NY",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "PW",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VA",
                  "VI",
                  "VT",
                  "WA",
                  "WI",
                  "WV",
                  "WY"
                ]
              },
              "issuedCountry": {
                "description": "Country where ID was issued.",
                "example": "US",
                "type": "string",
                "maxLength": 2
              },
              "dateIssued": {
                "description": "Date ID was issued (CCYY-MM-DD).",
                "example": "1999-01-30",
                "type": "string",
                "format": "date"
              },
              "dateExpires": {
                "description": "Date ID expires (CCYY-MM-DD).",
                "example": "2020-02-11",
                "type": "string",
                "format": "date"
              }
            },
            "required": [
              "idType",
              "idNumber"
            ]
          }
        }
      },
      "required": [
        "type",
        "firstName",
        "lastName",
        "phoneNumber",
        "email",
        "addressLine1",
        "city",
        "state",
        "country",
        "postalCode"
      ]
    }
- PhoneType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "PhoneType",
      "description": "Phone type.",
      "example": "mobile",
      "type": "string",
      "enum": [
        "mobile",
        "home"
      ]
    }
- AlternatePhoneType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "AlternatePhoneType",
      "description": "Alternate phone type.",
      "example": "home",
      "type": "string",
      "enum": [
        "mobile",
        "home"
      ]
    }
- State: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "State",
      "description": "Valid US state, commonwealth, and territory codes are allowed.",
      "example": "CO",
      "type": "string",
      "enum": [
        "AK",
        "AL",
        "AR",
        "AS",
        "AZ",
        "CA",
        "CO",
        "CT",
        "DC",
        "DE",
        "FL",
        "FM",
        "GA",
        "GU",
        "HI",
        "IA",
        "ID",
        "IL",
        "IN",
        "KS",
        "KY",
        "LA",
        "MA",
        "MD",
        "ME",
        "MH",
        "MI",
        "MN",
        "MO",
        "MP",
        "MS",
        "MT",
        "NC",
        "ND",
        "NE",
        "NH",
        "NJ",
        "NM",
        "NV",
        "NY",
        "OH",
        "OK",
        "OR",
        "PA",
        "PR",
        "PW",
        "RI",
        "SC",
        "SD",
        "TN",
        "TX",
        "UT",
        "VA",
        "VI",
        "VT",
        "WA",
        "WI",
        "WV",
        "WY"
      ]
    }
- Country: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Country",
      "description": "Only United States is allowed.",
      "type": "string",
      "enum": [
        "United States"
      ]
    }
- Identification: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Identification",
      "title": "Identification",
      "type": "object",
      "properties": {
        "idType": {
          "title": "IdType",
          "description": "Type of ID provided by the owner.",
          "example": "PASSPORT",
          "type": "string",
          "enum": [
            "ALIEN ID",
            "CREDIT BUREAU",
            "DRIVERS LICENSE",
            "STATE ID",
            "MEXICAN CONSULATE",
            "MILITARY ID",
            "OTHER",
            "PASSPORT"
          ]
        },
        "idNumber": {
          "description": "Owner's ID number.",
          "example": "312312341",
          "type": "string",
          "maxLength": 40
        },
        "issuedCity": {
          "description": "City in which ID was issued.",
          "example": "City Town",
          "type": "string",
          "maxLength": 28
        },
        "issuedState": {
          "title": "IssuedState",
          "description": "Valid state code where ID was issued.",
          "example": "CO",
          "type": "string",
          "maxLength": 2,
          "enum": [
            "AK",
            "AL",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ]
        },
        "issuedCountry": {
          "description": "Country where ID was issued.",
          "example": "US",
          "type": "string",
          "maxLength": 2
        },
        "dateIssued": {
          "description": "Date ID was issued (CCYY-MM-DD).",
          "example": "1999-01-30",
          "type": "string",
          "format": "date"
        },
        "dateExpires": {
          "description": "Date ID expires (CCYY-MM-DD).",
          "example": "2020-02-11",
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "idType",
        "idNumber"
      ]
    }
- Guarantor: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Guarantor",
      "title": "Guarantor",
      "type": "object",
      "properties": {
        "type": {
          "example": "Guarantor 1 Contact",
          "type": "string",
          "enum": [
            "Guarantor 1 Contact"
          ]
        },
        "firstName": {
          "description": "First name. Region based validations will be applied to this field.",
          "example": "Todd",
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "lastName": {
          "description": "Last name. Region based validations will be applied to this field.",
          "example": "Davis",
          "type": "string",
          "minLength": 1,
          "maxLength": 25,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumber": {
          "description": "10-digit phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "email": {
          "description": "Email address of the contact. Must have @ and a .",
          "example": "test@gmail.com",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
        },
        "addressLine1": {
          "description": "Address Line 1. Field for house number, street and direction.",
          "example": "4355 N Coalwhipe St.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "city": {
          "example": "Denver",
          "type": "string",
          "minLength": 1,
          "maxLength": 28,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "state": {
          "title": "State",
          "description": "Valid US state, commonwealth, and territory codes are allowed.",
          "example": "CO",
          "type": "string",
          "enum": [
            "AK",
            "AL",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ]
        },
        "country": {
          "description": "Only United States is allowed.",
          "type": "string",
          "enum": [
            "United States"
          ]
        },
        "postalCode": {
          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
          "example": "12345",
          "type": "string",
          "minLength": 5,
          "maxLength": 5,
          "pattern": "^[0-9]{5}$"
        },
        "title": {
          "description": "Required for AMEX acquired merchants otherwise optional.",
          "example": "President",
          "type": "string",
          "minLength": 1,
          "maxLength": 30,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "middleInitial": {
          "description": "Middle initial.",
          "example": "M",
          "type": "string",
          "minLength": 1,
          "maxLength": 1,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumberExt": {
          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
          "example": "1234",
          "type": "string",
          "maxLength": 8,
          "pattern": "^[0-9]{1,8}$"
        },
        "phoneType": {
          "title": "PhoneType",
          "description": "Phone type.",
          "example": "mobile",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "alternatePhone": {
          "description": "10-digit alternate phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "alternatePhoneType": {
          "title": "AlternatePhoneType",
          "description": "Alternate phone type.",
          "example": "home",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "faxNumber": {
          "description": "10-digit fax number of the format 5131234567",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "ownershipPercentage": {
          "description": "Ownership stake percentage.",
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "ssn": {
          "description": "Social security number. Do not include dashes.",
          "example": "123456789",
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "dob": {
          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
          "example": "2000-03-23",
          "type": "string",
          "format": "date"
        },
        "addressLine2": {
          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
          "example": "suite 104",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "postalCodeExtension": {
          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
          "example": "1234",
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "identification": {
          "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
          "type": "array",
          "items": {
            "id": "Identification",
            "title": "Identification",
            "type": "object",
            "properties": {
              "idType": {
                "title": "IdType",
                "description": "Type of ID provided by the owner.",
                "example": "PASSPORT",
                "type": "string",
                "enum": [
                  "ALIEN ID",
                  "CREDIT BUREAU",
                  "DRIVERS LICENSE",
                  "STATE ID",
                  "MEXICAN CONSULATE",
                  "MILITARY ID",
                  "OTHER",
                  "PASSPORT"
                ]
              },
              "idNumber": {
                "description": "Owner's ID number.",
                "example": "312312341",
                "type": "string",
                "maxLength": 40
              },
              "issuedCity": {
                "description": "City in which ID was issued.",
                "example": "City Town",
                "type": "string",
                "maxLength": 28
              },
              "issuedState": {
                "title": "IssuedState",
                "description": "Valid state code where ID was issued.",
                "example": "CO",
                "type": "string",
                "maxLength": 2,
                "enum": [
                  "AK",
                  "AL",
                  "AR",
                  "AS",
                  "AZ",
                  "CA",
                  "CO",
                  "CT",
                  "DC",
                  "DE",
                  "FL",
                  "FM",
                  "GA",
                  "GU",
                  "HI",
                  "IA",
                  "ID",
                  "IL",
                  "IN",
                  "KS",
                  "KY",
                  "LA",
                  "MA",
                  "MD",
                  "ME",
                  "MH",
                  "MI",
                  "MN",
                  "MO",
                  "MP",
                  "MS",
                  "MT",
                  "NC",
                  "ND",
                  "NE",
                  "NH",
                  "NJ",
                  "NM",
                  "NV",
                  "NY",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "PW",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VA",
                  "VI",
                  "VT",
                  "WA",
                  "WI",
                  "WV",
                  "WY"
                ]
              },
              "issuedCountry": {
                "description": "Country where ID was issued.",
                "example": "US",
                "type": "string",
                "maxLength": 2
              },
              "dateIssued": {
                "description": "Date ID was issued (CCYY-MM-DD).",
                "example": "1999-01-30",
                "type": "string",
                "format": "date"
              },
              "dateExpires": {
                "description": "Date ID expires (CCYY-MM-DD).",
                "example": "2020-02-11",
                "type": "string",
                "format": "date"
              }
            },
            "required": [
              "idType",
              "idNumber"
            ]
          }
        }
      },
      "required": [
        "type",
        "firstName",
        "lastName",
        "phoneNumber",
        "email",
        "addressLine1",
        "city",
        "state",
        "country",
        "postalCode"
      ]
    }
- AuthorizedSigner: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AuthorizedSigner",
      "title": "AuthorizedSigner",
      "type": "object",
      "properties": {
        "roleName": {
          "title": "RoleName",
          "description": "The role of the signer. Please note the below.\n\n 1) Merchant role name is mandatory.\n 2) Required fields indicated in schema are those required for all role names other than \"SalesRep\"\n 3) The \"SalesRep\" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email\n 4) The \"Signer2\" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.",
          "example": "Merchant",
          "type": "string",
          "enum": [
            "SalesRep",
            "Merchant",
            "Reviewer",
            "Signer2",
            "Signer3",
            "Signer4",
            "Signer5",
            "Signer6",
            "Signer7",
            "Signer8"
          ]
        },
        "signingExperience": {
          "title": "SigningExperience",
          "description": "Signing ceremony type",
          "example": "email",
          "type": "string",
          "enum": [
            "embed",
            "email",
            "wet"
          ]
        },
        "signingOrder": {
          "description": "Define the signing order for multiple signers",
          "example": "2",
          "type": "string"
        },
        "firstName": {
          "description": "First name. Region based validations will be applied to this field.",
          "example": "Todd",
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "lastName": {
          "description": "Last name. Region based validations will be applied to this field.",
          "example": "Davis",
          "type": "string",
          "minLength": 1,
          "maxLength": 25,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumber": {
          "description": "10-digit phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "email": {
          "description": "Email address of the contact. Must have @ and a .",
          "example": "test@gmail.com",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
        },
        "ssn": {
          "description": "Social security number. Do not include dashes.",
          "example": "123456789",
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "dob": {
          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
          "example": "2000-03-23",
          "type": "string",
          "format": "date"
        },
        "addressLine1": {
          "description": "Address Line 1. Field for house number, street and direction.",
          "example": "4355 N Coalwhipe St.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "city": {
          "example": "Denver",
          "type": "string",
          "minLength": 1,
          "maxLength": 28,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "state": {
          "title": "State",
          "description": "Valid US state, commonwealth, and territory codes are allowed.",
          "example": "CO",
          "type": "string",
          "enum": [
            "AK",
            "AL",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ]
        },
        "country": {
          "description": "Only United States is allowed.",
          "type": "string",
          "enum": [
            "United States"
          ]
        },
        "postalCode": {
          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
          "example": "12345",
          "type": "string",
          "minLength": 5,
          "maxLength": 5,
          "pattern": "^[0-9]{5}$"
        },
        "title": {
          "description": "Required for AMEX acquired merchants otherwise optional.",
          "example": "President",
          "type": "string",
          "minLength": 1,
          "maxLength": 30,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "middleInitial": {
          "description": "Middle initial.",
          "example": "M",
          "type": "string",
          "minLength": 1,
          "maxLength": 1,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumberExt": {
          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
          "example": "1234",
          "type": "string",
          "maxLength": 8,
          "pattern": "^[0-9]{1,8}$"
        },
        "phoneType": {
          "title": "PhoneType",
          "description": "Phone type.",
          "example": "mobile",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "alternatePhone": {
          "description": "10-digit alternate phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "alternatePhoneType": {
          "title": "AlternatePhoneType",
          "description": "Alternate phone type.",
          "example": "home",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "faxNumber": {
          "description": "10-digit fax number of the format 5131234567",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "addressLine2": {
          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
          "example": "suite 104",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "postalCodeExtension": {
          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
          "example": "1234",
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "identification": {
          "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
          "type": "array",
          "items": {
            "id": "Identification",
            "title": "Identification",
            "type": "object",
            "properties": {
              "idType": {
                "title": "IdType",
                "description": "Type of ID provided by the owner.",
                "example": "PASSPORT",
                "type": "string",
                "enum": [
                  "ALIEN ID",
                  "CREDIT BUREAU",
                  "DRIVERS LICENSE",
                  "STATE ID",
                  "MEXICAN CONSULATE",
                  "MILITARY ID",
                  "OTHER",
                  "PASSPORT"
                ]
              },
              "idNumber": {
                "description": "Owner's ID number.",
                "example": "312312341",
                "type": "string",
                "maxLength": 40
              },
              "issuedCity": {
                "description": "City in which ID was issued.",
                "example": "City Town",
                "type": "string",
                "maxLength": 28
              },
              "issuedState": {
                "title": "IssuedState",
                "description": "Valid state code where ID was issued.",
                "example": "CO",
                "type": "string",
                "maxLength": 2,
                "enum": [
                  "AK",
                  "AL",
                  "AR",
                  "AS",
                  "AZ",
                  "CA",
                  "CO",
                  "CT",
                  "DC",
                  "DE",
                  "FL",
                  "FM",
                  "GA",
                  "GU",
                  "HI",
                  "IA",
                  "ID",
                  "IL",
                  "IN",
                  "KS",
                  "KY",
                  "LA",
                  "MA",
                  "MD",
                  "ME",
                  "MH",
                  "MI",
                  "MN",
                  "MO",
                  "MP",
                  "MS",
                  "MT",
                  "NC",
                  "ND",
                  "NE",
                  "NH",
                  "NJ",
                  "NM",
                  "NV",
                  "NY",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "PW",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VA",
                  "VI",
                  "VT",
                  "WA",
                  "WI",
                  "WV",
                  "WY"
                ]
              },
              "issuedCountry": {
                "description": "Country where ID was issued.",
                "example": "US",
                "type": "string",
                "maxLength": 2
              },
              "dateIssued": {
                "description": "Date ID was issued (CCYY-MM-DD).",
                "example": "1999-01-30",
                "type": "string",
                "format": "date"
              },
              "dateExpires": {
                "description": "Date ID expires (CCYY-MM-DD).",
                "example": "2020-02-11",
                "type": "string",
                "format": "date"
              }
            },
            "required": [
              "idType",
              "idNumber"
            ]
          }
        }
      },
      "required": [
        "roleName",
        "signingExperience",
        "signingOrder",
        "firstName",
        "lastName",
        "phoneNumber",
        "email",
        "ssn",
        "dob",
        "addressLine1",
        "city",
        "state",
        "country",
        "postalCode"
      ]
    }
- RoleName: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "RoleName",
      "description": "The role of the signer. Please note the below.\n\n 1) Merchant role name is mandatory.\n 2) Required fields indicated in schema are those required for all role names other than \"SalesRep\"\n 3) The \"SalesRep\" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email\n 4) The \"Signer2\" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.",
      "example": "Merchant",
      "type": "string",
      "enum": [
        "SalesRep",
        "Merchant",
        "Reviewer",
        "Signer2",
        "Signer3",
        "Signer4",
        "Signer5",
        "Signer6",
        "Signer7",
        "Signer8"
      ]
    }
- SigningExperience: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "SigningExperience",
      "description": "Signing ceremony type",
      "example": "email",
      "type": "string",
      "enum": [
        "embed",
        "email",
        "wet"
      ]
    }
- Contact: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Contact",
      "title": "Contact",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type1",
          "description": "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST.",
          "example": "Primary Contact",
          "type": "string",
          "enum": [
            "Primary Contact",
            "Accounting Contact",
            "Customer Service Contact",
            "Shipping Contact",
            "Third Party Contact",
            "Vendor Contact Info",
            "PCI Contact",
            "Corporate"
          ]
        },
        "firstName": {
          "description": "First name. Region based validations will be applied to this field.",
          "example": "Todd",
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "lastName": {
          "description": "Last name. Region based validations will be applied to this field.",
          "example": "Davis",
          "type": "string",
          "minLength": 1,
          "maxLength": 25,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumber": {
          "description": "10-digit phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "email": {
          "description": "Email address of the contact. Must have @ and a .",
          "example": "test@gmail.com",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
        },
        "title": {
          "description": "Required for AMEX acquired merchants otherwise optional.",
          "example": "President",
          "type": "string",
          "minLength": 1,
          "maxLength": 30,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "middleInitial": {
          "description": "Middle initial.",
          "example": "M",
          "type": "string",
          "minLength": 1,
          "maxLength": 1,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "ssn": {
          "description": "Social security number. Do not include dashes.",
          "example": "123456789",
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "birthDate": {
          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
          "example": "2000-03-23",
          "type": "string",
          "format": "date"
        },
        "phoneNumberExt": {
          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
          "example": "1234",
          "type": "string",
          "maxLength": 8,
          "pattern": "^[0-9]{1,8}$"
        },
        "phoneType": {
          "title": "PhoneType",
          "description": "Phone type.",
          "example": "mobile",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "alternatePhone": {
          "description": "10-digit alternate phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "alternatePhoneType": {
          "title": "AlternatePhoneType",
          "description": "Alternate phone type.",
          "example": "home",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "faxNumber": {
          "description": "10-digit fax number of the format 5131234567",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        }
      },
      "required": [
        "type",
        "firstName",
        "lastName",
        "phoneNumber",
        "email"
      ]
    }
- Address: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Address",
      "title": "Address",
      "type": "object",
      "properties": {
        "type": {
          "title": "AddressType",
          "description": "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory.",
          "example": "Physical Address",
          "type": "string",
          "enum": [
            "Mailing Address",
            "Physical Address",
            "Shipping Address"
          ]
        },
        "addressLine1": {
          "description": "Address Line 1. Field for house number, street and direction.",
          "example": "4355 N Coalwhipe St.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "city": {
          "example": "Denver",
          "type": "string",
          "minLength": 1,
          "maxLength": 28,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "state": {
          "title": "State",
          "description": "Valid US state, commonwealth, and territory codes are allowed.",
          "example": "CO",
          "type": "string",
          "enum": [
            "AK",
            "AL",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ]
        },
        "country": {
          "description": "Only United States is allowed.",
          "type": "string",
          "enum": [
            "United States"
          ]
        },
        "postalCode": {
          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
          "example": "12345",
          "type": "string",
          "minLength": 5,
          "maxLength": 5,
          "pattern": "^[0-9]{5}$"
        },
        "addressLine2": {
          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
          "example": "suite 104",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "postalCodeExtension": {
          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
          "example": "1234",
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        }
      },
      "required": [
        "type",
        "addressLine1",
        "city",
        "state",
        "country",
        "postalCode"
      ]
    }
- AddressType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "AddressType",
      "description": "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory.",
      "example": "Physical Address",
      "type": "string",
      "enum": [
        "Mailing Address",
        "Physical Address",
        "Shipping Address"
      ]
    }
- BankAccount: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "BankAccount",
      "title": "BankAccount",
      "type": "object",
      "properties": {
        "ddaType": {
          "title": "DdaType",
          "description": "Direct deposit account type.",
          "example": "Checking",
          "type": "string",
          "enum": [
            "Checking",
            "Savings"
          ]
        },
        "achType": {
          "title": "AchType",
          "description": "Check deposit type",
          "example": "Commercial Checking",
          "type": "string",
          "enum": [
            "Commercial Checking",
            "Private Checking"
          ]
        },
        "accountNumber": {
          "description": "Direct deposit account number.  Maximum 17 characters.",
          "example": "011401545",
          "type": "string",
          "minLength": 1,
          "maxLength": 17
        },
        "routingNumber": {
          "description": "Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.",
          "example": "102000076",
          "type": "string",
          "minLength": 9,
          "maxLength": 9
        },
        "bankName": {
          "description": "Bank name used for credit card processing services.",
          "example": "Bank name",
          "type": "string"
        }
      }
    }
- SalesAgent: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SalesAgent",
      "title": "SalesAgent",
      "description": "The agent who is submitting the deal.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Sales agent's first name.",
          "example": "John",
          "type": "string",
          "minLength": 1,
          "maxLength": 15
        },
        "lastName": {
          "description": "Sales agent's last name.",
          "example": "Doe",
          "type": "string",
          "minLength": 1,
          "maxLength": 25
        },
        "email": {
          "description": "Sales agent's email address.  Must have @ and a .",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
        },
        "id": {
          "description": "Id for the Sales Contact.",
          "example": "U15315",
          "type": "string",
          "minLength": 1,
          "maxLength": 15
        },
        "mobilePhoneNumber": {
          "description": "Sales agent's 10-digit phone number of the format 5131234567.",
          "example": "1234567890",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email"
      ]
    }
- InstallationContact: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "InstallationContact",
      "title": "InstallationContact",
      "description": "The Technical Agent who is going to do setup.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Contact's first name.",
          "example": "Sam",
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "lastName": {
          "description": "Contact's last name.",
          "example": "Doe",
          "type": "string",
          "minLength": 1,
          "maxLength": 25,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "email": {
          "description": "Contact's email address. Must have @ and a .",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
        },
        "id": {
          "description": "Id for Technical Contact",
          "example": "U15318",
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "mobilePhoneNumber": {
          "description": "Contact's 10-digit phone number of the format 5131234567.",
          "example": "1234567890",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "([0-9]{10})$"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email"
      ]
    }
- ErrorResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ErrorResponse",
      "title": "ErrorResponse",
      "type": "object",
      "properties": {
        "httpStatusCode": {
          "example": 404,
          "type": "integer",
          "format": "int32"
        },
        "httpStatusMessage": {
          "example": "STATUS-MESSAGE",
          "type": "string"
        },
        "errors": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Error",
            "title": "Error",
            "type": "object",
            "properties": {
              "errorCode": {
                "example": "ERROR_CODE",
                "type": "string"
              },
              "errorMessage": {
                "example": "Error message here.",
                "type": "string"
              },
              "target": {
                "example": "Target",
                "type": "string"
              }
            }
          }
        }
      }
    }
- Error: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Error",
      "title": "Error",
      "type": "object",
      "properties": {
        "errorCode": {
          "example": "ERROR_CODE",
          "type": "string"
        },
        "errorMessage": {
          "example": "Error message here.",
          "type": "string"
        },
        "target": {
          "example": "Target",
          "type": "string"
        }
      }
    }
- ExistingApplication_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ExistingApplication_1",
      "title": "ExistingApplication_1",
      "type": "object",
      "properties": {
        "externalRefId": {
          "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
          "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
          "type": "string",
          "maxLength": 36,
          "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
        },
        "businessInfo": {
          "id": "BusinessInfo_1",
          "title": "BusinessInfo_1",
          "type": "object",
          "properties": {
            "dbaName": {
              "description": "The merchant name they do business as.  Generally with what their customers know the business.",
              "example": "The DBA Name",
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            },
            "legalName": {
              "description": "Business Legal Name as filed with the IRS.",
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "pattern": "^([a-z0-9& -]{1,40})$"
            },
            "ownershipType": {
              "title": "OwnershipType",
              "description": "Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).",
              "example": "LLC",
              "type": "string",
              "enum": [
                "GOVERNMENT",
                "SOLE PROPRIETOR",
                "LLC",
                "PARTNERSHIP",
                "FIN INSTITUTION",
                "NON-PROFIT",
                "ASSOCIATION/ESTATE/TRUST",
                "PRIVATE CORPORATION",
                "SEC REGISTERED",
                "PUBLIC CORPORATION",
                "OTHER"
              ]
            },
            "mccCode": {
              "description": "SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.",
              "example": "5812",
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            },
            "businessEstablishedDate": {
              "description": "Date (CCYY-MM-DD) on which the merchant's business was established.",
              "example": "2000-03-23",
              "type": "string",
              "format": "date"
            },
            "websiteUrl": {
              "description": "The URL of the merchant's website.",
              "example": "www.thefoodplace.com",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "numberOfLocation": {
              "description": "Number of current locations.",
              "example": 2,
              "type": "integer",
              "format": "int32"
            },
            "federalTaxId": {
              "description": "The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.The full list of restricted federal tax id-\n  “000000000” “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666” \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
              "example": "123456781",
              "type": "string",
              "minLength": 9,
              "maxLength": 9,
              "pattern": "^([a-z0-9& -]{1,40})$"
            },
            "paymentAcceptanceMethod": {
              "description": "The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.",
              "example": [
                "inPerson",
                "onlineSite"
              ],
              "type": "array",
              "items": {
                "title": "PaymentAcceptanceMethod",
                "type": "string",
                "enum": [
                  "inPerson",
                  "onlineSite",
                  "phoneOrMailOrder"
                ]
              }
            },
            "pciadc": {
              "title": "Pciadc",
              "description": "Indication if the merchant has had an account data compromise.",
              "example": "No",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "pcidssValidated": {
              "title": "PcidssValidated",
              "description": "Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.",
              "example": "No",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "surroundingArea": {
              "title": "SurroundingArea",
              "description": "Type of area surroundning the business.",
              "example": "Commercial",
              "type": "string",
              "enum": [
                "Commercial",
                "Industrial",
                "Residential"
              ]
            },
            "productServiceSold": {
              "description": "Type of goods or services sold.",
              "example": "Food",
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "pattern": "(^[-a-zA-Z0-9_ &()*+,./:;=_'‘]{1,40}$)"
            },
            "ownAddYears": {
              "description": "Years the business has been operating in their current location.",
              "example": 2,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 99.0,
              "format": "int32"
            },
            "lengthOfContract": {
              "description": "Inital contract term in months.",
              "type": "string",
              "pattern": "([0-9]{3})$"
            },
            "seasonal": {
              "title": "Seasonal",
              "description": "Does the business operate seasonally?",
              "example": "Yes",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "activeMonths": {
              "description": "The months during which the business is actively operating.",
              "example": [
                "Jan",
                "Feb",
                "Mar"
              ],
              "type": "array",
              "items": {
                "title": "ActiveMonth",
                "type": "string",
                "enum": [
                  "Jan",
                  "Feb",
                  "Mar",
                  "Apr",
                  "May",
                  "Jun",
                  "Jul",
                  "Aug",
                  "Sep",
                  "Oct",
                  "Nov",
                  "Dec"
                ]
              }
            },
            "warranty": {
              "title": "Warranty",
              "description": "Does the business offer warranties, dues, subscriptions, memberships, or other extended services?",
              "example": "1 YEAR",
              "type": "string",
              "enum": [
                "1 YEAR",
                "30 DAY",
                "60 DAY",
                "90 DAY",
                "LIFETIME",
                "NO"
              ]
            },
            "returnPolicy": {
              "title": "ReturnPolicy",
              "description": "The business's return policy.",
              "example": "30 Day",
              "type": "string",
              "enum": [
                "3 Day",
                "30 Day",
                "60 Day",
                "60+ Day",
                "ALL SALES FINAL",
                "EXCHANGE ONLY/STORE CREDIT",
                "NO RETURN POLICY"
              ]
            },
            "taxExempt": {
              "title": "TaxExempt",
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "acceptCreditCards": {
              "title": "AcceptCreditCards",
              "description": "Does the business accept credit cards?",
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "govOwnedMerchantCountry": {
              "description": "If merchant is a government entity or an entity at least 50% owned or controlled by government entity than provide 2 digit country code which belongs to the country.",
              "example": "US",
              "type": "string"
            }
          },
          "required": [
            "dbaName",
            "legalName",
            "ownershipType",
            "mccCode"
          ]
        },
        "transactionInfo": {
          "id": "TransactionInfo_1",
          "title": "TransactionInfo_1",
          "type": "object",
          "properties": {
            "annualSalesVolume": {
              "description": "Projected annual sales volume.",
              "example": 20000.12,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999999999.99
            },
            "percentRetailSwipedTransactions": {
              "description": "Projected Percentage of daily card-present transactions.",
              "example": 82,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "averageTicket": {
              "description": "Average ticket dollar amount.",
              "example": 2.3,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999.99
            },
            "highestTicket": {
              "description": "Highest ticket dollar amount.",
              "example": 32.41,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999.99
            },
            "currentProcessor": {
              "description": "the current processor",
              "example": "Global Payments",
              "type": "string"
            },
            "acceptChargebacks": {
              "title": "AcceptChargebacks",
              "description": "Do you have more than 25 chargeback accepted in the last 12 months?",
              "example": "No",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "chargebackPercent": {
              "description": "Projected chargeback percentage.\n\n```Required when acceptChargebacks is 'Yes'```\n\n```Optional when acceptChargebacks is null or 'No'.```",
              "example": 0,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "returnPercent": {
              "description": "Projected return percent of  goods sold",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "cardNotPresentPercent": {
              "description": "Percent of card not present transactions.",
              "example": 20,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "businessToBusinessPercent": {
              "description": "Percent of business-to-business transactions.",
              "example": 20,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "internetTransactionPercent": {
              "description": "Percent of internet transactions.",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "inPersonTransactionPercent": {
              "description": "Percent of in person transactions.",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "motoTransactionPercent": {
              "description": "Percent of mail or phone order transactions.",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "annualCreditSalesVolume": {
              "description": "Projected annual credit card sales volume.",
              "example": 123.32,
              "type": "number",
              "minimum": 0.0,
              "maximum": 999999999.99
            },
            "annualDebitSalesVolume": {
              "description": "Projected annual debit card sales volume.",
              "example": 32.23,
              "type": "number",
              "minimum": 0.0,
              "maximum": 999999999.99
            },
            "annualAmexVolume": {
              "description": "Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```",
              "example": 10000,
              "type": "number",
              "minimum": 0.0,
              "maximum": 999999999.99
            },
            "amexAverageTicket": {
              "description": "AverageTicket dollar amount for Amex.\n ```This field is required when you opt-in for Amex```",
              "example": 2.3,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999.99
            },
            "averageNumberofDays": {
              "description": "Average number of days from when cardholder is charged & when products or services are received IN FULL by cardholder.",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 365.0,
              "format": "int32"
            },
            "needsProcessingBy": {
              "description": "Date (CCYY-MM-DD) by which the Equipment needs to be setup. This field may be required for a given partner.",
              "example": "2022-11-01",
              "type": "string",
              "format": "date"
            }
          },
          "required": [
            "annualSalesVolume",
            "percentRetailSwipedTransactions"
          ]
        },
        "leadSource": {
          "description": "The source of a lead.",
          "example": "Activate",
          "type": "string",
          "maxLength": 12
        },
        "owners": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Owner_1",
            "title": "Owner_1",
            "description": "A Control Owner is required for the following ownership types > LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT",
            "example": {
              "type": "Control Owner Contact",
              "title": "Owner",
              "firstName": "Timothy",
              "middleInitial": "M",
              "lastName": "Jones",
              "phoneNumber": "1234567890",
              "phoneNumberExt": "1234",
              "faxNumber": "1234567890",
              "email": "test@test.com",
              "ownershipPercentage": 23,
              "ssn": "123456789",
              "dob": "2000-03-23",
              "addressLine1": "4355 N Coalwhipe St.",
              "city": "City Town",
              "state": "OH",
              "country": "United States",
              "postalCode": "80123",
              "postalCodeExtension": "1234"
            },
            "type": "object",
            "properties": {
              "type": {
                "title": "Type",
                "description": "The Owner Type. Please note the above Ownership Types where a Control Owner is required.",
                "type": "string",
                "enum": [
                  "Control Owner Contact",
                  "Owner 1 Contact",
                  "Owner 2 Contact",
                  "Owner 3 Contact",
                  "Owner 4 Contact"
                ]
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "title": "State_1",
                "description": "Valid US state, commonwealth, and territory codes are allowed.",
                "example": "CO",
                "type": "string",
                "enum": [
                  "AK",
                  "AL",
                  "AR",
                  "AS",
                  "AZ",
                  "CA",
                  "CO",
                  "CT",
                  "DC",
                  "DE",
                  "FL",
                  "FM",
                  "GA",
                  "GU",
                  "HI",
                  "IA",
                  "ID",
                  "IL",
                  "IN",
                  "KS",
                  "KY",
                  "LA",
                  "MA",
                  "MD",
                  "ME",
                  "MH",
                  "MI",
                  "MN",
                  "MO",
                  "MP",
                  "MS",
                  "MT",
                  "NC",
                  "ND",
                  "NE",
                  "NH",
                  "NJ",
                  "NM",
                  "NV",
                  "NY",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "PW",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UM",
                  "UT",
                  "VA",
                  "VI",
                  "VT",
                  "WA",
                  "WI",
                  "WV",
                  "WY"
                ]
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "title": "PhoneType",
                "description": "Phone type.",
                "example": "mobile",
                "type": "string",
                "enum": [
                  "mobile",
                  "home"
                ]
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "title": "AlternatePhoneType",
                "description": "Alternate phone type.",
                "example": "home",
                "type": "string",
                "enum": [
                  "mobile",
                  "home"
                ]
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "ownershipPercentage": {
                "description": "Ownership stake percentage.",
                "type": "integer",
                "minimum": 0.0,
                "maximum": 100.0,
                "format": "int32"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "dob": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              },
              "identification": {
                "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                "type": "array",
                "items": {
                  "id": "Identification",
                  "title": "Identification",
                  "type": "object",
                  "properties": {
                    "idType": {
                      "title": "IdType",
                      "description": "Type of ID provided by the owner.",
                      "example": "PASSPORT",
                      "type": "string",
                      "enum": [
                        "ALIEN ID",
                        "CREDIT BUREAU",
                        "DRIVERS LICENSE",
                        "STATE ID",
                        "MEXICAN CONSULATE",
                        "MILITARY ID",
                        "OTHER",
                        "PASSPORT"
                      ]
                    },
                    "idNumber": {
                      "description": "Owner's ID number.",
                      "example": "312312341",
                      "type": "string",
                      "maxLength": 40
                    },
                    "issuedCity": {
                      "description": "City in which ID was issued.",
                      "example": "City Town",
                      "type": "string",
                      "maxLength": 28
                    },
                    "issuedState": {
                      "title": "IssuedState",
                      "description": "Valid state code where ID was issued.",
                      "example": "CO",
                      "type": "string",
                      "maxLength": 2,
                      "enum": [
                        "AK",
                        "AL",
                        "AR",
                        "AS",
                        "AZ",
                        "CA",
                        "CO",
                        "CT",
                        "DC",
                        "DE",
                        "FL",
                        "FM",
                        "GA",
                        "GU",
                        "HI",
                        "IA",
                        "ID",
                        "IL",
                        "IN",
                        "KS",
                        "KY",
                        "LA",
                        "MA",
                        "MD",
                        "ME",
                        "MH",
                        "MI",
                        "MN",
                        "MO",
                        "MP",
                        "MS",
                        "MT",
                        "NC",
                        "ND",
                        "NE",
                        "NH",
                        "NJ",
                        "NM",
                        "NV",
                        "NY",
                        "OH",
                        "OK",
                        "OR",
                        "PA",
                        "PR",
                        "PW",
                        "RI",
                        "SC",
                        "SD",
                        "TN",
                        "TX",
                        "UT",
                        "VA",
                        "VI",
                        "VT",
                        "WA",
                        "WI",
                        "WV",
                        "WY"
                      ]
                    },
                    "issuedCountry": {
                      "description": "Country where ID was issued.",
                      "example": "US",
                      "type": "string",
                      "maxLength": 2
                    },
                    "dateIssued": {
                      "description": "Date ID was issued (CCYY-MM-DD).",
                      "example": "1999-01-30",
                      "type": "string",
                      "format": "date"
                    },
                    "dateExpires": {
                      "description": "Date ID expires (CCYY-MM-DD).",
                      "example": "2020-02-11",
                      "type": "string",
                      "format": "date"
                    }
                  },
                  "required": [
                    "idType",
                    "idNumber"
                  ]
                }
              }
            },
            "required": [
              "type",
              "firstName",
              "lastName",
              "phoneNumber",
              "email",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          }
        },
        "guarantors": {
          "description": "Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.",
          "type": "array",
          "items": {
            "id": "Guarantor_1",
            "title": "Guarantor_1",
            "type": "object",
            "properties": {
              "type": {
                "title": "Type3",
                "example": "Guarantor 1 Contact",
                "type": "string",
                "enum": [
                  "Guarantor 1 Contact",
                  "Guarantor 2 Contact",
                  "Guarantor 3 Contact",
                  "Guarantor 4 Contact"
                ]
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "$ref": "Owner_1#/properties/state"
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "$ref": "Owner_1#/properties/phoneType"
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "$ref": "Owner_1#/properties/alternatePhoneType"
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "ownershipPercentage": {
                "description": "Ownership stake percentage.",
                "type": "integer",
                "minimum": 0.0,
                "maximum": 100.0,
                "format": "int32"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "dob": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              },
              "identification": {
                "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                "type": "array",
                "items": {
                  "$ref": "Identification"
                }
              }
            },
            "required": [
              "type",
              "firstName",
              "lastName",
              "phoneNumber",
              "email",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          },
          "uniqueItems": true
        },
        "authorizedSigners": {
          "description": "",
          "type": "array",
          "items": {
            "id": "AuthorizedSigner_1",
            "title": "AuthorizedSigner_1",
            "type": "object",
            "properties": {
              "roleName": {
                "title": "RoleName_1",
                "description": "The role of the signer. Please note the below.\n\n 1) Merchant role name is mandatory.\n 2) Required fields indicated in schema are those required for all role names other than \"SalesRep\"\n 3) The \"SalesRep\" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email\n 4) The \"Signer2\" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.",
                "example": "Merchant",
                "type": "string",
                "enum": [
                  "SalesRep",
                  "Merchant",
                  "Signer2",
                  "Signer3",
                  "Signer4",
                  "Signer5",
                  "Signer6",
                  "Signer7",
                  "Signer8",
                  "Guarantor2",
                  "Guarantor3",
                  "Guarantor4"
                ]
              },
              "signingExperience": {
                "title": "SigningExperience",
                "description": "Signing ceremony type",
                "example": "email",
                "type": "string",
                "enum": [
                  "embed",
                  "email",
                  "wet"
                ]
              },
              "signingOrder": {
                "description": "Define the signing order for multiple signers",
                "example": "2",
                "type": "string"
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "dob": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "$ref": "Owner_1#/properties/state"
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "$ref": "Owner_1#/properties/phoneType"
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "$ref": "Owner_1#/properties/alternatePhoneType"
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              },
              "identification": {
                "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                "type": "array",
                "items": {
                  "$ref": "Identification"
                }
              }
            },
            "required": [
              "roleName",
              "signingExperience",
              "signingOrder",
              "firstName",
              "lastName",
              "phoneNumber",
              "email",
              "ssn",
              "dob",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          }
        },
        "contacts": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Contact_1",
            "title": "Contact_1",
            "type": "object",
            "properties": {
              "type": {
                "title": "Type4",
                "description": "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST.",
                "example": "Primary Contact",
                "type": "string",
                "enum": [
                  "Primary Contact",
                  "Store Primary Contact",
                  "Accounting Contact",
                  "Customer Service Contact",
                  "Shipping Contact",
                  "Third Party Contact",
                  "Vendor Contact Info",
                  "PCI Contact",
                  "Corporate"
                ]
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "birthDate": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "$ref": "Owner_1#/properties/phoneType"
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "$ref": "Owner_1#/properties/alternatePhoneType"
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              }
            },
            "required": [
              "type",
              "firstName",
              "lastName",
              "phoneNumber",
              "email"
            ]
          },
          "uniqueItems": true
        },
        "addresses": {
          "description": "",
          "example": [
            {
              "type": "Mailing Address",
              "addressLine1": "1234 W Tester Ave.",
              "city": "City Town",
              "state": "CO",
              "country": "United States",
              "postalCode": "80123",
              "postalCodeExtension": "1234"
            },
            {
              "type": "Physical Address",
              "addressLine1": "1234 W Tester Ave.",
              "city": "City Town",
              "state": "CO",
              "country": "United States",
              "postalCode": "80123",
              "postalCodeExtension": "1234"
            }
          ],
          "type": "array",
          "items": {
            "id": "Address_1",
            "title": "Address_1",
            "type": "object",
            "properties": {
              "type": {
                "title": "AddressType",
                "description": "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory.",
                "example": "Physical Address",
                "type": "string",
                "enum": [
                  "Mailing Address",
                  "Physical Address",
                  "Shipping Address"
                ]
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "$ref": "Owner_1#/properties/state"
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              }
            },
            "required": [
              "type",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          },
          "uniqueItems": true
        },
        "bankAccount": {
          "id": "BankAccount_1",
          "title": "BankAccount_1",
          "description": "Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber & bankName.",
          "type": "object",
          "properties": {
            "ddaType": {
              "title": "DdaType",
              "description": "Direct deposit account type.",
              "example": "Checking",
              "type": "string",
              "enum": [
                "Checking",
                "Savings"
              ]
            },
            "achType": {
              "title": "AchType",
              "description": "Check deposit type",
              "example": "Commercial Checking",
              "type": "string",
              "enum": [
                "Commercial Checking",
                "Private Checking"
              ]
            },
            "accountNumber": {
              "description": "Direct deposit account number.  Maximum 17 characters.",
              "example": "011401545",
              "type": "string",
              "minLength": 1,
              "maxLength": 17
            },
            "routingNumber": {
              "description": "Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.",
              "example": "102000076",
              "type": "string",
              "minLength": 9,
              "maxLength": 9
            },
            "bankName": {
              "description": "Bank name used for credit card processing services.",
              "example": "Bank name",
              "type": "string"
            }
          }
        },
        "advancedSettelment": {
          "description": "",
          "type": "array",
          "items": {
            "id": "AdvancedSettlement_inner",
            "title": "AdvancedSettlement_inner",
            "description": "Advanced Settlement gives merchants options to settle their account according to their needs with different settlement categories.",
            "type": "object",
            "properties": {
              "settlementCategories": {
                "description": "",
                "type": "array",
                "items": {
                  "title": "SettlementCategory",
                  "description": "Settlement categories gives merhant an option to settle their account with different settlement categories. It is an optional field. However at time of boarding it becomes a required field.",
                  "type": "string",
                  "enum": [
                    "Deposits",
                    "Fees",
                    "Exceptions"
                  ]
                }
              },
              "bankAccount": {
                "$ref": "BankAccount_1"
              }
            }
          }
        },
        "salesAgent": {
          "id": "SalesAgent_1",
          "title": "SalesAgent_1",
          "description": "The agent who is submitting the deal. It is an optional object. It becomes required, when  partner wants to route deals to their own sales rep. Please work with your integration specialist for route to sales rep functionality.",
          "type": "object",
          "properties": {
            "firstName": {
              "description": "Sales agent's first name.",
              "example": "John",
              "type": "string",
              "minLength": 1,
              "maxLength": 15
            },
            "lastName": {
              "description": "Sales agent's last name.",
              "example": "Doe",
              "type": "string",
              "minLength": 1,
              "maxLength": 25
            },
            "email": {
              "description": "Sales agent's email address.  Must have @ and a .",
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
            },
            "id": {
              "description": "Id for the Sales Contact.",
              "example": "U15315",
              "type": "string",
              "minLength": 1,
              "maxLength": 15
            },
            "mobilePhoneNumber": {
              "description": "Sales agent's 10-digit phone number of the format 5131234567.",
              "example": "1234567890",
              "type": "string",
              "pattern": "^[0-9]{10}$"
            }
          },
          "required": [
            "firstName",
            "lastName",
            "email"
          ]
        },
        "installationContact": {
          "id": "InstallationContact",
          "title": "InstallationContact",
          "description": "The Technical Agent who is going to do setup.",
          "type": "object",
          "properties": {
            "firstName": {
              "description": "Contact's first name.",
              "example": "Sam",
              "type": "string",
              "minLength": 1,
              "maxLength": 15,
              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
            },
            "lastName": {
              "description": "Contact's last name.",
              "example": "Doe",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
            },
            "email": {
              "description": "Contact's email address. Must have @ and a .",
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
            },
            "id": {
              "description": "Id for Technical Contact",
              "example": "U15318",
              "type": "string",
              "minLength": 1,
              "maxLength": 15,
              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
            },
            "mobilePhoneNumber": {
              "description": "Contact's 10-digit phone number of the format 5131234567.",
              "example": "1234567890",
              "type": "string",
              "minLength": 10,
              "maxLength": 10,
              "pattern": "([0-9]{10})$"
            }
          },
          "required": [
            "firstName",
            "lastName",
            "email"
          ]
        },
        "routeToSalesRep": {
          "description": "Used to route a application to a worldpay or partner sales rep. By default the API is configured to route to a Worldpay sales rep. If you would like to route to partner (Launchpad UI) please work with your implementation consultant.",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "externalRefId",
        "businessInfo",
        "transactionInfo"
      ]
    }
- BusinessInfo_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "BusinessInfo_1",
      "title": "BusinessInfo_1",
      "type": "object",
      "properties": {
        "dbaName": {
          "description": "The merchant name they do business as.  Generally with what their customers know the business.",
          "example": "The DBA Name",
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        },
        "legalName": {
          "description": "Business Legal Name as filed with the IRS.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^([a-z0-9& -]{1,40})$"
        },
        "ownershipType": {
          "title": "OwnershipType",
          "description": "Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).",
          "example": "LLC",
          "type": "string",
          "enum": [
            "GOVERNMENT",
            "SOLE PROPRIETOR",
            "LLC",
            "PARTNERSHIP",
            "FIN INSTITUTION",
            "NON-PROFIT",
            "ASSOCIATION/ESTATE/TRUST",
            "PRIVATE CORPORATION",
            "SEC REGISTERED",
            "PUBLIC CORPORATION",
            "OTHER"
          ]
        },
        "mccCode": {
          "description": "SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.",
          "example": "5812",
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        },
        "businessEstablishedDate": {
          "description": "Date (CCYY-MM-DD) on which the merchant's business was established.",
          "example": "2000-03-23",
          "type": "string",
          "format": "date"
        },
        "websiteUrl": {
          "description": "The URL of the merchant's website.",
          "example": "www.thefoodplace.com",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "numberOfLocation": {
          "description": "Number of current locations.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "federalTaxId": {
          "description": "The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.The full list of restricted federal tax id-\n  “000000000” “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666” \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
          "example": "123456781",
          "type": "string",
          "minLength": 9,
          "maxLength": 9,
          "pattern": "^([a-z0-9& -]{1,40})$"
        },
        "paymentAcceptanceMethod": {
          "description": "The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.",
          "example": [
            "inPerson",
            "onlineSite"
          ],
          "type": "array",
          "items": {
            "title": "PaymentAcceptanceMethod",
            "type": "string",
            "enum": [
              "inPerson",
              "onlineSite",
              "phoneOrMailOrder"
            ]
          }
        },
        "pciadc": {
          "title": "Pciadc",
          "description": "Indication if the merchant has had an account data compromise.",
          "example": "No",
          "type": "string",
          "enum": [
            "Yes",
            "No"
          ]
        },
        "pcidssValidated": {
          "title": "PcidssValidated",
          "description": "Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.",
          "example": "No",
          "type": "string",
          "enum": [
            "Yes",
            "No"
          ]
        },
        "surroundingArea": {
          "title": "SurroundingArea",
          "description": "Type of area surroundning the business.",
          "example": "Commercial",
          "type": "string",
          "enum": [
            "Commercial",
            "Industrial",
            "Residential"
          ]
        },
        "productServiceSold": {
          "description": "Type of goods or services sold.",
          "example": "Food",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "(^[-a-zA-Z0-9_ &()*+,./:;=_'‘]{1,40}$)"
        },
        "ownAddYears": {
          "description": "Years the business has been operating in their current location.",
          "example": 2,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 99.0,
          "format": "int32"
        },
        "lengthOfContract": {
          "description": "Inital contract term in months.",
          "type": "string",
          "pattern": "([0-9]{3})$"
        },
        "seasonal": {
          "title": "Seasonal",
          "description": "Does the business operate seasonally?",
          "example": "Yes",
          "type": "string",
          "enum": [
            "Yes",
            "No"
          ]
        },
        "activeMonths": {
          "description": "The months during which the business is actively operating.",
          "example": [
            "Jan",
            "Feb",
            "Mar"
          ],
          "type": "array",
          "items": {
            "title": "ActiveMonth",
            "type": "string",
            "enum": [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec"
            ]
          }
        },
        "warranty": {
          "title": "Warranty",
          "description": "Does the business offer warranties, dues, subscriptions, memberships, or other extended services?",
          "example": "1 YEAR",
          "type": "string",
          "enum": [
            "1 YEAR",
            "30 DAY",
            "60 DAY",
            "90 DAY",
            "LIFETIME",
            "NO"
          ]
        },
        "returnPolicy": {
          "title": "ReturnPolicy",
          "description": "The business's return policy.",
          "example": "30 Day",
          "type": "string",
          "enum": [
            "3 Day",
            "30 Day",
            "60 Day",
            "60+ Day",
            "ALL SALES FINAL",
            "EXCHANGE ONLY/STORE CREDIT",
            "NO RETURN POLICY"
          ]
        },
        "taxExempt": {
          "title": "TaxExempt",
          "type": "string",
          "enum": [
            "true",
            "false"
          ]
        },
        "acceptCreditCards": {
          "title": "AcceptCreditCards",
          "description": "Does the business accept credit cards?",
          "type": "string",
          "enum": [
            "true",
            "false"
          ]
        },
        "govOwnedMerchantCountry": {
          "description": "If merchant is a government entity or an entity at least 50% owned or controlled by government entity than provide 2 digit country code which belongs to the country.",
          "example": "US",
          "type": "string"
        }
      },
      "required": [
        "dbaName",
        "legalName",
        "ownershipType",
        "mccCode"
      ]
    }
- TransactionInfo_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TransactionInfo_1",
      "title": "TransactionInfo_1",
      "type": "object",
      "properties": {
        "annualSalesVolume": {
          "description": "Projected annual sales volume.",
          "example": 20000.12,
          "type": "number",
          "minimum": 0.0,
          "maximum": 9999999999999.99
        },
        "percentRetailSwipedTransactions": {
          "description": "Projected Percentage of daily card-present transactions.",
          "example": 82,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "averageTicket": {
          "description": "Average ticket dollar amount.",
          "example": 2.3,
          "type": "number",
          "minimum": 0.0,
          "maximum": 9999999.99
        },
        "highestTicket": {
          "description": "Highest ticket dollar amount.",
          "example": 32.41,
          "type": "number",
          "minimum": 0.0,
          "maximum": 9999999.99
        },
        "currentProcessor": {
          "description": "the current processor",
          "example": "Global Payments",
          "type": "string"
        },
        "acceptChargebacks": {
          "title": "AcceptChargebacks",
          "description": "Do you have more than 25 chargeback accepted in the last 12 months?",
          "example": "No",
          "type": "string",
          "enum": [
            "Yes",
            "No"
          ]
        },
        "chargebackPercent": {
          "description": "Projected chargeback percentage.\n\n```Required when acceptChargebacks is 'Yes'```\n\n```Optional when acceptChargebacks is null or 'No'.```",
          "example": 0,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "returnPercent": {
          "description": "Projected return percent of  goods sold",
          "example": 10,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "cardNotPresentPercent": {
          "description": "Percent of card not present transactions.",
          "example": 20,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "businessToBusinessPercent": {
          "description": "Percent of business-to-business transactions.",
          "example": 20,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "internetTransactionPercent": {
          "description": "Percent of internet transactions.",
          "example": 10,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "inPersonTransactionPercent": {
          "description": "Percent of in person transactions.",
          "example": 10,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "motoTransactionPercent": {
          "description": "Percent of mail or phone order transactions.",
          "example": 10,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "annualCreditSalesVolume": {
          "description": "Projected annual credit card sales volume.",
          "example": 123.32,
          "type": "number",
          "minimum": 0.0,
          "maximum": 999999999.99
        },
        "annualDebitSalesVolume": {
          "description": "Projected annual debit card sales volume.",
          "example": 32.23,
          "type": "number",
          "minimum": 0.0,
          "maximum": 999999999.99
        },
        "annualAmexVolume": {
          "description": "Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```",
          "example": 10000,
          "type": "number",
          "minimum": 0.0,
          "maximum": 999999999.99
        },
        "amexAverageTicket": {
          "description": "AverageTicket dollar amount for Amex.\n ```This field is required when you opt-in for Amex```",
          "example": 2.3,
          "type": "number",
          "minimum": 0.0,
          "maximum": 9999999.99
        },
        "averageNumberofDays": {
          "description": "Average number of days from when cardholder is charged & when products or services are received IN FULL by cardholder.",
          "example": 10,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 365.0,
          "format": "int32"
        },
        "needsProcessingBy": {
          "description": "Date (CCYY-MM-DD) by which the Equipment needs to be setup. This field may be required for a given partner.",
          "example": "2022-11-01",
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "annualSalesVolume",
        "percentRetailSwipedTransactions"
      ]
    }
- Owner_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Owner_1",
      "title": "Owner_1",
      "description": "A Control Owner is required for the following ownership types > LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT",
      "example": {
        "type": "Control Owner Contact",
        "title": "Owner",
        "firstName": "Timothy",
        "middleInitial": "M",
        "lastName": "Jones",
        "phoneNumber": "1234567890",
        "phoneNumberExt": "1234",
        "faxNumber": "1234567890",
        "email": "test@test.com",
        "ownershipPercentage": 23,
        "ssn": "123456789",
        "dob": "2000-03-23",
        "addressLine1": "4355 N Coalwhipe St.",
        "city": "City Town",
        "state": "OH",
        "country": "United States",
        "postalCode": "80123",
        "postalCodeExtension": "1234"
      },
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "The Owner Type. Please note the above Ownership Types where a Control Owner is required.",
          "type": "string",
          "enum": [
            "Control Owner Contact",
            "Owner 1 Contact",
            "Owner 2 Contact",
            "Owner 3 Contact",
            "Owner 4 Contact"
          ]
        },
        "firstName": {
          "description": "First name. Region based validations will be applied to this field.",
          "example": "Todd",
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "lastName": {
          "description": "Last name. Region based validations will be applied to this field.",
          "example": "Davis",
          "type": "string",
          "minLength": 1,
          "maxLength": 25,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumber": {
          "description": "10-digit phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "email": {
          "description": "Email address of the contact. Must have @ and a .",
          "example": "test@gmail.com",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
        },
        "addressLine1": {
          "description": "Address Line 1. Field for house number, street and direction.",
          "example": "4355 N Coalwhipe St.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "city": {
          "example": "Denver",
          "type": "string",
          "minLength": 1,
          "maxLength": 28,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "state": {
          "title": "State_1",
          "description": "Valid US state, commonwealth, and territory codes are allowed.",
          "example": "CO",
          "type": "string",
          "enum": [
            "AK",
            "AL",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UM",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ]
        },
        "country": {
          "description": "Only United States is allowed.",
          "type": "string",
          "enum": [
            "United States"
          ]
        },
        "postalCode": {
          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
          "example": "12345",
          "type": "string",
          "minLength": 5,
          "maxLength": 5,
          "pattern": "^[0-9]{5}$"
        },
        "title": {
          "description": "Required for AMEX acquired merchants otherwise optional.",
          "example": "President",
          "type": "string",
          "minLength": 1,
          "maxLength": 30,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "middleInitial": {
          "description": "Middle initial.",
          "example": "M",
          "type": "string",
          "minLength": 1,
          "maxLength": 1,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumberExt": {
          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
          "example": "1234",
          "type": "string",
          "maxLength": 8,
          "pattern": "^[0-9]{1,8}$"
        },
        "phoneType": {
          "title": "PhoneType",
          "description": "Phone type.",
          "example": "mobile",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "alternatePhone": {
          "description": "10-digit alternate phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "alternatePhoneType": {
          "title": "AlternatePhoneType",
          "description": "Alternate phone type.",
          "example": "home",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "faxNumber": {
          "description": "10-digit fax number of the format 5131234567",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "ownershipPercentage": {
          "description": "Ownership stake percentage.",
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "ssn": {
          "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
          "example": "123456789",
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "dob": {
          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
          "example": "2000-03-23",
          "type": "string",
          "format": "date"
        },
        "addressLine2": {
          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
          "example": "suite 104",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "postalCodeExtension": {
          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
          "example": "1234",
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "identification": {
          "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
          "type": "array",
          "items": {
            "id": "Identification",
            "title": "Identification",
            "type": "object",
            "properties": {
              "idType": {
                "title": "IdType",
                "description": "Type of ID provided by the owner.",
                "example": "PASSPORT",
                "type": "string",
                "enum": [
                  "ALIEN ID",
                  "CREDIT BUREAU",
                  "DRIVERS LICENSE",
                  "STATE ID",
                  "MEXICAN CONSULATE",
                  "MILITARY ID",
                  "OTHER",
                  "PASSPORT"
                ]
              },
              "idNumber": {
                "description": "Owner's ID number.",
                "example": "312312341",
                "type": "string",
                "maxLength": 40
              },
              "issuedCity": {
                "description": "City in which ID was issued.",
                "example": "City Town",
                "type": "string",
                "maxLength": 28
              },
              "issuedState": {
                "title": "IssuedState",
                "description": "Valid state code where ID was issued.",
                "example": "CO",
                "type": "string",
                "maxLength": 2,
                "enum": [
                  "AK",
                  "AL",
                  "AR",
                  "AS",
                  "AZ",
                  "CA",
                  "CO",
                  "CT",
                  "DC",
                  "DE",
                  "FL",
                  "FM",
                  "GA",
                  "GU",
                  "HI",
                  "IA",
                  "ID",
                  "IL",
                  "IN",
                  "KS",
                  "KY",
                  "LA",
                  "MA",
                  "MD",
                  "ME",
                  "MH",
                  "MI",
                  "MN",
                  "MO",
                  "MP",
                  "MS",
                  "MT",
                  "NC",
                  "ND",
                  "NE",
                  "NH",
                  "NJ",
                  "NM",
                  "NV",
                  "NY",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "PW",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VA",
                  "VI",
                  "VT",
                  "WA",
                  "WI",
                  "WV",
                  "WY"
                ]
              },
              "issuedCountry": {
                "description": "Country where ID was issued.",
                "example": "US",
                "type": "string",
                "maxLength": 2
              },
              "dateIssued": {
                "description": "Date ID was issued (CCYY-MM-DD).",
                "example": "1999-01-30",
                "type": "string",
                "format": "date"
              },
              "dateExpires": {
                "description": "Date ID expires (CCYY-MM-DD).",
                "example": "2020-02-11",
                "type": "string",
                "format": "date"
              }
            },
            "required": [
              "idType",
              "idNumber"
            ]
          }
        }
      },
      "required": [
        "type",
        "firstName",
        "lastName",
        "phoneNumber",
        "email",
        "addressLine1",
        "city",
        "state",
        "country",
        "postalCode"
      ]
    }
- State_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "State_1",
      "description": "Valid US state, commonwealth, and territory codes are allowed.",
      "example": "CO",
      "type": "string",
      "enum": [
        "AK",
        "AL",
        "AR",
        "AS",
        "AZ",
        "CA",
        "CO",
        "CT",
        "DC",
        "DE",
        "FL",
        "FM",
        "GA",
        "GU",
        "HI",
        "IA",
        "ID",
        "IL",
        "IN",
        "KS",
        "KY",
        "LA",
        "MA",
        "MD",
        "ME",
        "MH",
        "MI",
        "MN",
        "MO",
        "MP",
        "MS",
        "MT",
        "NC",
        "ND",
        "NE",
        "NH",
        "NJ",
        "NM",
        "NV",
        "NY",
        "OH",
        "OK",
        "OR",
        "PA",
        "PR",
        "PW",
        "RI",
        "SC",
        "SD",
        "TN",
        "TX",
        "UM",
        "UT",
        "VA",
        "VI",
        "VT",
        "WA",
        "WI",
        "WV",
        "WY"
      ]
    }
- Guarantor_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Guarantor_1",
      "title": "Guarantor_1",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type3",
          "example": "Guarantor 1 Contact",
          "type": "string",
          "enum": [
            "Guarantor 1 Contact",
            "Guarantor 2 Contact",
            "Guarantor 3 Contact",
            "Guarantor 4 Contact"
          ]
        },
        "firstName": {
          "description": "First name. Region based validations will be applied to this field.",
          "example": "Todd",
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "lastName": {
          "description": "Last name. Region based validations will be applied to this field.",
          "example": "Davis",
          "type": "string",
          "minLength": 1,
          "maxLength": 25,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumber": {
          "description": "10-digit phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "email": {
          "description": "Email address of the contact. Must have @ and a .",
          "example": "test@gmail.com",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
        },
        "addressLine1": {
          "description": "Address Line 1. Field for house number, street and direction.",
          "example": "4355 N Coalwhipe St.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "city": {
          "example": "Denver",
          "type": "string",
          "minLength": 1,
          "maxLength": 28,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "state": {
          "title": "State_1",
          "description": "Valid US state, commonwealth, and territory codes are allowed.",
          "example": "CO",
          "type": "string",
          "enum": [
            "AK",
            "AL",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UM",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ]
        },
        "country": {
          "description": "Only United States is allowed.",
          "type": "string",
          "enum": [
            "United States"
          ]
        },
        "postalCode": {
          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
          "example": "12345",
          "type": "string",
          "minLength": 5,
          "maxLength": 5,
          "pattern": "^[0-9]{5}$"
        },
        "title": {
          "description": "Required for AMEX acquired merchants otherwise optional.",
          "example": "President",
          "type": "string",
          "minLength": 1,
          "maxLength": 30,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "middleInitial": {
          "description": "Middle initial.",
          "example": "M",
          "type": "string",
          "minLength": 1,
          "maxLength": 1,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumberExt": {
          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
          "example": "1234",
          "type": "string",
          "maxLength": 8,
          "pattern": "^[0-9]{1,8}$"
        },
        "phoneType": {
          "title": "PhoneType",
          "description": "Phone type.",
          "example": "mobile",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "alternatePhone": {
          "description": "10-digit alternate phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "alternatePhoneType": {
          "title": "AlternatePhoneType",
          "description": "Alternate phone type.",
          "example": "home",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "faxNumber": {
          "description": "10-digit fax number of the format 5131234567",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "ownershipPercentage": {
          "description": "Ownership stake percentage.",
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "ssn": {
          "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
          "example": "123456789",
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "dob": {
          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
          "example": "2000-03-23",
          "type": "string",
          "format": "date"
        },
        "addressLine2": {
          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
          "example": "suite 104",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "postalCodeExtension": {
          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
          "example": "1234",
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "identification": {
          "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
          "type": "array",
          "items": {
            "id": "Identification",
            "title": "Identification",
            "type": "object",
            "properties": {
              "idType": {
                "title": "IdType",
                "description": "Type of ID provided by the owner.",
                "example": "PASSPORT",
                "type": "string",
                "enum": [
                  "ALIEN ID",
                  "CREDIT BUREAU",
                  "DRIVERS LICENSE",
                  "STATE ID",
                  "MEXICAN CONSULATE",
                  "MILITARY ID",
                  "OTHER",
                  "PASSPORT"
                ]
              },
              "idNumber": {
                "description": "Owner's ID number.",
                "example": "312312341",
                "type": "string",
                "maxLength": 40
              },
              "issuedCity": {
                "description": "City in which ID was issued.",
                "example": "City Town",
                "type": "string",
                "maxLength": 28
              },
              "issuedState": {
                "title": "IssuedState",
                "description": "Valid state code where ID was issued.",
                "example": "CO",
                "type": "string",
                "maxLength": 2,
                "enum": [
                  "AK",
                  "AL",
                  "AR",
                  "AS",
                  "AZ",
                  "CA",
                  "CO",
                  "CT",
                  "DC",
                  "DE",
                  "FL",
                  "FM",
                  "GA",
                  "GU",
                  "HI",
                  "IA",
                  "ID",
                  "IL",
                  "IN",
                  "KS",
                  "KY",
                  "LA",
                  "MA",
                  "MD",
                  "ME",
                  "MH",
                  "MI",
                  "MN",
                  "MO",
                  "MP",
                  "MS",
                  "MT",
                  "NC",
                  "ND",
                  "NE",
                  "NH",
                  "NJ",
                  "NM",
                  "NV",
                  "NY",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "PW",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VA",
                  "VI",
                  "VT",
                  "WA",
                  "WI",
                  "WV",
                  "WY"
                ]
              },
              "issuedCountry": {
                "description": "Country where ID was issued.",
                "example": "US",
                "type": "string",
                "maxLength": 2
              },
              "dateIssued": {
                "description": "Date ID was issued (CCYY-MM-DD).",
                "example": "1999-01-30",
                "type": "string",
                "format": "date"
              },
              "dateExpires": {
                "description": "Date ID expires (CCYY-MM-DD).",
                "example": "2020-02-11",
                "type": "string",
                "format": "date"
              }
            },
            "required": [
              "idType",
              "idNumber"
            ]
          }
        }
      },
      "required": [
        "type",
        "firstName",
        "lastName",
        "phoneNumber",
        "email",
        "addressLine1",
        "city",
        "state",
        "country",
        "postalCode"
      ]
    }
- AuthorizedSigner_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AuthorizedSigner_1",
      "title": "AuthorizedSigner_1",
      "type": "object",
      "properties": {
        "roleName": {
          "title": "RoleName_1",
          "description": "The role of the signer. Please note the below.\n\n 1) Merchant role name is mandatory.\n 2) Required fields indicated in schema are those required for all role names other than \"SalesRep\"\n 3) The \"SalesRep\" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email\n 4) The \"Signer2\" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.",
          "example": "Merchant",
          "type": "string",
          "enum": [
            "SalesRep",
            "Merchant",
            "Signer2",
            "Signer3",
            "Signer4",
            "Signer5",
            "Signer6",
            "Signer7",
            "Signer8",
            "Guarantor2",
            "Guarantor3",
            "Guarantor4"
          ]
        },
        "signingExperience": {
          "title": "SigningExperience",
          "description": "Signing ceremony type",
          "example": "email",
          "type": "string",
          "enum": [
            "embed",
            "email",
            "wet"
          ]
        },
        "signingOrder": {
          "description": "Define the signing order for multiple signers",
          "example": "2",
          "type": "string"
        },
        "firstName": {
          "description": "First name. Region based validations will be applied to this field.",
          "example": "Todd",
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "lastName": {
          "description": "Last name. Region based validations will be applied to this field.",
          "example": "Davis",
          "type": "string",
          "minLength": 1,
          "maxLength": 25,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumber": {
          "description": "10-digit phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "email": {
          "description": "Email address of the contact. Must have @ and a .",
          "example": "test@gmail.com",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
        },
        "ssn": {
          "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
          "example": "123456789",
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "dob": {
          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
          "example": "2000-03-23",
          "type": "string",
          "format": "date"
        },
        "addressLine1": {
          "description": "Address Line 1. Field for house number, street and direction.",
          "example": "4355 N Coalwhipe St.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "city": {
          "example": "Denver",
          "type": "string",
          "minLength": 1,
          "maxLength": 28,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "state": {
          "title": "State_1",
          "description": "Valid US state, commonwealth, and territory codes are allowed.",
          "example": "CO",
          "type": "string",
          "enum": [
            "AK",
            "AL",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UM",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ]
        },
        "country": {
          "description": "Only United States is allowed.",
          "type": "string",
          "enum": [
            "United States"
          ]
        },
        "postalCode": {
          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
          "example": "12345",
          "type": "string",
          "minLength": 5,
          "maxLength": 5,
          "pattern": "^[0-9]{5}$"
        },
        "title": {
          "description": "Required for AMEX acquired merchants otherwise optional.",
          "example": "President",
          "type": "string",
          "minLength": 1,
          "maxLength": 30,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "middleInitial": {
          "description": "Middle initial.",
          "example": "M",
          "type": "string",
          "minLength": 1,
          "maxLength": 1,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumberExt": {
          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
          "example": "1234",
          "type": "string",
          "maxLength": 8,
          "pattern": "^[0-9]{1,8}$"
        },
        "phoneType": {
          "title": "PhoneType",
          "description": "Phone type.",
          "example": "mobile",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "alternatePhone": {
          "description": "10-digit alternate phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "alternatePhoneType": {
          "title": "AlternatePhoneType",
          "description": "Alternate phone type.",
          "example": "home",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "faxNumber": {
          "description": "10-digit fax number of the format 5131234567",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "addressLine2": {
          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
          "example": "suite 104",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "postalCodeExtension": {
          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
          "example": "1234",
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "identification": {
          "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
          "type": "array",
          "items": {
            "id": "Identification",
            "title": "Identification",
            "type": "object",
            "properties": {
              "idType": {
                "title": "IdType",
                "description": "Type of ID provided by the owner.",
                "example": "PASSPORT",
                "type": "string",
                "enum": [
                  "ALIEN ID",
                  "CREDIT BUREAU",
                  "DRIVERS LICENSE",
                  "STATE ID",
                  "MEXICAN CONSULATE",
                  "MILITARY ID",
                  "OTHER",
                  "PASSPORT"
                ]
              },
              "idNumber": {
                "description": "Owner's ID number.",
                "example": "312312341",
                "type": "string",
                "maxLength": 40
              },
              "issuedCity": {
                "description": "City in which ID was issued.",
                "example": "City Town",
                "type": "string",
                "maxLength": 28
              },
              "issuedState": {
                "title": "IssuedState",
                "description": "Valid state code where ID was issued.",
                "example": "CO",
                "type": "string",
                "maxLength": 2,
                "enum": [
                  "AK",
                  "AL",
                  "AR",
                  "AS",
                  "AZ",
                  "CA",
                  "CO",
                  "CT",
                  "DC",
                  "DE",
                  "FL",
                  "FM",
                  "GA",
                  "GU",
                  "HI",
                  "IA",
                  "ID",
                  "IL",
                  "IN",
                  "KS",
                  "KY",
                  "LA",
                  "MA",
                  "MD",
                  "ME",
                  "MH",
                  "MI",
                  "MN",
                  "MO",
                  "MP",
                  "MS",
                  "MT",
                  "NC",
                  "ND",
                  "NE",
                  "NH",
                  "NJ",
                  "NM",
                  "NV",
                  "NY",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "PW",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VA",
                  "VI",
                  "VT",
                  "WA",
                  "WI",
                  "WV",
                  "WY"
                ]
              },
              "issuedCountry": {
                "description": "Country where ID was issued.",
                "example": "US",
                "type": "string",
                "maxLength": 2
              },
              "dateIssued": {
                "description": "Date ID was issued (CCYY-MM-DD).",
                "example": "1999-01-30",
                "type": "string",
                "format": "date"
              },
              "dateExpires": {
                "description": "Date ID expires (CCYY-MM-DD).",
                "example": "2020-02-11",
                "type": "string",
                "format": "date"
              }
            },
            "required": [
              "idType",
              "idNumber"
            ]
          }
        }
      },
      "required": [
        "roleName",
        "signingExperience",
        "signingOrder",
        "firstName",
        "lastName",
        "phoneNumber",
        "email",
        "ssn",
        "dob",
        "addressLine1",
        "city",
        "state",
        "country",
        "postalCode"
      ]
    }
- RoleName_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "RoleName_1",
      "description": "The role of the signer. Please note the below.\n\n 1) Merchant role name is mandatory.\n 2) Required fields indicated in schema are those required for all role names other than \"SalesRep\"\n 3) The \"SalesRep\" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email\n 4) The \"Signer2\" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.",
      "example": "Merchant",
      "type": "string",
      "enum": [
        "SalesRep",
        "Merchant",
        "Signer2",
        "Signer3",
        "Signer4",
        "Signer5",
        "Signer6",
        "Signer7",
        "Signer8",
        "Guarantor2",
        "Guarantor3",
        "Guarantor4"
      ]
    }
- Contact_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Contact_1",
      "title": "Contact_1",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type4",
          "description": "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST.",
          "example": "Primary Contact",
          "type": "string",
          "enum": [
            "Primary Contact",
            "Store Primary Contact",
            "Accounting Contact",
            "Customer Service Contact",
            "Shipping Contact",
            "Third Party Contact",
            "Vendor Contact Info",
            "PCI Contact",
            "Corporate"
          ]
        },
        "firstName": {
          "description": "First name. Region based validations will be applied to this field.",
          "example": "Todd",
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "lastName": {
          "description": "Last name. Region based validations will be applied to this field.",
          "example": "Davis",
          "type": "string",
          "minLength": 1,
          "maxLength": 25,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "phoneNumber": {
          "description": "10-digit phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "email": {
          "description": "Email address of the contact. Must have @ and a .",
          "example": "test@gmail.com",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
        },
        "title": {
          "description": "Required for AMEX acquired merchants otherwise optional.",
          "example": "President",
          "type": "string",
          "minLength": 1,
          "maxLength": 30,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "middleInitial": {
          "description": "Middle initial.",
          "example": "M",
          "type": "string",
          "minLength": 1,
          "maxLength": 1,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "ssn": {
          "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
          "example": "123456789",
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "birthDate": {
          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
          "example": "2000-03-23",
          "type": "string",
          "format": "date"
        },
        "phoneNumberExt": {
          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
          "example": "1234",
          "type": "string",
          "maxLength": 8,
          "pattern": "^[0-9]{1,8}$"
        },
        "phoneType": {
          "title": "PhoneType",
          "description": "Phone type.",
          "example": "mobile",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "alternatePhone": {
          "description": "10-digit alternate phone number of the format  5131234567.",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        "alternatePhoneType": {
          "title": "AlternatePhoneType",
          "description": "Alternate phone type.",
          "example": "home",
          "type": "string",
          "enum": [
            "mobile",
            "home"
          ]
        },
        "faxNumber": {
          "description": "10-digit fax number of the format 5131234567",
          "example": "5131234567",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        }
      },
      "required": [
        "type",
        "firstName",
        "lastName",
        "phoneNumber",
        "email"
      ]
    }
- Address_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Address_1",
      "title": "Address_1",
      "type": "object",
      "properties": {
        "type": {
          "title": "AddressType",
          "description": "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory.",
          "example": "Physical Address",
          "type": "string",
          "enum": [
            "Mailing Address",
            "Physical Address",
            "Shipping Address"
          ]
        },
        "addressLine1": {
          "description": "Address Line 1. Field for house number, street and direction.",
          "example": "4355 N Coalwhipe St.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "city": {
          "example": "Denver",
          "type": "string",
          "minLength": 1,
          "maxLength": 28,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "state": {
          "title": "State_1",
          "description": "Valid US state, commonwealth, and territory codes are allowed.",
          "example": "CO",
          "type": "string",
          "enum": [
            "AK",
            "AL",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UM",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ]
        },
        "country": {
          "description": "Only United States is allowed.",
          "type": "string",
          "enum": [
            "United States"
          ]
        },
        "postalCode": {
          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
          "example": "12345",
          "type": "string",
          "minLength": 5,
          "maxLength": 5,
          "pattern": "^[0-9]{5}$"
        },
        "addressLine2": {
          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
          "example": "suite 104",
          "type": "string",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "postalCodeExtension": {
          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
          "example": "1234",
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        }
      },
      "required": [
        "type",
        "addressLine1",
        "city",
        "state",
        "country",
        "postalCode"
      ]
    }
- BankAccount_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "BankAccount_1",
      "title": "BankAccount_1",
      "description": "Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber & bankName.",
      "type": "object",
      "properties": {
        "ddaType": {
          "title": "DdaType",
          "description": "Direct deposit account type.",
          "example": "Checking",
          "type": "string",
          "enum": [
            "Checking",
            "Savings"
          ]
        },
        "achType": {
          "title": "AchType",
          "description": "Check deposit type",
          "example": "Commercial Checking",
          "type": "string",
          "enum": [
            "Commercial Checking",
            "Private Checking"
          ]
        },
        "accountNumber": {
          "description": "Direct deposit account number.  Maximum 17 characters.",
          "example": "011401545",
          "type": "string",
          "minLength": 1,
          "maxLength": 17
        },
        "routingNumber": {
          "description": "Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.",
          "example": "102000076",
          "type": "string",
          "minLength": 9,
          "maxLength": 9
        },
        "bankName": {
          "description": "Bank name used for credit card processing services.",
          "example": "Bank name",
          "type": "string"
        }
      }
    }
- AdvancedSettlement_inner: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AdvancedSettlement_inner",
      "title": "AdvancedSettlement_inner",
      "description": "Advanced Settlement gives merchants options to settle their account according to their needs with different settlement categories.",
      "type": "object",
      "properties": {
        "settlementCategories": {
          "description": "",
          "type": "array",
          "items": {
            "title": "SettlementCategory",
            "description": "Settlement categories gives merhant an option to settle their account with different settlement categories. It is an optional field. However at time of boarding it becomes a required field.",
            "type": "string",
            "enum": [
              "Deposits",
              "Fees",
              "Exceptions"
            ]
          }
        },
        "bankAccount": {
          "id": "BankAccount_1",
          "title": "BankAccount_1",
          "description": "Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber & bankName.",
          "type": "object",
          "properties": {
            "ddaType": {
              "title": "DdaType",
              "description": "Direct deposit account type.",
              "example": "Checking",
              "type": "string",
              "enum": [
                "Checking",
                "Savings"
              ]
            },
            "achType": {
              "title": "AchType",
              "description": "Check deposit type",
              "example": "Commercial Checking",
              "type": "string",
              "enum": [
                "Commercial Checking",
                "Private Checking"
              ]
            },
            "accountNumber": {
              "description": "Direct deposit account number.  Maximum 17 characters.",
              "example": "011401545",
              "type": "string",
              "minLength": 1,
              "maxLength": 17
            },
            "routingNumber": {
              "description": "Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.",
              "example": "102000076",
              "type": "string",
              "minLength": 9,
              "maxLength": 9
            },
            "bankName": {
              "description": "Bank name used for credit card processing services.",
              "example": "Bank name",
              "type": "string"
            }
          }
        }
      }
    }
- SalesAgent_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SalesAgent_1",
      "title": "SalesAgent_1",
      "description": "The agent who is submitting the deal. It is an optional object. It becomes required, when  partner wants to route deals to their own sales rep. Please work with your integration specialist for route to sales rep functionality.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Sales agent's first name.",
          "example": "John",
          "type": "string",
          "minLength": 1,
          "maxLength": 15
        },
        "lastName": {
          "description": "Sales agent's last name.",
          "example": "Doe",
          "type": "string",
          "minLength": 1,
          "maxLength": 25
        },
        "email": {
          "description": "Sales agent's email address.  Must have @ and a .",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
        },
        "id": {
          "description": "Id for the Sales Contact.",
          "example": "U15315",
          "type": "string",
          "minLength": 1,
          "maxLength": 15
        },
        "mobilePhoneNumber": {
          "description": "Sales agent's 10-digit phone number of the format 5131234567.",
          "example": "1234567890",
          "type": "string",
          "pattern": "^[0-9]{10}$"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email"
      ]
    }
- Application: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Application",
      "title": "Application",
      "type": "object",
      "properties": {
        "businessInfo": {
          "id": "BusinessInfo_1",
          "title": "BusinessInfo_1",
          "type": "object",
          "properties": {
            "dbaName": {
              "description": "The merchant name they do business as.  Generally with what their customers know the business.",
              "example": "The DBA Name",
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            },
            "legalName": {
              "description": "Business Legal Name as filed with the IRS.",
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "pattern": "^([a-z0-9& -]{1,40})$"
            },
            "ownershipType": {
              "title": "OwnershipType",
              "description": "Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).",
              "example": "LLC",
              "type": "string",
              "enum": [
                "GOVERNMENT",
                "SOLE PROPRIETOR",
                "LLC",
                "PARTNERSHIP",
                "FIN INSTITUTION",
                "NON-PROFIT",
                "ASSOCIATION/ESTATE/TRUST",
                "PRIVATE CORPORATION",
                "SEC REGISTERED",
                "PUBLIC CORPORATION",
                "OTHER"
              ]
            },
            "mccCode": {
              "description": "SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.",
              "example": "5812",
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            },
            "businessEstablishedDate": {
              "description": "Date (CCYY-MM-DD) on which the merchant's business was established.",
              "example": "2000-03-23",
              "type": "string",
              "format": "date"
            },
            "websiteUrl": {
              "description": "The URL of the merchant's website.",
              "example": "www.thefoodplace.com",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "numberOfLocation": {
              "description": "Number of current locations.",
              "example": 2,
              "type": "integer",
              "format": "int32"
            },
            "federalTaxId": {
              "description": "The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.The full list of restricted federal tax id-\n  “000000000” “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666” \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
              "example": "123456781",
              "type": "string",
              "minLength": 9,
              "maxLength": 9,
              "pattern": "^([a-z0-9& -]{1,40})$"
            },
            "paymentAcceptanceMethod": {
              "description": "The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.",
              "example": [
                "inPerson",
                "onlineSite"
              ],
              "type": "array",
              "items": {
                "title": "PaymentAcceptanceMethod",
                "type": "string",
                "enum": [
                  "inPerson",
                  "onlineSite",
                  "phoneOrMailOrder"
                ]
              }
            },
            "pciadc": {
              "title": "Pciadc",
              "description": "Indication if the merchant has had an account data compromise.",
              "example": "No",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "pcidssValidated": {
              "title": "PcidssValidated",
              "description": "Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.",
              "example": "No",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "surroundingArea": {
              "title": "SurroundingArea",
              "description": "Type of area surroundning the business.",
              "example": "Commercial",
              "type": "string",
              "enum": [
                "Commercial",
                "Industrial",
                "Residential"
              ]
            },
            "productServiceSold": {
              "description": "Type of goods or services sold.",
              "example": "Food",
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "pattern": "(^[-a-zA-Z0-9_ &()*+,./:;=_'‘]{1,40}$)"
            },
            "ownAddYears": {
              "description": "Years the business has been operating in their current location.",
              "example": 2,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 99.0,
              "format": "int32"
            },
            "lengthOfContract": {
              "description": "Inital contract term in months.",
              "type": "string",
              "pattern": "([0-9]{3})$"
            },
            "seasonal": {
              "title": "Seasonal",
              "description": "Does the business operate seasonally?",
              "example": "Yes",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "activeMonths": {
              "description": "The months during which the business is actively operating.",
              "example": [
                "Jan",
                "Feb",
                "Mar"
              ],
              "type": "array",
              "items": {
                "title": "ActiveMonth",
                "type": "string",
                "enum": [
                  "Jan",
                  "Feb",
                  "Mar",
                  "Apr",
                  "May",
                  "Jun",
                  "Jul",
                  "Aug",
                  "Sep",
                  "Oct",
                  "Nov",
                  "Dec"
                ]
              }
            },
            "warranty": {
              "title": "Warranty",
              "description": "Does the business offer warranties, dues, subscriptions, memberships, or other extended services?",
              "example": "1 YEAR",
              "type": "string",
              "enum": [
                "1 YEAR",
                "30 DAY",
                "60 DAY",
                "90 DAY",
                "LIFETIME",
                "NO"
              ]
            },
            "returnPolicy": {
              "title": "ReturnPolicy",
              "description": "The business's return policy.",
              "example": "30 Day",
              "type": "string",
              "enum": [
                "3 Day",
                "30 Day",
                "60 Day",
                "60+ Day",
                "ALL SALES FINAL",
                "EXCHANGE ONLY/STORE CREDIT",
                "NO RETURN POLICY"
              ]
            },
            "taxExempt": {
              "title": "TaxExempt",
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "acceptCreditCards": {
              "title": "AcceptCreditCards",
              "description": "Does the business accept credit cards?",
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "govOwnedMerchantCountry": {
              "description": "If merchant is a government entity or an entity at least 50% owned or controlled by government entity than provide 2 digit country code which belongs to the country.",
              "example": "US",
              "type": "string"
            }
          },
          "required": [
            "dbaName",
            "legalName",
            "ownershipType",
            "mccCode"
          ]
        },
        "transactionInfo": {
          "id": "TransactionInfo_1",
          "title": "TransactionInfo_1",
          "type": "object",
          "properties": {
            "annualSalesVolume": {
              "description": "Projected annual sales volume.",
              "example": 20000.12,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999999999.99
            },
            "percentRetailSwipedTransactions": {
              "description": "Projected Percentage of daily card-present transactions.",
              "example": 82,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "averageTicket": {
              "description": "Average ticket dollar amount.",
              "example": 2.3,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999.99
            },
            "highestTicket": {
              "description": "Highest ticket dollar amount.",
              "example": 32.41,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999.99
            },
            "currentProcessor": {
              "description": "the current processor",
              "example": "Global Payments",
              "type": "string"
            },
            "acceptChargebacks": {
              "title": "AcceptChargebacks",
              "description": "Do you have more than 25 chargeback accepted in the last 12 months?",
              "example": "No",
              "type": "string",
              "enum": [
                "Yes",
                "No"
              ]
            },
            "chargebackPercent": {
              "description": "Projected chargeback percentage.\n\n```Required when acceptChargebacks is 'Yes'```\n\n```Optional when acceptChargebacks is null or 'No'.```",
              "example": 0,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "returnPercent": {
              "description": "Projected return percent of  goods sold",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "cardNotPresentPercent": {
              "description": "Percent of card not present transactions.",
              "example": 20,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "businessToBusinessPercent": {
              "description": "Percent of business-to-business transactions.",
              "example": 20,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "internetTransactionPercent": {
              "description": "Percent of internet transactions.",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "inPersonTransactionPercent": {
              "description": "Percent of in person transactions.",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "motoTransactionPercent": {
              "description": "Percent of mail or phone order transactions.",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "annualCreditSalesVolume": {
              "description": "Projected annual credit card sales volume.",
              "example": 123.32,
              "type": "number",
              "minimum": 0.0,
              "maximum": 999999999.99
            },
            "annualDebitSalesVolume": {
              "description": "Projected annual debit card sales volume.",
              "example": 32.23,
              "type": "number",
              "minimum": 0.0,
              "maximum": 999999999.99
            },
            "annualAmexVolume": {
              "description": "Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```",
              "example": 10000,
              "type": "number",
              "minimum": 0.0,
              "maximum": 999999999.99
            },
            "amexAverageTicket": {
              "description": "AverageTicket dollar amount for Amex.\n ```This field is required when you opt-in for Amex```",
              "example": 2.3,
              "type": "number",
              "minimum": 0.0,
              "maximum": 9999999.99
            },
            "averageNumberofDays": {
              "description": "Average number of days from when cardholder is charged & when products or services are received IN FULL by cardholder.",
              "example": 10,
              "type": "integer",
              "minimum": 0.0,
              "maximum": 365.0,
              "format": "int32"
            },
            "needsProcessingBy": {
              "description": "Date (CCYY-MM-DD) by which the Equipment needs to be setup. This field may be required for a given partner.",
              "example": "2022-11-01",
              "type": "string",
              "format": "date"
            }
          },
          "required": [
            "annualSalesVolume",
            "percentRetailSwipedTransactions"
          ]
        },
        "authorizedSigners": {
          "description": "",
          "type": "array",
          "items": {
            "id": "AuthorizedSigner_1",
            "title": "AuthorizedSigner_1",
            "type": "object",
            "properties": {
              "roleName": {
                "title": "RoleName_1",
                "description": "The role of the signer. Please note the below.\n\n 1) Merchant role name is mandatory.\n 2) Required fields indicated in schema are those required for all role names other than \"SalesRep\"\n 3) The \"SalesRep\" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email\n 4) The \"Signer2\" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.",
                "example": "Merchant",
                "type": "string",
                "enum": [
                  "SalesRep",
                  "Merchant",
                  "Signer2",
                  "Signer3",
                  "Signer4",
                  "Signer5",
                  "Signer6",
                  "Signer7",
                  "Signer8",
                  "Guarantor2",
                  "Guarantor3",
                  "Guarantor4"
                ]
              },
              "signingExperience": {
                "title": "SigningExperience",
                "description": "Signing ceremony type",
                "example": "email",
                "type": "string",
                "enum": [
                  "embed",
                  "email",
                  "wet"
                ]
              },
              "signingOrder": {
                "description": "Define the signing order for multiple signers",
                "example": "2",
                "type": "string"
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "dob": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "title": "State_1",
                "description": "Valid US state, commonwealth, and territory codes are allowed.",
                "example": "CO",
                "type": "string",
                "enum": [
                  "AK",
                  "AL",
                  "AR",
                  "AS",
                  "AZ",
                  "CA",
                  "CO",
                  "CT",
                  "DC",
                  "DE",
                  "FL",
                  "FM",
                  "GA",
                  "GU",
                  "HI",
                  "IA",
                  "ID",
                  "IL",
                  "IN",
                  "KS",
                  "KY",
                  "LA",
                  "MA",
                  "MD",
                  "ME",
                  "MH",
                  "MI",
                  "MN",
                  "MO",
                  "MP",
                  "MS",
                  "MT",
                  "NC",
                  "ND",
                  "NE",
                  "NH",
                  "NJ",
                  "NM",
                  "NV",
                  "NY",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "PW",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UM",
                  "UT",
                  "VA",
                  "VI",
                  "VT",
                  "WA",
                  "WI",
                  "WV",
                  "WY"
                ]
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "title": "PhoneType",
                "description": "Phone type.",
                "example": "mobile",
                "type": "string",
                "enum": [
                  "mobile",
                  "home"
                ]
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "title": "AlternatePhoneType",
                "description": "Alternate phone type.",
                "example": "home",
                "type": "string",
                "enum": [
                  "mobile",
                  "home"
                ]
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              },
              "identification": {
                "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                "type": "array",
                "items": {
                  "id": "Identification",
                  "title": "Identification",
                  "type": "object",
                  "properties": {
                    "idType": {
                      "title": "IdType",
                      "description": "Type of ID provided by the owner.",
                      "example": "PASSPORT",
                      "type": "string",
                      "enum": [
                        "ALIEN ID",
                        "CREDIT BUREAU",
                        "DRIVERS LICENSE",
                        "STATE ID",
                        "MEXICAN CONSULATE",
                        "MILITARY ID",
                        "OTHER",
                        "PASSPORT"
                      ]
                    },
                    "idNumber": {
                      "description": "Owner's ID number.",
                      "example": "312312341",
                      "type": "string",
                      "maxLength": 40
                    },
                    "issuedCity": {
                      "description": "City in which ID was issued.",
                      "example": "City Town",
                      "type": "string",
                      "maxLength": 28
                    },
                    "issuedState": {
                      "title": "IssuedState",
                      "description": "Valid state code where ID was issued.",
                      "example": "CO",
                      "type": "string",
                      "maxLength": 2,
                      "enum": [
                        "AK",
                        "AL",
                        "AR",
                        "AS",
                        "AZ",
                        "CA",
                        "CO",
                        "CT",
                        "DC",
                        "DE",
                        "FL",
                        "FM",
                        "GA",
                        "GU",
                        "HI",
                        "IA",
                        "ID",
                        "IL",
                        "IN",
                        "KS",
                        "KY",
                        "LA",
                        "MA",
                        "MD",
                        "ME",
                        "MH",
                        "MI",
                        "MN",
                        "MO",
                        "MP",
                        "MS",
                        "MT",
                        "NC",
                        "ND",
                        "NE",
                        "NH",
                        "NJ",
                        "NM",
                        "NV",
                        "NY",
                        "OH",
                        "OK",
                        "OR",
                        "PA",
                        "PR",
                        "PW",
                        "RI",
                        "SC",
                        "SD",
                        "TN",
                        "TX",
                        "UT",
                        "VA",
                        "VI",
                        "VT",
                        "WA",
                        "WI",
                        "WV",
                        "WY"
                      ]
                    },
                    "issuedCountry": {
                      "description": "Country where ID was issued.",
                      "example": "US",
                      "type": "string",
                      "maxLength": 2
                    },
                    "dateIssued": {
                      "description": "Date ID was issued (CCYY-MM-DD).",
                      "example": "1999-01-30",
                      "type": "string",
                      "format": "date"
                    },
                    "dateExpires": {
                      "description": "Date ID expires (CCYY-MM-DD).",
                      "example": "2020-02-11",
                      "type": "string",
                      "format": "date"
                    }
                  },
                  "required": [
                    "idType",
                    "idNumber"
                  ]
                }
              }
            },
            "required": [
              "roleName",
              "signingExperience",
              "signingOrder",
              "firstName",
              "lastName",
              "phoneNumber",
              "email",
              "ssn",
              "dob",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          }
        },
        "contacts": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Contact_1",
            "title": "Contact_1",
            "type": "object",
            "properties": {
              "type": {
                "title": "Type4",
                "description": "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST.",
                "example": "Primary Contact",
                "type": "string",
                "enum": [
                  "Primary Contact",
                  "Store Primary Contact",
                  "Accounting Contact",
                  "Customer Service Contact",
                  "Shipping Contact",
                  "Third Party Contact",
                  "Vendor Contact Info",
                  "PCI Contact",
                  "Corporate"
                ]
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "birthDate": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "$ref": "AuthorizedSigner_1#/properties/phoneType"
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "$ref": "AuthorizedSigner_1#/properties/alternatePhoneType"
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              }
            },
            "required": [
              "type",
              "firstName",
              "lastName",
              "phoneNumber",
              "email"
            ]
          },
          "uniqueItems": true,
          "minItems": 1
        },
        "addresses": {
          "description": "",
          "example": [
            {
              "type": "Mailing Address",
              "addressLine1": "1234 W Tester Ave.",
              "city": "City Town",
              "state": "CO",
              "country": "United States",
              "postalCode": "80123",
              "postalCodeExtension": "1234"
            },
            {
              "type": "Physical Address",
              "addressLine1": "1234 W Tester Ave.",
              "city": "City Town",
              "state": "CO",
              "country": "United States",
              "postalCode": "80123",
              "postalCodeExtension": "1234"
            },
            {
              "type": "Shipping Address",
              "addressLine1": "1234 W Tester Ave.",
              "city": "City Town",
              "state": "CO",
              "country": "United States",
              "postalCode": "80123",
              "postalCodeExtension": "1234"
            }
          ],
          "type": "array",
          "items": {
            "id": "Address_1",
            "title": "Address_1",
            "type": "object",
            "properties": {
              "type": {
                "title": "AddressType",
                "description": "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory.",
                "example": "Physical Address",
                "type": "string",
                "enum": [
                  "Mailing Address",
                  "Physical Address",
                  "Shipping Address"
                ]
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "$ref": "AuthorizedSigner_1#/properties/state"
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              }
            },
            "required": [
              "type",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          },
          "uniqueItems": true,
          "minItems": 1
        },
        "clientTrackingId": {
          "description": "This is an optional field that can be used by the partners to send a unique Id from their application for reporting purposes.",
          "example": "1341341234132412341",
          "type": "string",
          "minLength": 1,
          "maxLength": 36
        },
        "owners": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Owner_1",
            "title": "Owner_1",
            "description": "A Control Owner is required for the following ownership types > LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT",
            "example": {
              "type": "Control Owner Contact",
              "title": "Owner",
              "firstName": "Timothy",
              "middleInitial": "M",
              "lastName": "Jones",
              "phoneNumber": "1234567890",
              "phoneNumberExt": "1234",
              "faxNumber": "1234567890",
              "email": "test@test.com",
              "ownershipPercentage": 23,
              "ssn": "123456789",
              "dob": "2000-03-23",
              "addressLine1": "4355 N Coalwhipe St.",
              "city": "City Town",
              "state": "OH",
              "country": "United States",
              "postalCode": "80123",
              "postalCodeExtension": "1234"
            },
            "type": "object",
            "properties": {
              "type": {
                "title": "Type",
                "description": "The Owner Type. Please note the above Ownership Types where a Control Owner is required.",
                "type": "string",
                "enum": [
                  "Control Owner Contact",
                  "Owner 1 Contact",
                  "Owner 2 Contact",
                  "Owner 3 Contact",
                  "Owner 4 Contact"
                ]
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "$ref": "AuthorizedSigner_1#/properties/state"
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "$ref": "AuthorizedSigner_1#/properties/phoneType"
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "$ref": "AuthorizedSigner_1#/properties/alternatePhoneType"
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "ownershipPercentage": {
                "description": "Ownership stake percentage.",
                "type": "integer",
                "minimum": 0.0,
                "maximum": 100.0,
                "format": "int32"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "dob": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              },
              "identification": {
                "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                "type": "array",
                "items": {
                  "$ref": "Identification"
                }
              }
            },
            "required": [
              "type",
              "firstName",
              "lastName",
              "phoneNumber",
              "email",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          }
        },
        "guarantors": {
          "description": "Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.",
          "type": "array",
          "items": {
            "id": "Guarantor_1",
            "title": "Guarantor_1",
            "type": "object",
            "properties": {
              "type": {
                "title": "Type3",
                "example": "Guarantor 1 Contact",
                "type": "string",
                "enum": [
                  "Guarantor 1 Contact",
                  "Guarantor 2 Contact",
                  "Guarantor 3 Contact",
                  "Guarantor 4 Contact"
                ]
              },
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumber": {
                "description": "10-digit phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "addressLine1": {
                "description": "Address Line 1. Field for house number, street and direction.",
                "example": "4355 N Coalwhipe St.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "city": {
                "example": "Denver",
                "type": "string",
                "minLength": 1,
                "maxLength": 28,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "state": {
                "$ref": "AuthorizedSigner_1#/properties/state"
              },
              "country": {
                "description": "Only United States is allowed.",
                "type": "string",
                "enum": [
                  "United States"
                ]
              },
              "postalCode": {
                "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                "example": "12345",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5}$"
              },
              "title": {
                "description": "Required for AMEX acquired merchants otherwise optional.",
                "example": "President",
                "type": "string",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "phoneNumberExt": {
                "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                "example": "1234",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[0-9]{1,8}$"
              },
              "phoneType": {
                "$ref": "AuthorizedSigner_1#/properties/phoneType"
              },
              "alternatePhone": {
                "description": "10-digit alternate phone number of the format  5131234567.",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "alternatePhoneType": {
                "$ref": "AuthorizedSigner_1#/properties/alternatePhoneType"
              },
              "faxNumber": {
                "description": "10-digit fax number of the format 5131234567",
                "example": "5131234567",
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "ownershipPercentage": {
                "description": "Ownership stake percentage.",
                "type": "integer",
                "minimum": 0.0,
                "maximum": 100.0,
                "format": "int32"
              },
              "ssn": {
                "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                "example": "123456789",
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "dob": {
                "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                "example": "2000-03-23",
                "type": "string",
                "format": "date"
              },
              "addressLine2": {
                "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                "example": "suite 104",
                "type": "string",
                "minLength": 1,
                "maxLength": 40,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "postalCodeExtension": {
                "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                "example": "1234",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4}$"
              },
              "identification": {
                "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                "type": "array",
                "items": {
                  "$ref": "Identification"
                }
              }
            },
            "required": [
              "type",
              "firstName",
              "lastName",
              "phoneNumber",
              "email",
              "addressLine1",
              "city",
              "state",
              "country",
              "postalCode"
            ]
          },
          "uniqueItems": true,
          "minItems": 1
        },
        "bankAccount": {
          "id": "BankAccount_1",
          "title": "BankAccount_1",
          "description": "Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber & bankName.",
          "type": "object",
          "properties": {
            "ddaType": {
              "title": "DdaType",
              "description": "Direct deposit account type.",
              "example": "Checking",
              "type": "string",
              "enum": [
                "Checking",
                "Savings"
              ]
            },
            "achType": {
              "title": "AchType",
              "description": "Check deposit type",
              "example": "Commercial Checking",
              "type": "string",
              "enum": [
                "Commercial Checking",
                "Private Checking"
              ]
            },
            "accountNumber": {
              "description": "Direct deposit account number.  Maximum 17 characters.",
              "example": "011401545",
              "type": "string",
              "minLength": 1,
              "maxLength": 17
            },
            "routingNumber": {
              "description": "Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.",
              "example": "102000076",
              "type": "string",
              "minLength": 9,
              "maxLength": 9
            },
            "bankName": {
              "description": "Bank name used for credit card processing services.",
              "example": "Bank name",
              "type": "string"
            }
          }
        },
        "advancedSettelment": {
          "description": "",
          "type": "array",
          "items": {
            "id": "AdvancedSettlement_inner",
            "title": "AdvancedSettlement_inner",
            "description": "Advanced Settlement gives merchants options to settle their account according to their needs with different settlement categories.",
            "type": "object",
            "properties": {
              "settlementCategories": {
                "description": "",
                "type": "array",
                "items": {
                  "title": "SettlementCategory",
                  "description": "Settlement categories gives merhant an option to settle their account with different settlement categories. It is an optional field. However at time of boarding it becomes a required field.",
                  "type": "string",
                  "enum": [
                    "Deposits",
                    "Fees",
                    "Exceptions"
                  ]
                }
              },
              "bankAccount": {
                "$ref": "BankAccount_1"
              }
            }
          }
        },
        "salesAgent": {
          "id": "SalesAgent_1",
          "title": "SalesAgent_1",
          "description": "The agent who is submitting the deal. It is an optional object. It becomes required, when  partner wants to route deals to their own sales rep. Please work with your integration specialist for route to sales rep functionality.",
          "type": "object",
          "properties": {
            "firstName": {
              "description": "Sales agent's first name.",
              "example": "John",
              "type": "string",
              "minLength": 1,
              "maxLength": 15
            },
            "lastName": {
              "description": "Sales agent's last name.",
              "example": "Doe",
              "type": "string",
              "minLength": 1,
              "maxLength": 25
            },
            "email": {
              "description": "Sales agent's email address.  Must have @ and a .",
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
            },
            "id": {
              "description": "Id for the Sales Contact.",
              "example": "U15315",
              "type": "string",
              "minLength": 1,
              "maxLength": 15
            },
            "mobilePhoneNumber": {
              "description": "Sales agent's 10-digit phone number of the format 5131234567.",
              "example": "1234567890",
              "type": "string",
              "pattern": "^[0-9]{10}$"
            }
          },
          "required": [
            "firstName",
            "lastName",
            "email"
          ]
        },
        "installationContact": {
          "id": "InstallationContact",
          "title": "InstallationContact",
          "description": "The Technical Agent who is going to do setup.",
          "type": "object",
          "properties": {
            "firstName": {
              "description": "Contact's first name.",
              "example": "Sam",
              "type": "string",
              "minLength": 1,
              "maxLength": 15,
              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
            },
            "lastName": {
              "description": "Contact's last name.",
              "example": "Doe",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
            },
            "email": {
              "description": "Contact's email address. Must have @ and a .",
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
            },
            "id": {
              "description": "Id for Technical Contact",
              "example": "U15318",
              "type": "string",
              "minLength": 1,
              "maxLength": 15,
              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
            },
            "mobilePhoneNumber": {
              "description": "Contact's 10-digit phone number of the format 5131234567.",
              "example": "1234567890",
              "type": "string",
              "minLength": 10,
              "maxLength": 10,
              "pattern": "([0-9]{10})$"
            }
          },
          "required": [
            "firstName",
            "lastName",
            "email"
          ]
        },
        "additionalInformation": {
          "description": "",
          "type": "array",
          "items": {
            "id": "AdditionalInformationObject",
            "title": "AdditionalInformationObject",
            "description": "Required for some partners. Work with your Developer Integrations specialist for more information.",
            "type": "object",
            "properties": {
              "key": {
                "title": "Key",
                "example": "partnerEmployeeId",
                "type": "string",
                "enum": [
                  "partnerEmployeeId",
                  "partnerEmployeeName",
                  "partnerEmployeePhoneNumber",
                  "partnerEmployeeEmail",
                  "partnerEmployeeType",
                  "partnerEmployeeBranch",
                  "partnerEmployeeCostCentre",
                  "partnerEmployeeRegion",
                  "partnerEmployeeOfficerCode",
                  "partnerEmployeeCompany",
                  "partnerEmployeeId2",
                  "partnerEmployeeName2",
                  "partnerEmployeePhoneNumber2",
                  "partnerEmployeeEmail2",
                  "partnerEmployeeType2",
                  "partnerEmployeeBranch2",
                  "partnerEmployeeCostCentre2",
                  "partnerEmployeeRegion2",
                  "partnerEmployeeOfficerCode2",
                  "partnerEmployeeCompany2",
                  "partnerEmployeeIndustry",
                  "partnerLeadSource",
                  "partnerEmployeeRef",
                  "partnerMethod",
                  "partnerVipIndicator",
                  "partnerMarketRegion",
                  "partnerPromotionCampaign",
                  "partnerLeadType",
                  "partnerCustom1",
                  "partnerCustom2",
                  "partnerCustom3",
                  "partnerCustom4",
                  "partnerCustom5",
                  "leadInitiatedBy"
                ]
              },
              "value": {
                "example": "4656",
                "type": "string"
              }
            }
          }
        },
        "leadSource": {
          "description": "The source of the lead.",
          "example": "LP Connect API",
          "type": "string",
          "maxLength": 150
        },
        "routeToSalesRep": {
          "description": "Used to route a application to a worldpay or partner sales rep.",
          "type": "boolean"
        },
        "productsInquiry": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 25
          },
          "uniqueItems": true
        }
      },
      "required": [
        "businessInfo",
        "transactionInfo",
        "authorizedSigners",
        "contacts",
        "addresses"
      ]
    }
- AdditionalInformationObject: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AdditionalInformationObject",
      "title": "AdditionalInformationObject",
      "description": "Required for some partners. Work with your Developer Integrations specialist for more information.",
      "type": "object",
      "properties": {
        "key": {
          "title": "Key",
          "example": "partnerEmployeeId",
          "type": "string",
          "enum": [
            "partnerEmployeeId",
            "partnerEmployeeName",
            "partnerEmployeePhoneNumber",
            "partnerEmployeeEmail",
            "partnerEmployeeType",
            "partnerEmployeeBranch",
            "partnerEmployeeCostCentre",
            "partnerEmployeeRegion",
            "partnerEmployeeOfficerCode",
            "partnerEmployeeCompany",
            "partnerEmployeeId2",
            "partnerEmployeeName2",
            "partnerEmployeePhoneNumber2",
            "partnerEmployeeEmail2",
            "partnerEmployeeType2",
            "partnerEmployeeBranch2",
            "partnerEmployeeCostCentre2",
            "partnerEmployeeRegion2",
            "partnerEmployeeOfficerCode2",
            "partnerEmployeeCompany2",
            "partnerEmployeeIndustry",
            "partnerLeadSource",
            "partnerEmployeeRef",
            "partnerMethod",
            "partnerVipIndicator",
            "partnerMarketRegion",
            "partnerPromotionCampaign",
            "partnerLeadType",
            "partnerCustom1",
            "partnerCustom2",
            "partnerCustom3",
            "partnerCustom4",
            "partnerCustom5",
            "leadInitiatedBy"
          ]
        },
        "value": {
          "example": "4656",
          "type": "string"
        }
      }
    }
- ApplicationResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ApplicationResponse",
      "title": "ApplicationResponse",
      "type": "object",
      "properties": {
        "externalRefId": {
          "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
          "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
          "type": "string",
          "maxLength": 36,
          "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
        }
      }
    }
- AdditionalConfigurationsResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AdditionalConfigurationsResponse",
      "title": "AdditionalConfigurationsResponse",
      "type": "object",
      "properties": {
        "customizations": {
          "description": "",
          "type": "array",
          "items": {
            "id": "AdditionalConfigurationCustomization",
            "title": "AdditionalConfigurationCustomization",
            "type": "object",
            "properties": {
              "customizationId": {
                "description": "Customization Id is internally populated from a master list.",
                "example": "1",
                "type": "string"
              },
              "customizationType": {
                "description": "type of customization",
                "example": "time",
                "type": "string"
              },
              "useProductMatrix": {
                "description": "Whether or not used in product matrix",
                "example": "N",
                "type": "string"
              },
              "productId": {
                "description": "unique ID for the product",
                "example": "12",
                "type": "string"
              },
              "code": {
                "description": "product code",
                "example": "CST01",
                "type": "string"
              },
              "customizationCodeDetails": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "CustomizationCodeDetails",
                  "title": "CustomizationCodeDetails",
                  "type": "object",
                  "properties": {
                    "value": {
                      "description": "customization code",
                      "example": "H",
                      "type": "string"
                    },
                    "shortDescription": {
                      "description": "short description of the customization code",
                      "example": "Host Auto Close",
                      "type": "string"
                    },
                    "longDescription": {
                      "description": "long description of the customization code",
                      "example": "Host Auto Close",
                      "type": "string"
                    }
                  }
                }
              },
              "customizationValue": {
                "description": "Actual Customization Value",
                "example": "H",
                "type": "string"
              },
              "customizationFieldLength": {
                "description": "Length of the customization value",
                "example": "1",
                "type": "string"
              },
              "customizationDecimalPlace": {
                "description": "Number of decimal places",
                "example": "0",
                "type": "string"
              },
              "customizationMinValue": {
                "description": "Minimum Value. Only applicable if the customization value is a number",
                "example": "0",
                "type": "string"
              },
              "customizationMaxValue": {
                "description": "Maximum Value. Only applicable if the customization value is a number",
                "example": "6",
                "type": "string"
              },
              "charactersAllowed": {
                "description": "All characters allowed for customization. Only applicable if the customization value is a string.",
                "example": "abcdefghijklmnopqrstuvwxyz",
                "type": "string"
              },
              "rule": {
                "description": "customization rule",
                "type": "string"
              },
              "regex": {
                "description": "Regular expression to validate the customization value",
                "example": "^[a-z]{1}",
                "type": "string"
              },
              "multiMerchantFlag": {
                "description": "Applicable in a multiple merchant situation",
                "example": false,
                "type": "boolean",
                "default": false
              },
              "shortDescription": {
                "description": "Description of the customization",
                "example": "CVV_PROMPTING",
                "type": "string"
              },
              "longDescription": {
                "description": "Verbose description of the customiztion",
                "example": "CVV_PROMPTING",
                "type": "string"
              }
            }
          }
        },
        "peripherals": {
          "description": "",
          "type": "array",
          "items": {
            "id": "AdditionalConfigurationPeripheral",
            "title": "AdditionalConfigurationPeripheral",
            "type": "object",
            "properties": {
              "peripheralId": {
                "description": "Peripheral IDs are internally populated.",
                "example": "35",
                "type": "string"
              },
              "model": {
                "description": "Peripheral Name",
                "example": "Pin Pad 1000 SE",
                "type": "string"
              },
              "shortDescription": {
                "description": "Description of the peripheral",
                "example": "PP1S",
                "type": "string"
              },
              "longDescription": {
                "description": "Verbose description of the peripheral",
                "example": "PPAD",
                "type": "string"
              },
              "isEMVCertified": {
                "description": "Whether peripheral is EMV certified",
                "example": true,
                "type": "boolean"
              },
              "isEMVCapable": {
                "description": "Whether peripheral is EMV Capable",
                "example": true,
                "type": "boolean"
              },
              "activePeripheralFlag": {
                "example": "Y",
                "type": "string"
              },
              "purchasePrice": {
                "description": "purchase price of the peripheral",
                "example": "168.12",
                "type": "string"
              },
              "leasePrice": {
                "description": "lease price of the peripheral",
                "example": "100.12",
                "type": "string"
              },
              "rentalPrice": {
                "description": "rental price of the peripheral",
                "example": "90",
                "type": "string"
              },
              "hardwareCost": {
                "description": "hardware cost of the terminal",
                "example": "50.75",
                "type": "string"
              }
            }
          }
        }
      }
    }
- AdditionalConfigurationCustomization: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AdditionalConfigurationCustomization",
      "title": "AdditionalConfigurationCustomization",
      "type": "object",
      "properties": {
        "customizationId": {
          "description": "Customization Id is internally populated from a master list.",
          "example": "1",
          "type": "string"
        },
        "customizationType": {
          "description": "type of customization",
          "example": "time",
          "type": "string"
        },
        "useProductMatrix": {
          "description": "Whether or not used in product matrix",
          "example": "N",
          "type": "string"
        },
        "productId": {
          "description": "unique ID for the product",
          "example": "12",
          "type": "string"
        },
        "code": {
          "description": "product code",
          "example": "CST01",
          "type": "string"
        },
        "customizationCodeDetails": {
          "description": "",
          "type": "array",
          "items": {
            "id": "CustomizationCodeDetails",
            "title": "CustomizationCodeDetails",
            "type": "object",
            "properties": {
              "value": {
                "description": "customization code",
                "example": "H",
                "type": "string"
              },
              "shortDescription": {
                "description": "short description of the customization code",
                "example": "Host Auto Close",
                "type": "string"
              },
              "longDescription": {
                "description": "long description of the customization code",
                "example": "Host Auto Close",
                "type": "string"
              }
            }
          }
        },
        "customizationValue": {
          "description": "Actual Customization Value",
          "example": "H",
          "type": "string"
        },
        "customizationFieldLength": {
          "description": "Length of the customization value",
          "example": "1",
          "type": "string"
        },
        "customizationDecimalPlace": {
          "description": "Number of decimal places",
          "example": "0",
          "type": "string"
        },
        "customizationMinValue": {
          "description": "Minimum Value. Only applicable if the customization value is a number",
          "example": "0",
          "type": "string"
        },
        "customizationMaxValue": {
          "description": "Maximum Value. Only applicable if the customization value is a number",
          "example": "6",
          "type": "string"
        },
        "charactersAllowed": {
          "description": "All characters allowed for customization. Only applicable if the customization value is a string.",
          "example": "abcdefghijklmnopqrstuvwxyz",
          "type": "string"
        },
        "rule": {
          "description": "customization rule",
          "type": "string"
        },
        "regex": {
          "description": "Regular expression to validate the customization value",
          "example": "^[a-z]{1}",
          "type": "string"
        },
        "multiMerchantFlag": {
          "description": "Applicable in a multiple merchant situation",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "shortDescription": {
          "description": "Description of the customization",
          "example": "CVV_PROMPTING",
          "type": "string"
        },
        "longDescription": {
          "description": "Verbose description of the customiztion",
          "example": "CVV_PROMPTING",
          "type": "string"
        }
      }
    }
- CustomizationCodeDetails: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CustomizationCodeDetails",
      "title": "CustomizationCodeDetails",
      "type": "object",
      "properties": {
        "value": {
          "description": "customization code",
          "example": "H",
          "type": "string"
        },
        "shortDescription": {
          "description": "short description of the customization code",
          "example": "Host Auto Close",
          "type": "string"
        },
        "longDescription": {
          "description": "long description of the customization code",
          "example": "Host Auto Close",
          "type": "string"
        }
      }
    }
- AdditionalConfigurationPeripheral: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AdditionalConfigurationPeripheral",
      "title": "AdditionalConfigurationPeripheral",
      "type": "object",
      "properties": {
        "peripheralId": {
          "description": "Peripheral IDs are internally populated.",
          "example": "35",
          "type": "string"
        },
        "model": {
          "description": "Peripheral Name",
          "example": "Pin Pad 1000 SE",
          "type": "string"
        },
        "shortDescription": {
          "description": "Description of the peripheral",
          "example": "PP1S",
          "type": "string"
        },
        "longDescription": {
          "description": "Verbose description of the peripheral",
          "example": "PPAD",
          "type": "string"
        },
        "isEMVCertified": {
          "description": "Whether peripheral is EMV certified",
          "example": true,
          "type": "boolean"
        },
        "isEMVCapable": {
          "description": "Whether peripheral is EMV Capable",
          "example": true,
          "type": "boolean"
        },
        "activePeripheralFlag": {
          "example": "Y",
          "type": "string"
        },
        "purchasePrice": {
          "description": "purchase price of the peripheral",
          "example": "168.12",
          "type": "string"
        },
        "leasePrice": {
          "description": "lease price of the peripheral",
          "example": "100.12",
          "type": "string"
        },
        "rentalPrice": {
          "description": "rental price of the peripheral",
          "example": "90",
          "type": "string"
        },
        "hardwareCost": {
          "description": "hardware cost of the terminal",
          "example": "50.75",
          "type": "string"
        }
      }
    }
- EquipmentSetup: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "EquipmentSetup",
      "title": "EquipmentSetup",
      "type": "object",
      "properties": {
        "shippingOption": {
          "title": "ShippingOption",
          "description": "The speed you would like the equipment to be shipped.",
          "example": "next day",
          "type": "string",
          "enum": [
            "ground",
            "next day",
            "2nd day"
          ]
        },
        "terminals": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Terminal",
            "title": "Terminal",
            "type": "object",
            "properties": {
              "terminalConfigs": {
                "id": "TerminalConfig",
                "title": "TerminalConfig",
                "type": "object",
                "properties": {
                  "terminalId": {
                    "description": "Terminal ID number.",
                    "example": "iCT220",
                    "type": "string"
                  },
                  "price": {
                    "description": "Terminal price",
                    "example": 187.99,
                    "type": "number"
                  },
                  "quantity": {
                    "example": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "logicalApplicationId": {
                    "description": "Logical application ID.",
                    "example": "MONE510",
                    "type": "string"
                  },
                  "accessMethod": {
                    "description": "Methods of terminal access.",
                    "example": "SSL",
                    "type": "string"
                  },
                  "paymentMethod": {
                    "title": "PaymentMethod",
                    "description": "Payment method for the selected terminal.",
                    "example": "PURCHASE / SALE",
                    "type": "string",
                    "enum": [
                      "PURCHASE / SALE",
                      "REPROGRAM / OWN",
                      "MONTH-TO-MONTH RENTAL",
                      "LEASE"
                    ]
                  },
                  "environmentName": {
                    "description": "Environment name",
                    "example": "Retail",
                    "type": "string"
                  },
                  "requestId": {
                    "description": "Partner assigned unique request ID for terminal setup.",
                    "example": "41231",
                    "type": "string"
                  },
                  "terminalModel": {
                    "description": "The model name of the terminal in use.",
                    "example": "Ingenico iCT220 CTLS 3.X Dial",
                    "type": "string"
                  },
                  "isVar": {
                    "description": "The value added reseller. Default value is false.",
                    "example": false,
                    "type": "boolean",
                    "default": false
                  },
                  "emvCapable": {
                    "description": "Is it EMV capabale?",
                    "example": true,
                    "type": "boolean",
                    "default": false
                  },
                  "leaseId": {
                    "description": "Lease ID. Required when PaymentMethod is selected as lease.",
                    "example": "12",
                    "type": "string"
                  },
                  "leaseTermLength": {
                    "title": "LeaseTermLength",
                    "description": "Lease term for the peripheral",
                    "example": "24",
                    "type": "string",
                    "enum": [
                      "24",
                      "36",
                      "48",
                      "60"
                    ]
                  },
                  "terminalSequenceNumber": {
                    "description": "Terminal sequence number. If not sent, the API will autogenerate a number.",
                    "example": "14",
                    "type": "string",
                    "pattern": "^[0-9]"
                  },
                  "specialCustomizations": {
                    "description": "Any customization request for a terminal configuration.",
                    "example": "Mulitple merchant setup is Yes",
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "required": [
                  "terminalId",
                  "price",
                  "quantity",
                  "logicalApplicationId",
                  "accessMethod",
                  "paymentMethod",
                  "environmentName"
                ]
              },
              "products": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Product",
                  "title": "Product",
                  "type": "object",
                  "properties": {
                    "productId": {
                      "description": "Product ID is populated internally.",
                      "example": "1",
                      "type": "string"
                    },
                    "productName": {
                      "description": "Payment method associated with the internally-populated ID.",
                      "example": "Debit",
                      "type": "string"
                    }
                  }
                }
              },
              "customizations": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "TerminalCustomization",
                  "title": "TerminalCustomization",
                  "type": "object",
                  "properties": {
                    "customizationId": {
                      "description": "Customization ID is internally populated from a master list.",
                      "example": "10",
                      "type": "string"
                    },
                    "customizationName": {
                      "example": "Auto-Close Time",
                      "type": "string"
                    },
                    "customizationFieldValue": {
                      "example": "N",
                      "type": "string"
                    }
                  }
                }
              },
              "peripherals": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Peripheral",
                  "title": "Peripheral",
                  "type": "object",
                  "properties": {
                    "peripheralId": {
                      "description": "Peripheral IDs are internally populated.",
                      "example": "231",
                      "type": "string"
                    },
                    "peripheralType": {
                      "description": "Peripheral type",
                      "example": "PPAD",
                      "type": "string"
                    },
                    "model": {
                      "example": "Magtek Check Reader",
                      "type": "string"
                    },
                    "leaseId": {
                      "description": "Lease ID for the peripheral",
                      "example": "18",
                      "type": "string"
                    },
                    "leaseTermLength": {
                      "$ref": "TerminalConfig#/properties/leaseTermLength"
                    },
                    "paymentMethod": {
                      "title": "PaymentMethod1",
                      "description": "Payment method for the selected peripheral.",
                      "example": "PURCHASE / SALE",
                      "type": "string",
                      "enum": [
                        "PURCHASE / SALE",
                        "REPROGRAM / OWN",
                        "MONTH-TO-MONTH RENTAL",
                        "LEASE"
                      ]
                    },
                    "amount": {
                      "description": "\"Payment Amount for the peripheral. Valid values are 0.00\n  - 9999999999.99.\"",
                      "example": "220.21",
                      "type": "string",
                      "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
                    },
                    "paymentConfirmationNumber": {
                      "description": "Payment confirmation number for the peripheral.",
                      "example": "123456",
                      "type": "string",
                      "pattern": "[0-9a-zA-Z]{6}|"
                    }
                  }
                }
              },
              "vendors": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "PaymentApplicationVendor",
                  "title": "PaymentApplicationVendor",
                  "description": "A payment application is installed software developed for processing various payments types: Credit, Debit, Gift, Checks, etc. and can be integrated with a POS system or used in a standalone manner.",
                  "type": "object",
                  "properties": {
                    "paymentApplicationId": {
                      "description": "Payment application ID",
                      "example": "9",
                      "type": "string"
                    },
                    "paymentApplicationName": {
                      "example": "PurchaseExpress",
                      "type": "string"
                    },
                    "vendorId": {
                      "description": "Vendor ID for the payment application.",
                      "example": "4",
                      "type": "string"
                    },
                    "version": {
                      "description": "Payment application version.",
                      "example": "1",
                      "type": "string"
                    },
                    "reseller": {
                      "description": "Reseller",
                      "example": "Agilysys Inc",
                      "type": "string"
                    },
                    "lastUpgradeDate": {
                      "description": "Last date payment application was upgraded.",
                      "example": "2012-02-18T00:00:00Z",
                      "type": "string",
                      "format": "date-time"
                    },
                    "notes": {
                      "description": "Custom notes can go here.",
                      "example": "Paymetric Gateway v3",
                      "type": "string"
                    }
                  }
                }
              },
              "gateways": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Gateway",
                  "title": "Gateway",
                  "description": "A gateway is a hosted payment processing application provided by a service provider and accessed through an internet connection.",
                  "type": "object",
                  "properties": {
                    "gatewayId": {
                      "description": "Internally-generated gateway ID.",
                      "example": "15",
                      "type": "string"
                    },
                    "gatewayName": {
                      "example": "Paymetric Gateway",
                      "type": "string"
                    },
                    "notes": {
                      "description": "Add any custom notes here.",
                      "example": "Paymetric Gateway v3",
                      "type": "string"
                    }
                  }
                }
              },
              "supply": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "TerminalSupply",
                  "title": "TerminalSupply",
                  "type": "object",
                  "properties": {
                    "supplyType": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Supply name",
                      "type": "string"
                    },
                    "quantity": {
                      "description": "Supply quantity",
                      "example": 2,
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total Supplies. Valid values are 0.00\n  - 9999999999.99.\"",
                      "example": "220.21",
                      "type": "string",
                      "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
                    }
                  },
                  "required": [
                    "supplyType"
                  ]
                }
              },
              "deployment": {
                "id": "TerminalDeployment",
                "title": "TerminalDeployment",
                "type": "object",
                "properties": {
                  "equipmentUpdateDeploy": {
                    "title": "EquipmentUpdateDeploy",
                    "example": "M",
                    "type": "string",
                    "enum": [
                      "M",
                      "D",
                      "N"
                    ]
                  },
                  "terminalBuildFlag": {
                    "example": true,
                    "type": "boolean"
                  },
                  "frontEndBuildFlag": {
                    "example": true,
                    "type": "boolean"
                  },
                  "sicMerchantFlag": {
                    "example": false,
                    "type": "boolean"
                  },
                  "specialInstructions": {
                    "description": "Special instructions for terminal deployment.",
                    "example": "Retail - H52460A (SP)",
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "required": [
                  "equipmentUpdateDeploy"
                ]
              }
            },
            "required": [
              "terminalConfigs",
              "products"
            ]
          }
        }
      }
    }
- Terminal: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Terminal",
      "title": "Terminal",
      "type": "object",
      "properties": {
        "terminalConfigs": {
          "id": "TerminalConfig",
          "title": "TerminalConfig",
          "type": "object",
          "properties": {
            "terminalId": {
              "description": "Terminal ID number.",
              "example": "iCT220",
              "type": "string"
            },
            "price": {
              "description": "Terminal price",
              "example": 187.99,
              "type": "number"
            },
            "quantity": {
              "example": 1,
              "type": "integer",
              "format": "int32"
            },
            "logicalApplicationId": {
              "description": "Logical application ID.",
              "example": "MONE510",
              "type": "string"
            },
            "accessMethod": {
              "description": "Methods of terminal access.",
              "example": "SSL",
              "type": "string"
            },
            "paymentMethod": {
              "title": "PaymentMethod",
              "description": "Payment method for the selected terminal.",
              "example": "PURCHASE / SALE",
              "type": "string",
              "enum": [
                "PURCHASE / SALE",
                "REPROGRAM / OWN",
                "MONTH-TO-MONTH RENTAL",
                "LEASE"
              ]
            },
            "environmentName": {
              "description": "Environment name",
              "example": "Retail",
              "type": "string"
            },
            "requestId": {
              "description": "Partner assigned unique request ID for terminal setup.",
              "example": "41231",
              "type": "string"
            },
            "terminalModel": {
              "description": "The model name of the terminal in use.",
              "example": "Ingenico iCT220 CTLS 3.X Dial",
              "type": "string"
            },
            "isVar": {
              "description": "The value added reseller. Default value is false.",
              "example": false,
              "type": "boolean",
              "default": false
            },
            "emvCapable": {
              "description": "Is it EMV capabale?",
              "example": true,
              "type": "boolean",
              "default": false
            },
            "leaseId": {
              "description": "Lease ID. Required when PaymentMethod is selected as lease.",
              "example": "12",
              "type": "string"
            },
            "leaseTermLength": {
              "title": "LeaseTermLength",
              "description": "Lease term for the peripheral",
              "example": "24",
              "type": "string",
              "enum": [
                "24",
                "36",
                "48",
                "60"
              ]
            },
            "terminalSequenceNumber": {
              "description": "Terminal sequence number. If not sent, the API will autogenerate a number.",
              "example": "14",
              "type": "string",
              "pattern": "^[0-9]"
            },
            "specialCustomizations": {
              "description": "Any customization request for a terminal configuration.",
              "example": "Mulitple merchant setup is Yes",
              "type": "string",
              "maxLength": 255
            }
          },
          "required": [
            "terminalId",
            "price",
            "quantity",
            "logicalApplicationId",
            "accessMethod",
            "paymentMethod",
            "environmentName"
          ]
        },
        "products": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Product",
            "title": "Product",
            "type": "object",
            "properties": {
              "productId": {
                "description": "Product ID is populated internally.",
                "example": "1",
                "type": "string"
              },
              "productName": {
                "description": "Payment method associated with the internally-populated ID.",
                "example": "Debit",
                "type": "string"
              }
            }
          }
        },
        "customizations": {
          "description": "",
          "type": "array",
          "items": {
            "id": "TerminalCustomization",
            "title": "TerminalCustomization",
            "type": "object",
            "properties": {
              "customizationId": {
                "description": "Customization ID is internally populated from a master list.",
                "example": "10",
                "type": "string"
              },
              "customizationName": {
                "example": "Auto-Close Time",
                "type": "string"
              },
              "customizationFieldValue": {
                "example": "N",
                "type": "string"
              }
            }
          }
        },
        "peripherals": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Peripheral",
            "title": "Peripheral",
            "type": "object",
            "properties": {
              "peripheralId": {
                "description": "Peripheral IDs are internally populated.",
                "example": "231",
                "type": "string"
              },
              "peripheralType": {
                "description": "Peripheral type",
                "example": "PPAD",
                "type": "string"
              },
              "model": {
                "example": "Magtek Check Reader",
                "type": "string"
              },
              "leaseId": {
                "description": "Lease ID for the peripheral",
                "example": "18",
                "type": "string"
              },
              "leaseTermLength": {
                "$ref": "TerminalConfig#/properties/leaseTermLength"
              },
              "paymentMethod": {
                "title": "PaymentMethod1",
                "description": "Payment method for the selected peripheral.",
                "example": "PURCHASE / SALE",
                "type": "string",
                "enum": [
                  "PURCHASE / SALE",
                  "REPROGRAM / OWN",
                  "MONTH-TO-MONTH RENTAL",
                  "LEASE"
                ]
              },
              "amount": {
                "description": "\"Payment Amount for the peripheral. Valid values are 0.00\n  - 9999999999.99.\"",
                "example": "220.21",
                "type": "string",
                "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
              },
              "paymentConfirmationNumber": {
                "description": "Payment confirmation number for the peripheral.",
                "example": "123456",
                "type": "string",
                "pattern": "[0-9a-zA-Z]{6}|"
              }
            }
          }
        },
        "vendors": {
          "description": "",
          "type": "array",
          "items": {
            "id": "PaymentApplicationVendor",
            "title": "PaymentApplicationVendor",
            "description": "A payment application is installed software developed for processing various payments types: Credit, Debit, Gift, Checks, etc. and can be integrated with a POS system or used in a standalone manner.",
            "type": "object",
            "properties": {
              "paymentApplicationId": {
                "description": "Payment application ID",
                "example": "9",
                "type": "string"
              },
              "paymentApplicationName": {
                "example": "PurchaseExpress",
                "type": "string"
              },
              "vendorId": {
                "description": "Vendor ID for the payment application.",
                "example": "4",
                "type": "string"
              },
              "version": {
                "description": "Payment application version.",
                "example": "1",
                "type": "string"
              },
              "reseller": {
                "description": "Reseller",
                "example": "Agilysys Inc",
                "type": "string"
              },
              "lastUpgradeDate": {
                "description": "Last date payment application was upgraded.",
                "example": "2012-02-18T00:00:00Z",
                "type": "string",
                "format": "date-time"
              },
              "notes": {
                "description": "Custom notes can go here.",
                "example": "Paymetric Gateway v3",
                "type": "string"
              }
            }
          }
        },
        "gateways": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Gateway",
            "title": "Gateway",
            "description": "A gateway is a hosted payment processing application provided by a service provider and accessed through an internet connection.",
            "type": "object",
            "properties": {
              "gatewayId": {
                "description": "Internally-generated gateway ID.",
                "example": "15",
                "type": "string"
              },
              "gatewayName": {
                "example": "Paymetric Gateway",
                "type": "string"
              },
              "notes": {
                "description": "Add any custom notes here.",
                "example": "Paymetric Gateway v3",
                "type": "string"
              }
            }
          }
        },
        "supply": {
          "description": "",
          "type": "array",
          "items": {
            "id": "TerminalSupply",
            "title": "TerminalSupply",
            "type": "object",
            "properties": {
              "supplyType": {
                "type": "string"
              },
              "name": {
                "description": "Supply name",
                "type": "string"
              },
              "quantity": {
                "description": "Supply quantity",
                "example": 2,
                "type": "integer",
                "format": "int32"
              },
              "total": {
                "description": "Total Supplies. Valid values are 0.00\n  - 9999999999.99.\"",
                "example": "220.21",
                "type": "string",
                "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
              }
            },
            "required": [
              "supplyType"
            ]
          }
        },
        "deployment": {
          "id": "TerminalDeployment",
          "title": "TerminalDeployment",
          "type": "object",
          "properties": {
            "equipmentUpdateDeploy": {
              "title": "EquipmentUpdateDeploy",
              "example": "M",
              "type": "string",
              "enum": [
                "M",
                "D",
                "N"
              ]
            },
            "terminalBuildFlag": {
              "example": true,
              "type": "boolean"
            },
            "frontEndBuildFlag": {
              "example": true,
              "type": "boolean"
            },
            "sicMerchantFlag": {
              "example": false,
              "type": "boolean"
            },
            "specialInstructions": {
              "description": "Special instructions for terminal deployment.",
              "example": "Retail - H52460A (SP)",
              "type": "string",
              "maxLength": 255
            }
          },
          "required": [
            "equipmentUpdateDeploy"
          ]
        }
      },
      "required": [
        "terminalConfigs",
        "products"
      ]
    }
- TerminalConfig: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TerminalConfig",
      "title": "TerminalConfig",
      "type": "object",
      "properties": {
        "terminalId": {
          "description": "Terminal ID number.",
          "example": "iCT220",
          "type": "string"
        },
        "price": {
          "description": "Terminal price",
          "example": 187.99,
          "type": "number"
        },
        "quantity": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "logicalApplicationId": {
          "description": "Logical application ID.",
          "example": "MONE510",
          "type": "string"
        },
        "accessMethod": {
          "description": "Methods of terminal access.",
          "example": "SSL",
          "type": "string"
        },
        "paymentMethod": {
          "title": "PaymentMethod",
          "description": "Payment method for the selected terminal.",
          "example": "PURCHASE / SALE",
          "type": "string",
          "enum": [
            "PURCHASE / SALE",
            "REPROGRAM / OWN",
            "MONTH-TO-MONTH RENTAL",
            "LEASE"
          ]
        },
        "environmentName": {
          "description": "Environment name",
          "example": "Retail",
          "type": "string"
        },
        "requestId": {
          "description": "Partner assigned unique request ID for terminal setup.",
          "example": "41231",
          "type": "string"
        },
        "terminalModel": {
          "description": "The model name of the terminal in use.",
          "example": "Ingenico iCT220 CTLS 3.X Dial",
          "type": "string"
        },
        "isVar": {
          "description": "The value added reseller. Default value is false.",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "emvCapable": {
          "description": "Is it EMV capabale?",
          "example": true,
          "type": "boolean",
          "default": false
        },
        "leaseId": {
          "description": "Lease ID. Required when PaymentMethod is selected as lease.",
          "example": "12",
          "type": "string"
        },
        "leaseTermLength": {
          "title": "LeaseTermLength",
          "description": "Lease term for the peripheral",
          "example": "24",
          "type": "string",
          "enum": [
            "24",
            "36",
            "48",
            "60"
          ]
        },
        "terminalSequenceNumber": {
          "description": "Terminal sequence number. If not sent, the API will autogenerate a number.",
          "example": "14",
          "type": "string",
          "pattern": "^[0-9]"
        },
        "specialCustomizations": {
          "description": "Any customization request for a terminal configuration.",
          "example": "Mulitple merchant setup is Yes",
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "terminalId",
        "price",
        "quantity",
        "logicalApplicationId",
        "accessMethod",
        "paymentMethod",
        "environmentName"
      ]
    }
- TerminalCustomization: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TerminalCustomization",
      "title": "TerminalCustomization",
      "type": "object",
      "properties": {
        "customizationId": {
          "description": "Customization ID is internally populated from a master list.",
          "example": "10",
          "type": "string"
        },
        "customizationName": {
          "example": "Auto-Close Time",
          "type": "string"
        },
        "customizationFieldValue": {
          "example": "N",
          "type": "string"
        }
      }
    }
- Product: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Product",
      "title": "Product",
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID is populated internally.",
          "example": "1",
          "type": "string"
        },
        "productName": {
          "description": "Payment method associated with the internally-populated ID.",
          "example": "Debit",
          "type": "string"
        }
      }
    }
- Peripheral: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Peripheral",
      "title": "Peripheral",
      "type": "object",
      "properties": {
        "peripheralId": {
          "description": "Peripheral IDs are internally populated.",
          "example": "231",
          "type": "string"
        },
        "peripheralType": {
          "description": "Peripheral type",
          "example": "PPAD",
          "type": "string"
        },
        "model": {
          "example": "Magtek Check Reader",
          "type": "string"
        },
        "leaseId": {
          "description": "Lease ID for the peripheral",
          "example": "18",
          "type": "string"
        },
        "leaseTermLength": {
          "title": "LeaseTermLength",
          "description": "Lease term for the peripheral",
          "example": "24",
          "type": "string",
          "enum": [
            "24",
            "36",
            "48",
            "60"
          ]
        },
        "paymentMethod": {
          "title": "PaymentMethod1",
          "description": "Payment method for the selected peripheral.",
          "example": "PURCHASE / SALE",
          "type": "string",
          "enum": [
            "PURCHASE / SALE",
            "REPROGRAM / OWN",
            "MONTH-TO-MONTH RENTAL",
            "LEASE"
          ]
        },
        "amount": {
          "description": "\"Payment Amount for the peripheral. Valid values are 0.00\n  - 9999999999.99.\"",
          "example": "220.21",
          "type": "string",
          "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
        },
        "paymentConfirmationNumber": {
          "description": "Payment confirmation number for the peripheral.",
          "example": "123456",
          "type": "string",
          "pattern": "[0-9a-zA-Z]{6}|"
        }
      }
    }
- PaymentApplicationVendor: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "PaymentApplicationVendor",
      "title": "PaymentApplicationVendor",
      "description": "A payment application is installed software developed for processing various payments types: Credit, Debit, Gift, Checks, etc. and can be integrated with a POS system or used in a standalone manner.",
      "type": "object",
      "properties": {
        "paymentApplicationId": {
          "description": "Payment application ID",
          "example": "9",
          "type": "string"
        },
        "paymentApplicationName": {
          "example": "PurchaseExpress",
          "type": "string"
        },
        "vendorId": {
          "description": "Vendor ID for the payment application.",
          "example": "4",
          "type": "string"
        },
        "version": {
          "description": "Payment application version.",
          "example": "1",
          "type": "string"
        },
        "reseller": {
          "description": "Reseller",
          "example": "Agilysys Inc",
          "type": "string"
        },
        "lastUpgradeDate": {
          "description": "Last date payment application was upgraded.",
          "example": "2012-02-18T00:00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "notes": {
          "description": "Custom notes can go here.",
          "example": "Paymetric Gateway v3",
          "type": "string"
        }
      }
    }
- Gateway: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Gateway",
      "title": "Gateway",
      "description": "A gateway is a hosted payment processing application provided by a service provider and accessed through an internet connection.",
      "type": "object",
      "properties": {
        "gatewayId": {
          "description": "Internally-generated gateway ID.",
          "example": "15",
          "type": "string"
        },
        "gatewayName": {
          "example": "Paymetric Gateway",
          "type": "string"
        },
        "notes": {
          "description": "Add any custom notes here.",
          "example": "Paymetric Gateway v3",
          "type": "string"
        }
      }
    }
- TerminalSupply: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TerminalSupply",
      "title": "TerminalSupply",
      "type": "object",
      "properties": {
        "supplyType": {
          "type": "string"
        },
        "name": {
          "description": "Supply name",
          "type": "string"
        },
        "quantity": {
          "description": "Supply quantity",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "description": "Total Supplies. Valid values are 0.00\n  - 9999999999.99.\"",
          "example": "220.21",
          "type": "string",
          "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
        }
      },
      "required": [
        "supplyType"
      ]
    }
- TerminalDeployment: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TerminalDeployment",
      "title": "TerminalDeployment",
      "type": "object",
      "properties": {
        "equipmentUpdateDeploy": {
          "title": "EquipmentUpdateDeploy",
          "example": "M",
          "type": "string",
          "enum": [
            "M",
            "D",
            "N"
          ]
        },
        "terminalBuildFlag": {
          "example": true,
          "type": "boolean"
        },
        "frontEndBuildFlag": {
          "example": true,
          "type": "boolean"
        },
        "sicMerchantFlag": {
          "example": false,
          "type": "boolean"
        },
        "specialInstructions": {
          "description": "Special instructions for terminal deployment.",
          "example": "Retail - H52460A (SP)",
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "equipmentUpdateDeploy"
      ]
    }
- ApplicationStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ApplicationStatus",
      "title": "ApplicationStatus",
      "example": {
        "externalRefId": "a57223b9-578a-4294-93bf-30f64fdd24a7",
        "contractStatus": "In Progress",
        "description": "Underwriting is in progress.",
        "pendedReason": "Credit Report|Website address needed"
      },
      "type": "object",
      "properties": {
        "externalRefId": {
          "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
          "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
          "type": "string",
          "maxLength": 36,
          "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
        },
        "contractStatus": {
          "title": "ContractStatus",
          "type": "string",
          "enum": [
            "Complete",
            "In Progress",
            "Error",
            "Pending"
          ]
        },
        "description": {
          "type": "string"
        },
        "pendedReason": {
          "description": "Detailed Underwriting Pended reason of the deal.",
          "type": "string"
        }
      }
    }
- StatusHistoryResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "StatusHistoryResponse",
      "title": "StatusHistoryResponse",
      "type": "object",
      "properties": {
        "externalRefId": {
          "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
          "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
          "type": "string",
          "maxLength": 36,
          "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
        },
        "statusHistory": {
          "description": "",
          "type": "array",
          "items": {
            "id": "StatusHistory",
            "title": "StatusHistory",
            "type": "object",
            "properties": {
              "statusSeqNumber": {
                "example": 2200,
                "type": "integer",
                "format": "int32"
              },
              "detailStatus": {
                "example": "Contract Signed",
                "type": "string"
              },
              "summaryStatus": {
                "example": "App Submitted",
                "type": "string"
              },
              "statusCategory": {
                "example": "Contract",
                "type": "string"
              },
              "statusDateTime": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
- StatusHistory: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "StatusHistory",
      "title": "StatusHistory",
      "type": "object",
      "properties": {
        "statusSeqNumber": {
          "example": 2200,
          "type": "integer",
          "format": "int32"
        },
        "detailStatus": {
          "example": "Contract Signed",
          "type": "string"
        },
        "summaryStatus": {
          "example": "App Submitted",
          "type": "string"
        },
        "statusCategory": {
          "example": "Contract",
          "type": "string"
        },
        "statusDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
- SignerStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SignerStatus",
      "title": "SignerStatus",
      "type": "object",
      "properties": {
        "externalRefId": {
          "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
          "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
          "type": "string",
          "maxLength": 36,
          "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
        },
        "authorizedSigners": {
          "description": "",
          "type": "array",
          "items": {
            "id": "AuthSigners",
            "title": "AuthSigners",
            "type": "object",
            "properties": {
              "firstName": {
                "description": "First name. Region based validations will be applied to this field.",
                "example": "Todd",
                "type": "string",
                "minLength": 1,
                "maxLength": 15,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "middleInitial": {
                "description": "Middle initial.",
                "example": "M",
                "type": "string",
                "minLength": 1,
                "maxLength": 1,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "lastName": {
                "description": "Last name. Region based validations will be applied to this field.",
                "example": "Davis",
                "type": "string",
                "minLength": 1,
                "maxLength": 25,
                "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
              },
              "email": {
                "description": "Email address of the contact. Must have @ and a .",
                "example": "test@gmail.com",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
              },
              "status": {
                "description": "Status of the signer",
                "example": "sent",
                "type": "string"
              },
              "lastUpdated": {
                "description": "Date contract was last updated",
                "type": "string",
                "format": "date-time"
              },
              "dateSubmitted": {
                "description": "Date contract was last updated",
                "type": "string",
                "format": "date-time"
              },
              "dateSent": {
                "description": "Date contract was sent",
                "type": "string",
                "format": "date-time"
              },
              "dateDelivered": {
                "description": "Date contract was delivered",
                "type": "string",
                "format": "date-time"
              },
              "dateSigned": {
                "description": "Date contract was signed",
                "type": "string",
                "format": "date-time"
              },
              "signerRoleName": {
                "description": "Role of the signer",
                "example": "Merchant",
                "type": "string"
              },
              "signerExperience": {
                "description": "Method of sign",
                "example": "wet",
                "type": "string"
              }
            }
          }
        }
      }
    }
- AuthSigners: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AuthSigners",
      "title": "AuthSigners",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "First name. Region based validations will be applied to this field.",
          "example": "Todd",
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "middleInitial": {
          "description": "Middle initial.",
          "example": "M",
          "type": "string",
          "minLength": 1,
          "maxLength": 1,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "lastName": {
          "description": "Last name. Region based validations will be applied to this field.",
          "example": "Davis",
          "type": "string",
          "minLength": 1,
          "maxLength": 25,
          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
        },
        "email": {
          "description": "Email address of the contact. Must have @ and a .",
          "example": "test@gmail.com",
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
        },
        "status": {
          "description": "Status of the signer",
          "example": "sent",
          "type": "string"
        },
        "lastUpdated": {
          "description": "Date contract was last updated",
          "type": "string",
          "format": "date-time"
        },
        "dateSubmitted": {
          "description": "Date contract was last updated",
          "type": "string",
          "format": "date-time"
        },
        "dateSent": {
          "description": "Date contract was sent",
          "type": "string",
          "format": "date-time"
        },
        "dateDelivered": {
          "description": "Date contract was delivered",
          "type": "string",
          "format": "date-time"
        },
        "dateSigned": {
          "description": "Date contract was signed",
          "type": "string",
          "format": "date-time"
        },
        "signerRoleName": {
          "description": "Role of the signer",
          "example": "Merchant",
          "type": "string"
        },
        "signerExperience": {
          "description": "Method of sign",
          "example": "wet",
          "type": "string"
        }
      }
    }
- DocumentLink: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DocumentLink",
      "title": "DocumentLink",
      "type": "object",
      "properties": {
        "externalRefId": {
          "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
          "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
          "type": "string",
          "maxLength": 36,
          "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
        },
        "returnUrl": {
          "description": "The recipient will be directed to the returnUrl once signing is complete. For example on how it looks:  https://docusign.com/Signing/StartInSession.aspx?t=7f0d21a4-2798-402f-8b26-b12dbb37ae40",
          "example": "https://docusign.com",
          "type": "string"
        }
      },
      "required": [
        "externalRefId"
      ]
    }
- DocuSignLink: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DocuSignLink",
      "title": "DocuSignLink",
      "type": "object",
      "properties": {
        "embeddingUrl": {
          "description": "UI embeded link of the Docusign contract for the externalRefId.",
          "example": "https://docusign.com/Signing/StartInSession.aspx?t=7f0d21a4-2798-402f-8b26-b12dbb37ae40",
          "type": "string"
        }
      }
    }
- inline_response_200: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "inline_response_200",
      "title": "inline_response_200",
      "type": "object",
      "properties": {
        "equipment": {
          "description": "",
          "type": "array",
          "items": {
            "id": "inline_response_200_equipment",
            "title": "inline_response_200_equipment",
            "type": "object",
            "properties": {
              "id": {
                "example": "1",
                "type": "string"
              },
              "name": {
                "example": "Verifone LX570",
                "type": "string"
              },
              "logicalApplicationId": {
                "example": "1073",
                "type": "string"
              },
              "environment": {
                "example": "Retail",
                "type": "string"
              }
            }
          }
        }
      }
    }
- inline_response_200_1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "inline_response_200_1",
      "title": "inline_response_200_1",
      "type": "object",
      "properties": {
        "status": {
          "description": "UP or DOWN status of Lauchpad & it's downstream system.",
          "example": "UP",
          "type": "string"
        }
      }
    }
- inline_response_200_equipment: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "inline_response_200_equipment",
      "title": "inline_response_200_equipment",
      "type": "object",
      "properties": {
        "id": {
          "example": "1",
          "type": "string"
        },
        "name": {
          "example": "Verifone LX570",
          "type": "string"
        },
        "logicalApplicationId": {
          "example": "1073",
          "type": "string"
        },
        "environment": {
          "example": "Retail",
          "type": "string"
        }
      }
    }
- AcceptChargebacks: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "AcceptChargebacks",
      "description": "Do you have more than 25 chargeback accepted in the last 12 months?",
      "example": "No",
      "type": "string",
      "enum": [
        "Yes",
        "No"
      ]
    }
- AcceptCreditCards: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "AcceptCreditCards",
      "description": "Does the business accept credit cards?",
      "type": "string",
      "enum": [
        "true",
        "false"
      ]
    }
- AchType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "AchType",
      "description": "Check deposit type",
      "example": "Commercial Checking",
      "type": "string",
      "enum": [
        "Commercial Checking",
        "Private Checking"
      ]
    }
- ActiveMonth: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "ActiveMonth",
      "type": "string",
      "enum": [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ]
    }
- Content-Type: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Content-Type",
      "type": "string",
      "enum": [
        "application/json"
      ]
    }
- ContractStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "ContractStatus",
      "type": "string",
      "enum": [
        "Complete",
        "In Progress",
        "Error",
        "Pending"
      ]
    }
- DdaType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "DdaType",
      "description": "Direct deposit account type.",
      "example": "Checking",
      "type": "string",
      "enum": [
        "Checking",
        "Savings"
      ]
    }
- EquipmentUpdateDeploy: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "EquipmentUpdateDeploy",
      "example": "M",
      "type": "string",
      "enum": [
        "M",
        "D",
        "N"
      ]
    }
- IdType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "IdType",
      "description": "Type of ID provided by the owner.",
      "example": "PASSPORT",
      "type": "string",
      "enum": [
        "ALIEN ID",
        "CREDIT BUREAU",
        "DRIVERS LICENSE",
        "STATE ID",
        "MEXICAN CONSULATE",
        "MILITARY ID",
        "OTHER",
        "PASSPORT"
      ]
    }
- IssuedState: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "IssuedState",
      "description": "Valid state code where ID was issued.",
      "example": "CO",
      "type": "string",
      "maxLength": 2,
      "enum": [
        "AK",
        "AL",
        "AR",
        "AS",
        "AZ",
        "CA",
        "CO",
        "CT",
        "DC",
        "DE",
        "FL",
        "FM",
        "GA",
        "GU",
        "HI",
        "IA",
        "ID",
        "IL",
        "IN",
        "KS",
        "KY",
        "LA",
        "MA",
        "MD",
        "ME",
        "MH",
        "MI",
        "MN",
        "MO",
        "MP",
        "MS",
        "MT",
        "NC",
        "ND",
        "NE",
        "NH",
        "NJ",
        "NM",
        "NV",
        "NY",
        "OH",
        "OK",
        "OR",
        "PA",
        "PR",
        "PW",
        "RI",
        "SC",
        "SD",
        "TN",
        "TX",
        "UT",
        "VA",
        "VI",
        "VT",
        "WA",
        "WI",
        "WV",
        "WY"
      ]
    }
- Key: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Key",
      "example": "partnerEmployeeId",
      "type": "string",
      "enum": [
        "partnerEmployeeId",
        "partnerEmployeeName",
        "partnerEmployeePhoneNumber",
        "partnerEmployeeEmail",
        "partnerEmployeeType",
        "partnerEmployeeBranch",
        "partnerEmployeeCostCentre",
        "partnerEmployeeRegion",
        "partnerEmployeeOfficerCode",
        "partnerEmployeeCompany",
        "partnerEmployeeId2",
        "partnerEmployeeName2",
        "partnerEmployeePhoneNumber2",
        "partnerEmployeeEmail2",
        "partnerEmployeeType2",
        "partnerEmployeeBranch2",
        "partnerEmployeeCostCentre2",
        "partnerEmployeeRegion2",
        "partnerEmployeeOfficerCode2",
        "partnerEmployeeCompany2",
        "partnerEmployeeIndustry",
        "partnerLeadSource",
        "partnerEmployeeRef",
        "partnerMethod",
        "partnerVipIndicator",
        "partnerMarketRegion",
        "partnerPromotionCampaign",
        "partnerLeadType",
        "partnerCustom1",
        "partnerCustom2",
        "partnerCustom3",
        "partnerCustom4",
        "partnerCustom5",
        "leadInitiatedBy"
      ]
    }
- LeaseTermLength: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "LeaseTermLength",
      "description": "Lease term for the peripheral",
      "example": "24",
      "type": "string",
      "enum": [
        "24",
        "36",
        "48",
        "60"
      ]
    }
- OwnershipType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "OwnershipType",
      "description": "Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).",
      "example": "LLC",
      "type": "string",
      "enum": [
        "GOVERNMENT",
        "SOLE PROPRIETOR",
        "LLC",
        "PARTNERSHIP",
        "FIN INSTITUTION",
        "NON-PROFIT",
        "ASSOCIATION/ESTATE/TRUST",
        "PRIVATE CORPORATION",
        "SEC REGISTERED",
        "PUBLIC CORPORATION",
        "OTHER"
      ]
    }
- PaymentAcceptanceMethod: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "PaymentAcceptanceMethod",
      "type": "string",
      "enum": [
        "inPerson",
        "onlineSite",
        "phoneOrMailOrder"
      ]
    }
- PaymentMethod: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "PaymentMethod",
      "description": "Payment method for the selected terminal.",
      "example": "PURCHASE / SALE",
      "type": "string",
      "enum": [
        "PURCHASE / SALE",
        "REPROGRAM / OWN",
        "MONTH-TO-MONTH RENTAL",
        "LEASE"
      ]
    }
- PaymentMethod1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "PaymentMethod1",
      "description": "Payment method for the selected peripheral.",
      "example": "PURCHASE / SALE",
      "type": "string",
      "enum": [
        "PURCHASE / SALE",
        "REPROGRAM / OWN",
        "MONTH-TO-MONTH RENTAL",
        "LEASE"
      ]
    }
- Pciadc: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Pciadc",
      "description": "Indication if the merchant has had an account data compromise.",
      "example": "No",
      "type": "string",
      "enum": [
        "Yes",
        "No"
      ]
    }
- PcidssValidated: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "PcidssValidated",
      "description": "Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.",
      "example": "No",
      "type": "string",
      "enum": [
        "Yes",
        "No"
      ]
    }
- ReturnPolicy: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "ReturnPolicy",
      "description": "The business's return policy.",
      "example": "30 Day",
      "type": "string",
      "enum": [
        "3 Day",
        "30 Day",
        "60 Day",
        "60+ Day",
        "ALL SALES FINAL",
        "EXCHANGE ONLY/STORE CREDIT",
        "NO RETURN POLICY"
      ]
    }
- Seasonal: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Seasonal",
      "description": "Does the business operate seasonally?",
      "example": "Yes",
      "type": "string",
      "enum": [
        "Yes",
        "No"
      ]
    }
- SettlementCategory: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "SettlementCategory",
      "description": "Settlement categories gives merhant an option to settle their account with different settlement categories. It is an optional field. However at time of boarding it becomes a required field.",
      "type": "string",
      "enum": [
        "Deposits",
        "Fees",
        "Exceptions"
      ]
    }
- ShippingOption: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "ShippingOption",
      "description": "The speed you would like the equipment to be shipped.",
      "example": "next day",
      "type": "string",
      "enum": [
        "ground",
        "next day",
        "2nd day"
      ]
    }
- SurroundingArea: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "SurroundingArea",
      "description": "Type of area surroundning the business.",
      "example": "Commercial",
      "type": "string",
      "enum": [
        "Commercial",
        "Industrial",
        "Residential"
      ]
    }
- TaxExempt: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "TaxExempt",
      "type": "string",
      "enum": [
        "true",
        "false"
      ]
    }
- Type: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Type",
      "description": "The Owner Type. Please note the above Ownership Types where a Control Owner is required.",
      "type": "string",
      "enum": [
        "Control Owner Contact",
        "Owner 1 Contact",
        "Owner 2 Contact",
        "Owner 3 Contact",
        "Owner 4 Contact"
      ]
    }
- Type1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Type1",
      "description": "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST.",
      "example": "Primary Contact",
      "type": "string",
      "enum": [
        "Primary Contact",
        "Accounting Contact",
        "Customer Service Contact",
        "Shipping Contact",
        "Third Party Contact",
        "Vendor Contact Info",
        "PCI Contact",
        "Corporate"
      ]
    }
- Type3: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Type3",
      "example": "Guarantor 1 Contact",
      "type": "string",
      "enum": [
        "Guarantor 1 Contact",
        "Guarantor 2 Contact",
        "Guarantor 3 Contact",
        "Guarantor 4 Contact"
      ]
    }
- Type4: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Type4",
      "description": "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST.",
      "example": "Primary Contact",
      "type": "string",
      "enum": [
        "Primary Contact",
        "Store Primary Contact",
        "Accounting Contact",
        "Customer Service Contact",
        "Shipping Contact",
        "Third Party Contact",
        "Vendor Contact Info",
        "PCI Contact",
        "Corporate"
      ]
    }
- Warranty: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Warranty",
      "description": "Does the business offer warranties, dues, subscriptions, memberships, or other extended services?",
      "example": "1 YEAR",
      "type": "string",
      "enum": [
        "1 YEAR",
        "30 DAY",
        "60 DAY",
        "90 DAY",
        "LIFETIME",
        "NO"
      ]
    }
securitySchemes:
- api_key:
    description: >
      ``` License format is WORLDPAY license='xxxx'```
    type: x-custom
    describedBy:
      headers:
        Authorization:
          description: "``` License format is WORLDPAY license='xxxx'```"
          type: string
          required: true
          displayName: Authorization
/applications:
  /validate:
    put:
      description: Begins the merchant validation process before boarding after all necessary information has been submitted to the API. Please see the reference guide for specific boarding requirements.
      headers:
        externalRefId:
          description: The externalRefId returned from POST /applications call.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: true
          displayName: externalRefId
        v-correlation-id:
          description: Unique transaction Id. Will be generated if not provided and returned in response headers.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: false
          displayName: v-correlation-id
        Content-Type:
          description: Indicates the media type of the request-body. Accepts application/json.
          example: application/json
          default: application/json
          required: false
          displayName: Content-Type
          enum:
          - application/json
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              required: false
        '0':
          description: Default errors
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "examples": [
                    {
                      "Id": "400 Bad Request",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                      "ExternalValue": null,
                      "Description": "Bad Request"
                    },
                    {
                      "Id": "401 Unauthorized",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "403 Forbidden",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "404 Not Found",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "412 Pre Condition",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "415 Bad content Type",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "500 Server Error",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "httpStatusCode": 400,
                    "httpStatusMessage": "BAD_REQUEST",
                    "errors": [
                      {
                        "errorCode": "PARAMETER_VALIDATION_ERROR",
                        "errorMessage": "PartnerId is missing in header.",
                        "target": "partnerId"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "httpStatusCode": {
                      "example": 404,
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpStatusMessage": {
                      "example": "STATUS-MESSAGE",
                      "type": "string"
                    },
                    "errors": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "Error",
                        "title": "Error",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "ERROR_CODE",
                            "type": "string"
                          },
                          "errorMessage": {
                            "example": "Error message here.",
                            "type": "string"
                          },
                          "target": {
                            "example": "Target",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
  /board:
    put:
      description: Begins the merchant boarding process after all necessary information has been submitted to the API. Please see the reference guide for specific boarding requirements.
      headers:
        externalRefId:
          description: The externalRefId returned from POST /applications call.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: true
          displayName: externalRefId
        v-correlation-id:
          description: Unique transaction Id. Will be generated if not provided and returned in response headers.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: false
          displayName: v-correlation-id
        Content-Type:
          description: Indicates the media type of the request-body. Accepts application/json.
          example: application/json
          default: application/json
          required: false
          displayName: Content-Type
          enum:
          - application/json
        threatmetrixId:
          description: A unique session id
          type: string
          required: false
          displayName: threatmetrixId
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              required: false
        '0':
          description: Default errors
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "examples": [
                    {
                      "Id": "400 Bad Request",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                      "ExternalValue": null,
                      "Description": "Bad Request"
                    },
                    {
                      "Id": "401 Unauthorized",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "403 Forbidden",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "404 Not Found",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "412 Pre Condition",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "415 Bad content Type",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "500 Server Error",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "httpStatusCode": 400,
                    "httpStatusMessage": "BAD_REQUEST",
                    "errors": [
                      {
                        "errorCode": "PARAMETER_VALIDATION_ERROR",
                        "errorMessage": "PartnerId is missing in header.",
                        "target": "partnerId"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "httpStatusCode": {
                      "example": 404,
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpStatusMessage": {
                      "example": "STATUS-MESSAGE",
                      "type": "string"
                    },
                    "errors": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "Error",
                        "title": "Error",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "ERROR_CODE",
                            "type": "string"
                          },
                          "errorMessage": {
                            "example": "Error message here.",
                            "type": "string"
                          },
                          "target": {
                            "example": "Target",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
  /status:
    /history:
      get:
        description: Use this endpoint to get a application's status history.
        headers:
          externalRefId:
            description: The externalRefId returned from POST /applications call.
            example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
            required: true
            displayName: externalRefId
          v-correlation-id:
            description: Unique transaction Id. Will be generated if not provided and returned in response headers.
            example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
            required: false
            displayName: v-correlation-id
        responses:
          '200':
            description: Success
            headers:
              v-correlation-id:
                required: false
            body:
              application/json:
                schema: |
                  {
                    "id": "StatusHistoryResponse",
                    "title": "StatusHistoryResponse",
                    "type": "object",
                    "properties": {
                      "externalRefId": {
                        "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
                        "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
                        "type": "string",
                        "maxLength": 36,
                        "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
                      },
                      "statusHistory": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "StatusHistory",
                          "title": "StatusHistory",
                          "type": "object",
                          "properties": {
                            "statusSeqNumber": {
                              "example": 2200,
                              "type": "integer",
                              "format": "int32"
                            },
                            "detailStatus": {
                              "example": "Contract Signed",
                              "type": "string"
                            },
                            "summaryStatus": {
                              "example": "App Submitted",
                              "type": "string"
                            },
                            "statusCategory": {
                              "example": "Contract",
                              "type": "string"
                            },
                            "statusDateTime": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
          '0':
            description: Default errors
            body:
              application/json:
                schema: |
                  {
                    "id": "ErrorResponse",
                    "title": "ErrorResponse",
                    "examples": [
                      {
                        "Id": "400 Bad Request",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                        "ExternalValue": null,
                        "Description": "Bad Request"
                      },
                      {
                        "Id": "401 Unauthorized",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "403 Forbidden",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "404 Not Found",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "412 Pre Condition",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "415 Bad content Type",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "500 Server Error",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      }
                    ],
                    "example": {
                      "httpStatusCode": 400,
                      "httpStatusMessage": "BAD_REQUEST",
                      "errors": [
                        {
                          "errorCode": "PARAMETER_VALIDATION_ERROR",
                          "errorMessage": "PartnerId is missing in header.",
                          "target": "partnerId"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "httpStatusCode": {
                        "example": 404,
                        "type": "integer",
                        "format": "int32"
                      },
                      "httpStatusMessage": {
                        "example": "STATUS-MESSAGE",
                        "type": "string"
                      },
                      "errors": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "Error",
                          "title": "Error",
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "ERROR_CODE",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "Error message here.",
                              "type": "string"
                            },
                            "target": {
                              "example": "Target",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
    /signers:
      get:
        description: Use this endpoint to get signer status
        headers:
          externalRefId:
            description: The externalRefId returned from POST /applications call.
            example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
            required: true
            displayName: externalRefId
          v-correlation-id:
            description: Unique transaction Id. Will be generated if not provided and returned in response headers.
            example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
            required: false
            displayName: v-correlation-id
          Content-Type:
            description: Indicates the media type of the request-body. Accepts application/json.
            example: application/json
            default: application/json
            required: false
            displayName: Content-Type
            enum:
            - application/json
        responses:
          '200':
            description: Success
            headers:
              v-correlation-id:
                required: false
            body:
              application/json:
                schema: |
                  {
                    "id": "SignerStatus",
                    "title": "SignerStatus",
                    "type": "object",
                    "properties": {
                      "externalRefId": {
                        "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
                        "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
                        "type": "string",
                        "maxLength": 36,
                        "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
                      },
                      "authorizedSigners": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "AuthSigners",
                          "title": "AuthSigners",
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "description": "First name. Region based validations will be applied to this field.",
                              "example": "Todd",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 15,
                              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                            },
                            "middleInitial": {
                              "description": "Middle initial.",
                              "example": "M",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 1,
                              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                            },
                            "lastName": {
                              "description": "Last name. Region based validations will be applied to this field.",
                              "example": "Davis",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 25,
                              "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                            },
                            "email": {
                              "description": "Email address of the contact. Must have @ and a .",
                              "example": "test@gmail.com",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 64,
                              "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                            },
                            "status": {
                              "description": "Status of the signer",
                              "example": "sent",
                              "type": "string"
                            },
                            "lastUpdated": {
                              "description": "Date contract was last updated",
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateSubmitted": {
                              "description": "Date contract was last updated",
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateSent": {
                              "description": "Date contract was sent",
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateDelivered": {
                              "description": "Date contract was delivered",
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateSigned": {
                              "description": "Date contract was signed",
                              "type": "string",
                              "format": "date-time"
                            },
                            "signerRoleName": {
                              "description": "Role of the signer",
                              "example": "Merchant",
                              "type": "string"
                            },
                            "signerExperience": {
                              "description": "Method of sign",
                              "example": "wet",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
          '0':
            description: Default errors
            body:
              application/json:
                schema: |
                  {
                    "id": "ErrorResponse",
                    "title": "ErrorResponse",
                    "examples": [
                      {
                        "Id": "400 Bad Request",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                        "ExternalValue": null,
                        "Description": "Bad Request"
                      },
                      {
                        "Id": "401 Unauthorized",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "403 Forbidden",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "404 Not Found",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "412 Pre Condition",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "415 Bad content Type",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "500 Server Error",
                        "Name": null,
                        "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                        "ExternalValue": null,
                        "Description": null
                      }
                    ],
                    "example": {
                      "httpStatusCode": 400,
                      "httpStatusMessage": "BAD_REQUEST",
                      "errors": [
                        {
                          "errorCode": "PARAMETER_VALIDATION_ERROR",
                          "errorMessage": "PartnerId is missing in header.",
                          "target": "partnerId"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "httpStatusCode": {
                        "example": 404,
                        "type": "integer",
                        "format": "int32"
                      },
                      "httpStatusMessage": {
                        "example": "STATUS-MESSAGE",
                        "type": "string"
                      },
                      "errors": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "Error",
                          "title": "Error",
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "ERROR_CODE",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "Error message here.",
                              "type": "string"
                            },
                            "target": {
                              "example": "Target",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
    get:
      description: Retrieves the status of a contract when passed with an externalRefID. Both the externalRefID and authorization header are required.
      headers:
        externalRefId:
          description: The externalRefId returned from POST /applications call.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: true
          displayName: externalRefId
        v-correlation-id:
          description: Unique transaction Id. Will be generated if not provided and returned in response headers.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: false
          displayName: v-correlation-id
      responses:
        '200':
          description: |
            Success


            ApplicationStatus gives following Information,


            - 'contractStatus' - Current status of contract processing.


            - 'description' - Detailed description of the contractStatus.
          headers:
            v-correlation-id:
              required: false
          body:
            application/json:
              schema: |
                {
                  "id": "ApplicationStatus",
                  "title": "ApplicationStatus",
                  "example": {
                    "externalRefId": "a57223b9-578a-4294-93bf-30f64fdd24a7",
                    "contractStatus": "In Progress",
                    "description": "Underwriting is in progress.",
                    "pendedReason": "Credit Report|Website address needed"
                  },
                  "type": "object",
                  "properties": {
                    "externalRefId": {
                      "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
                      "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
                      "type": "string",
                      "maxLength": 36,
                      "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
                    },
                    "contractStatus": {
                      "title": "ContractStatus",
                      "type": "string",
                      "enum": [
                        "Complete",
                        "In Progress",
                        "Error",
                        "Pending"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "pendedReason": {
                      "description": "Detailed Underwriting Pended reason of the deal.",
                      "type": "string"
                    }
                  }
                }
        '0':
          description: Default errors
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "examples": [
                    {
                      "Id": "400 Bad Request",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                      "ExternalValue": null,
                      "Description": "Bad Request"
                    },
                    {
                      "Id": "401 Unauthorized",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "403 Forbidden",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "404 Not Found",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "412 Pre Condition",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "415 Bad content Type",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "500 Server Error",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "httpStatusCode": 400,
                    "httpStatusMessage": "BAD_REQUEST",
                    "errors": [
                      {
                        "errorCode": "PARAMETER_VALIDATION_ERROR",
                        "errorMessage": "PartnerId is missing in header.",
                        "target": "partnerId"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "httpStatusCode": {
                      "example": 404,
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpStatusMessage": {
                      "example": "STATUS-MESSAGE",
                      "type": "string"
                    },
                    "errors": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "Error",
                        "title": "Error",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "ERROR_CODE",
                            "type": "string"
                          },
                          "errorMessage": {
                            "example": "Error message here.",
                            "type": "string"
                          },
                          "target": {
                            "example": "Target",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
  /documentlink:
    post:
      description: Retrieves a Docusign link to view the contract.
      headers:
        v-correlation-id:
          description: Unique transaction Id. Will be generated if not provided and returned in response headers.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: false
          displayName: v-correlation-id
        Content-Type:
          description: Indicates the media type of the request-body. Accepts application/json.
          default: application/json
          required: false
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "DocumentLink",
              "title": "DocumentLink",
              "type": "object",
              "properties": {
                "externalRefId": {
                  "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
                  "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
                  "type": "string",
                  "maxLength": 36,
                  "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
                },
                "returnUrl": {
                  "description": "The recipient will be directed to the returnUrl once signing is complete. For example on how it looks:  https://docusign.com/Signing/StartInSession.aspx?t=7f0d21a4-2798-402f-8b26-b12dbb37ae40",
                  "example": "https://docusign.com",
                  "type": "string"
                }
              },
              "required": [
                "externalRefId"
              ]
            }
          example: ''
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              required: false
          body:
            application/json:
              schema: |
                {
                  "id": "DocuSignLink",
                  "title": "DocuSignLink",
                  "type": "object",
                  "properties": {
                    "embeddingUrl": {
                      "description": "UI embeded link of the Docusign contract for the externalRefId.",
                      "example": "https://docusign.com/Signing/StartInSession.aspx?t=7f0d21a4-2798-402f-8b26-b12dbb37ae40",
                      "type": "string"
                    }
                  }
                }
        '0':
          description: Default errors
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "examples": [
                    {
                      "Id": "400 Bad Request",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                      "ExternalValue": null,
                      "Description": "Bad Request"
                    },
                    {
                      "Id": "401 Unauthorized",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "403 Forbidden",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "404 Not Found",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "412 Pre Condition",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "415 Bad content Type",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "500 Server Error",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "httpStatusCode": 400,
                    "httpStatusMessage": "BAD_REQUEST",
                    "errors": [
                      {
                        "errorCode": "PARAMETER_VALIDATION_ERROR",
                        "errorMessage": "PartnerId is missing in header.",
                        "target": "partnerId"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "httpStatusCode": {
                      "example": 404,
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpStatusMessage": {
                      "example": "STATUS-MESSAGE",
                      "type": "string"
                    },
                    "errors": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "Error",
                        "title": "Error",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "ERROR_CODE",
                            "type": "string"
                          },
                          "errorMessage": {
                            "example": "Error message here.",
                            "type": "string"
                          },
                          "target": {
                            "example": "Target",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
  /health:
    get:
      description: Checks the the health of Launchpad and its dependent down streams systems like CPQ, Sales Force, XAA and Jigsaw at regular intervals to check the system is up or down.
      headers:
        v-correlation-id:
          description: Unique transaction Id. Will be generated if not provided and returned in response headers.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: false
          displayName: v-correlation-id
      responses:
        '200':
          description: Response is UP or DOWN of Launchpad & it's downstream system.
          body:
            application/json:
              schema: |
                {
                  "id": "inline_response_200_1",
                  "title": "inline_response_200_1",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "UP or DOWN status of Lauchpad & it's downstream system.",
                      "example": "UP",
                      "type": "string"
                    }
                  }
                }
  get:
    description: Retrieves existing application data.
    headers:
      externalRefId:
        description: The externalRefId returned from POST /applications call.
        example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
        required: true
        displayName: externalRefId
      v-correlation-id:
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
        required: false
        displayName: v-correlation-id
    responses:
      '200':
        description: Success
        headers:
          v-correlation-id:
            required: false
        body:
          application/json:
            schema: |
              {
                "id": "ExistingApplication",
                "title": "ExistingApplication",
                "type": "object",
                "properties": {
                  "externalRefId": {
                    "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
                    "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
                    "type": "string",
                    "maxLength": 36,
                    "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
                  },
                  "businessInfo": {
                    "id": "BusinessInfo",
                    "title": "BusinessInfo",
                    "type": "object",
                    "properties": {
                      "dbaName": {
                        "description": "The merchant name they do business as.  Generally with what their customers know the business.",
                        "example": "The DBA Name",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                      },
                      "legalName": {
                        "description": "Business Legal Name as filed with the IRS.",
                        "example": "Timothy Jones",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                      },
                      "ownershipType": {
                        "title": "OwnershipType",
                        "description": "Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).",
                        "example": "LLC",
                        "type": "string",
                        "enum": [
                          "GOVERNMENT",
                          "SOLE PROPRIETOR",
                          "LLC",
                          "PARTNERSHIP",
                          "FIN INSTITUTION",
                          "NON-PROFIT",
                          "ASSOCIATION/ESTATE/TRUST",
                          "PRIVATE CORPORATION",
                          "SEC REGISTERED",
                          "PUBLIC CORPORATION",
                          "OTHER"
                        ]
                      },
                      "mccCode": {
                        "description": "SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.",
                        "example": "5812",
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 4
                      },
                      "businessEstablishedDate": {
                        "description": "Date (CCYY-MM-DD) on which the merchant's business was established.",
                        "example": "2000-03-23",
                        "type": "string",
                        "format": "date"
                      },
                      "websiteUrl": {
                        "description": "The URL of the merchant's website.",
                        "example": "www.thefoodplace.com",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 80
                      },
                      "numberOfLocation": {
                        "description": "Number of current locations.",
                        "example": 2,
                        "type": "integer",
                        "format": "int32"
                      },
                      "federalTaxId": {
                        "description": "The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.",
                        "example": "123456789",
                        "type": "string",
                        "minLength": 9,
                        "maxLength": 9,
                        "pattern": "^[0-9]{9}$"
                      },
                      "paymentAcceptanceMethod": {
                        "description": "The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.",
                        "example": [
                          "inPerson",
                          "onlineSite"
                        ],
                        "type": "array",
                        "items": {
                          "title": "PaymentAcceptanceMethod",
                          "type": "string",
                          "enum": [
                            "inPerson",
                            "onlineSite",
                            "phoneOrMailOrder"
                          ]
                        }
                      },
                      "pciadc": {
                        "title": "Pciadc",
                        "description": "Indication if the merchant has had an account data compromise.",
                        "example": "No",
                        "type": "string",
                        "enum": [
                          "Yes",
                          "No"
                        ]
                      },
                      "pcidssValidated": {
                        "title": "PcidssValidated",
                        "description": "Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.",
                        "example": "No",
                        "type": "string",
                        "enum": [
                          "Yes",
                          "No"
                        ]
                      },
                      "surroundingArea": {
                        "title": "SurroundingArea",
                        "description": "Type of area surroundning the business.",
                        "example": "Commercial",
                        "type": "string",
                        "enum": [
                          "Commercial",
                          "Industrial",
                          "Residential"
                        ]
                      },
                      "productServiceSold": {
                        "description": "Type of goods or services sold.",
                        "example": "Food",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "pattern": "(^[-a-zA-Z0-9_ &()*+,./:;=_'‘]{1,40}$)"
                      },
                      "ownAddYears": {
                        "description": "Years the business has been operating in their current location.",
                        "example": 2,
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 99.0,
                        "format": "int32"
                      },
                      "lengthOfContract": {
                        "description": "Inital contract term in months.",
                        "type": "string",
                        "pattern": "([0-9]{3})$"
                      },
                      "seasonal": {
                        "title": "Seasonal",
                        "description": "Does the business operate seasonally?",
                        "example": "Yes",
                        "type": "string",
                        "enum": [
                          "Yes",
                          "No"
                        ]
                      },
                      "activeMonths": {
                        "description": "The months during which the business is actively operating.",
                        "example": [
                          "Jan",
                          "Feb",
                          "Mar"
                        ],
                        "type": "array",
                        "items": {
                          "title": "ActiveMonth",
                          "type": "string",
                          "enum": [
                            "Jan",
                            "Feb",
                            "Mar",
                            "Apr",
                            "May",
                            "Jun",
                            "Jul",
                            "Aug",
                            "Sep",
                            "Oct",
                            "Nov",
                            "Dec"
                          ]
                        }
                      },
                      "warranty": {
                        "title": "Warranty",
                        "description": "Does the business offer warranties, dues, subscriptions, memberships, or other extended services?",
                        "example": "1 YEAR",
                        "type": "string",
                        "enum": [
                          "1 YEAR",
                          "30 DAY",
                          "60 DAY",
                          "90 DAY",
                          "LIFETIME",
                          "NO"
                        ]
                      },
                      "returnPolicy": {
                        "title": "ReturnPolicy",
                        "description": "The business's return policy.",
                        "example": "30 Day",
                        "type": "string",
                        "enum": [
                          "3 Day",
                          "30 Day",
                          "60 Day",
                          "60+ Day",
                          "ALL SALES FINAL",
                          "EXCHANGE ONLY/STORE CREDIT",
                          "NO RETURN POLICY"
                        ]
                      },
                      "taxExempt": {
                        "title": "TaxExempt",
                        "type": "string",
                        "enum": [
                          "true",
                          "false"
                        ]
                      },
                      "acceptCreditCards": {
                        "title": "AcceptCreditCards",
                        "description": "Does the business accept credit cards?",
                        "type": "string",
                        "enum": [
                          "true",
                          "false"
                        ]
                      }
                    },
                    "required": [
                      "dbaName",
                      "legalName",
                      "ownershipType",
                      "mccCode"
                    ]
                  },
                  "transactionInfo": {
                    "id": "TransactionInfo",
                    "title": "TransactionInfo",
                    "type": "object",
                    "properties": {
                      "annualSalesVolume": {
                        "description": "Projected annual sales volume.",
                        "example": 20000.12,
                        "type": "number",
                        "minimum": 0.0,
                        "maximum": 9999999999999.99
                      },
                      "percentRetailSwipedTransactions": {
                        "description": "Projected Percentage of daily card-present transactions.",
                        "example": 82,
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      },
                      "averageTicket": {
                        "description": "Average ticket dollar amount.",
                        "example": 2.3,
                        "type": "number",
                        "minimum": 0.0,
                        "maximum": 9999999.99
                      },
                      "highestTicket": {
                        "description": "Highest ticket dollar amount.",
                        "example": 32.41,
                        "type": "number",
                        "minimum": 0.0,
                        "maximum": 9999999.99
                      },
                      "currentProcessor": {
                        "description": "the current processor",
                        "example": "Global Payments",
                        "type": "string"
                      },
                      "acceptChargebacks": {
                        "title": "AcceptChargebacks",
                        "description": "Do you have more than 25 chargeback accepted in the last 12 months?",
                        "example": "No",
                        "type": "string",
                        "enum": [
                          "Yes",
                          "No"
                        ]
                      },
                      "chargebackPercent": {
                        "description": "Projected chargeback percentage.\n\n```Required when acceptChargebacks is 'Yes'```\n\n```Optional when acceptChargebacks is null or 'No'.```",
                        "example": 0,
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      },
                      "returnPercent": {
                        "description": "Projected return percent of  goods sold",
                        "example": 10,
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      },
                      "cardNotPresentPercent": {
                        "description": "Percent of card not present transactions.",
                        "example": 20,
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      },
                      "businessToBusinessPercent": {
                        "description": "Percent of business-to-business transactions.",
                        "example": 20,
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      },
                      "internetTransactionPercent": {
                        "description": "Percent of internet transactions.",
                        "example": 10,
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      },
                      "annualCreditSalesVolume": {
                        "description": "Projected annual credit card sales volume.",
                        "example": 123.32,
                        "type": "number",
                        "minimum": 0.0,
                        "maximum": 999999999.99
                      },
                      "annualDebitSalesVolume": {
                        "description": "Projected annual debit card sales volume.",
                        "example": 32.23,
                        "type": "number",
                        "minimum": 0.0,
                        "maximum": 999999999.99
                      },
                      "annualAmexVolume": {
                        "description": "Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```",
                        "example": 10000,
                        "type": "number",
                        "minimum": 0.0,
                        "maximum": 999999999.99
                      },
                      "amexAverageTicket": {
                        "description": "AverageTicket dollar amount for Amex.\n ```This field is required when you opt-in for Amex```",
                        "example": 2.3,
                        "type": "number",
                        "minimum": 0.0,
                        "maximum": 9999999.99
                      },
                      "averageNumberofDays": {
                        "description": "Average number of days from when cardholder is charged & when products or services are received IN FULL by cardholder.",
                        "example": 10,
                        "type": "integer",
                        "minimum": 0.0,
                        "format": "int32"
                      }
                    },
                    "required": [
                      "annualSalesVolume",
                      "percentRetailSwipedTransactions"
                    ]
                  },
                  "leadSource": {
                    "description": "The source of a lead.",
                    "example": "Activate",
                    "type": "string",
                    "maxLength": 12
                  },
                  "owners": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "Owner",
                      "title": "Owner",
                      "description": "A Control Owner is required for the following ownership types > LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT",
                      "example": {
                        "type": "Control Owner Contact",
                        "title": "Owner",
                        "firstName": "Timothy",
                        "middleInitial": "M",
                        "lastName": "Jones",
                        "phoneNumber": "1234567890",
                        "phoneNumberExt": "1234",
                        "faxNumber": "1234567890",
                        "email": "test@test.com",
                        "ownershipPercentage": 23,
                        "ssn": "123456789",
                        "dob": "2000-03-23",
                        "addressLine1": "4355 N Coalwhipe St.",
                        "city": "City Town",
                        "state": "OH",
                        "country": "United States",
                        "postalCode": "80123",
                        "postalCodeExtension": "1234"
                      },
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Type",
                          "description": "The Owner Type. Please note the above Ownership Types where a Control Owner is required.",
                          "type": "string",
                          "enum": [
                            "Control Owner Contact",
                            "Owner 1 Contact",
                            "Owner 2 Contact",
                            "Owner 3 Contact",
                            "Owner 4 Contact"
                          ]
                        },
                        "firstName": {
                          "description": "First name. Region based validations will be applied to this field.",
                          "example": "Todd",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 15,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "lastName": {
                          "description": "Last name. Region based validations will be applied to this field.",
                          "example": "Davis",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "phoneNumber": {
                          "description": "10-digit phone number of the format  5131234567.",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        },
                        "email": {
                          "description": "Email address of the contact. Must have @ and a .",
                          "example": "test@gmail.com",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 64,
                          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                        },
                        "addressLine1": {
                          "description": "Address Line 1. Field for house number, street and direction.",
                          "example": "4355 N Coalwhipe St.",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 40,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "city": {
                          "example": "Denver",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 28,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "state": {
                          "title": "State",
                          "description": "Valid US state, commonwealth, and territory codes are allowed.",
                          "example": "CO",
                          "type": "string",
                          "enum": [
                            "AK",
                            "AL",
                            "AR",
                            "AS",
                            "AZ",
                            "CA",
                            "CO",
                            "CT",
                            "DC",
                            "DE",
                            "FL",
                            "FM",
                            "GA",
                            "GU",
                            "HI",
                            "IA",
                            "ID",
                            "IL",
                            "IN",
                            "KS",
                            "KY",
                            "LA",
                            "MA",
                            "MD",
                            "ME",
                            "MH",
                            "MI",
                            "MN",
                            "MO",
                            "MP",
                            "MS",
                            "MT",
                            "NC",
                            "ND",
                            "NE",
                            "NH",
                            "NJ",
                            "NM",
                            "NV",
                            "NY",
                            "OH",
                            "OK",
                            "OR",
                            "PA",
                            "PR",
                            "PW",
                            "RI",
                            "SC",
                            "SD",
                            "TN",
                            "TX",
                            "UT",
                            "VA",
                            "VI",
                            "VT",
                            "WA",
                            "WI",
                            "WV",
                            "WY"
                          ]
                        },
                        "country": {
                          "description": "Only United States is allowed.",
                          "type": "string",
                          "enum": [
                            "United States"
                          ]
                        },
                        "postalCode": {
                          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                          "example": "12345",
                          "type": "string",
                          "minLength": 5,
                          "maxLength": 5,
                          "pattern": "^[0-9]{5}$"
                        },
                        "title": {
                          "description": "Required for AMEX acquired merchants otherwise optional.",
                          "example": "President",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 30,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "middleInitial": {
                          "description": "Middle initial.",
                          "example": "M",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "phoneNumberExt": {
                          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                          "example": "1234",
                          "type": "string",
                          "maxLength": 8,
                          "pattern": "^[0-9]{1,8}$"
                        },
                        "phoneType": {
                          "title": "PhoneType",
                          "description": "Phone type.",
                          "example": "mobile",
                          "type": "string",
                          "enum": [
                            "mobile",
                            "home"
                          ]
                        },
                        "alternatePhone": {
                          "description": "10-digit alternate phone number of the format  5131234567.",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        },
                        "alternatePhoneType": {
                          "title": "AlternatePhoneType",
                          "description": "Alternate phone type.",
                          "example": "home",
                          "type": "string",
                          "enum": [
                            "mobile",
                            "home"
                          ]
                        },
                        "faxNumber": {
                          "description": "10-digit fax number of the format 5131234567",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        },
                        "ownershipPercentage": {
                          "description": "Ownership stake percentage.",
                          "type": "integer",
                          "minimum": 0.0,
                          "maximum": 100.0,
                          "format": "int32"
                        },
                        "ssn": {
                          "description": "Social security number. Do not include dashes.",
                          "example": "123456789",
                          "type": "string",
                          "pattern": "^[0-9]{9}$"
                        },
                        "dob": {
                          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                          "example": "2000-03-23",
                          "type": "string",
                          "format": "date"
                        },
                        "addressLine2": {
                          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                          "example": "suite 104",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 40,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "postalCodeExtension": {
                          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                          "example": "1234",
                          "type": "string",
                          "minLength": 4,
                          "maxLength": 4,
                          "pattern": "^[0-9]{4}$"
                        },
                        "identification": {
                          "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                          "type": "array",
                          "items": {
                            "id": "Identification",
                            "title": "Identification",
                            "type": "object",
                            "properties": {
                              "idType": {
                                "title": "IdType",
                                "description": "Type of ID provided by the owner.",
                                "example": "PASSPORT",
                                "type": "string",
                                "enum": [
                                  "ALIEN ID",
                                  "CREDIT BUREAU",
                                  "DRIVERS LICENSE",
                                  "STATE ID",
                                  "MEXICAN CONSULATE",
                                  "MILITARY ID",
                                  "OTHER",
                                  "PASSPORT"
                                ]
                              },
                              "idNumber": {
                                "description": "Owner's ID number.",
                                "example": "312312341",
                                "type": "string",
                                "maxLength": 40
                              },
                              "issuedCity": {
                                "description": "City in which ID was issued.",
                                "example": "City Town",
                                "type": "string",
                                "maxLength": 28
                              },
                              "issuedState": {
                                "title": "IssuedState",
                                "description": "Valid state code where ID was issued.",
                                "example": "CO",
                                "type": "string",
                                "maxLength": 2,
                                "enum": [
                                  "AK",
                                  "AL",
                                  "AR",
                                  "AS",
                                  "AZ",
                                  "CA",
                                  "CO",
                                  "CT",
                                  "DC",
                                  "DE",
                                  "FL",
                                  "FM",
                                  "GA",
                                  "GU",
                                  "HI",
                                  "IA",
                                  "ID",
                                  "IL",
                                  "IN",
                                  "KS",
                                  "KY",
                                  "LA",
                                  "MA",
                                  "MD",
                                  "ME",
                                  "MH",
                                  "MI",
                                  "MN",
                                  "MO",
                                  "MP",
                                  "MS",
                                  "MT",
                                  "NC",
                                  "ND",
                                  "NE",
                                  "NH",
                                  "NJ",
                                  "NM",
                                  "NV",
                                  "NY",
                                  "OH",
                                  "OK",
                                  "OR",
                                  "PA",
                                  "PR",
                                  "PW",
                                  "RI",
                                  "SC",
                                  "SD",
                                  "TN",
                                  "TX",
                                  "UT",
                                  "VA",
                                  "VI",
                                  "VT",
                                  "WA",
                                  "WI",
                                  "WV",
                                  "WY"
                                ]
                              },
                              "issuedCountry": {
                                "description": "Country where ID was issued.",
                                "example": "US",
                                "type": "string",
                                "maxLength": 2
                              },
                              "dateIssued": {
                                "description": "Date ID was issued (CCYY-MM-DD).",
                                "example": "1999-01-30",
                                "type": "string",
                                "format": "date"
                              },
                              "dateExpires": {
                                "description": "Date ID expires (CCYY-MM-DD).",
                                "example": "2020-02-11",
                                "type": "string",
                                "format": "date"
                              }
                            },
                            "required": [
                              "idType",
                              "idNumber"
                            ]
                          }
                        }
                      },
                      "required": [
                        "type",
                        "firstName",
                        "lastName",
                        "phoneNumber",
                        "email",
                        "addressLine1",
                        "city",
                        "state",
                        "country",
                        "postalCode"
                      ]
                    }
                  },
                  "guarantors": {
                    "description": "Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.",
                    "type": "array",
                    "items": {
                      "id": "Guarantor",
                      "title": "Guarantor",
                      "type": "object",
                      "properties": {
                        "type": {
                          "example": "Guarantor 1 Contact",
                          "type": "string",
                          "enum": [
                            "Guarantor 1 Contact"
                          ]
                        },
                        "firstName": {
                          "description": "First name. Region based validations will be applied to this field.",
                          "example": "Todd",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 15,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "lastName": {
                          "description": "Last name. Region based validations will be applied to this field.",
                          "example": "Davis",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "phoneNumber": {
                          "description": "10-digit phone number of the format  5131234567.",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        },
                        "email": {
                          "description": "Email address of the contact. Must have @ and a .",
                          "example": "test@gmail.com",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 64,
                          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                        },
                        "addressLine1": {
                          "description": "Address Line 1. Field for house number, street and direction.",
                          "example": "4355 N Coalwhipe St.",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 40,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "city": {
                          "example": "Denver",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 28,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "state": {
                          "$ref": "Owner#/properties/state"
                        },
                        "country": {
                          "description": "Only United States is allowed.",
                          "type": "string",
                          "enum": [
                            "United States"
                          ]
                        },
                        "postalCode": {
                          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                          "example": "12345",
                          "type": "string",
                          "minLength": 5,
                          "maxLength": 5,
                          "pattern": "^[0-9]{5}$"
                        },
                        "title": {
                          "description": "Required for AMEX acquired merchants otherwise optional.",
                          "example": "President",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 30,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "middleInitial": {
                          "description": "Middle initial.",
                          "example": "M",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "phoneNumberExt": {
                          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                          "example": "1234",
                          "type": "string",
                          "maxLength": 8,
                          "pattern": "^[0-9]{1,8}$"
                        },
                        "phoneType": {
                          "$ref": "Owner#/properties/phoneType"
                        },
                        "alternatePhone": {
                          "description": "10-digit alternate phone number of the format  5131234567.",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        },
                        "alternatePhoneType": {
                          "$ref": "Owner#/properties/alternatePhoneType"
                        },
                        "faxNumber": {
                          "description": "10-digit fax number of the format 5131234567",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        },
                        "ownershipPercentage": {
                          "description": "Ownership stake percentage.",
                          "type": "integer",
                          "minimum": 0.0,
                          "maximum": 100.0,
                          "format": "int32"
                        },
                        "ssn": {
                          "description": "Social security number. Do not include dashes.",
                          "example": "123456789",
                          "type": "string",
                          "pattern": "^[0-9]{9}$"
                        },
                        "dob": {
                          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                          "example": "2000-03-23",
                          "type": "string",
                          "format": "date"
                        },
                        "addressLine2": {
                          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                          "example": "suite 104",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 40,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "postalCodeExtension": {
                          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                          "example": "1234",
                          "type": "string",
                          "minLength": 4,
                          "maxLength": 4,
                          "pattern": "^[0-9]{4}$"
                        },
                        "identification": {
                          "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                          "type": "array",
                          "items": {
                            "$ref": "Identification"
                          }
                        }
                      },
                      "required": [
                        "type",
                        "firstName",
                        "lastName",
                        "phoneNumber",
                        "email",
                        "addressLine1",
                        "city",
                        "state",
                        "country",
                        "postalCode"
                      ]
                    },
                    "uniqueItems": true
                  },
                  "authorizedSigners": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "AuthorizedSigner",
                      "title": "AuthorizedSigner",
                      "type": "object",
                      "properties": {
                        "roleName": {
                          "title": "RoleName",
                          "description": "The role of the signer. Please note the below.\n\n 1) Merchant role name is mandatory.\n 2) Required fields indicated in schema are those required for all role names other than \"SalesRep\"\n 3) The \"SalesRep\" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email\n 4) The \"Signer2\" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.",
                          "example": "Merchant",
                          "type": "string",
                          "enum": [
                            "SalesRep",
                            "Merchant",
                            "Reviewer",
                            "Signer2",
                            "Signer3",
                            "Signer4",
                            "Signer5",
                            "Signer6",
                            "Signer7",
                            "Signer8"
                          ]
                        },
                        "signingExperience": {
                          "title": "SigningExperience",
                          "description": "Signing ceremony type",
                          "example": "email",
                          "type": "string",
                          "enum": [
                            "embed",
                            "email",
                            "wet"
                          ]
                        },
                        "signingOrder": {
                          "description": "Define the signing order for multiple signers",
                          "example": "2",
                          "type": "string"
                        },
                        "firstName": {
                          "description": "First name. Region based validations will be applied to this field.",
                          "example": "Todd",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 15,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "lastName": {
                          "description": "Last name. Region based validations will be applied to this field.",
                          "example": "Davis",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "phoneNumber": {
                          "description": "10-digit phone number of the format  5131234567.",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        },
                        "email": {
                          "description": "Email address of the contact. Must have @ and a .",
                          "example": "test@gmail.com",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 64,
                          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                        },
                        "ssn": {
                          "description": "Social security number. Do not include dashes.",
                          "example": "123456789",
                          "type": "string",
                          "pattern": "^[0-9]{9}$"
                        },
                        "dob": {
                          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                          "example": "2000-03-23",
                          "type": "string",
                          "format": "date"
                        },
                        "addressLine1": {
                          "description": "Address Line 1. Field for house number, street and direction.",
                          "example": "4355 N Coalwhipe St.",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 40,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "city": {
                          "example": "Denver",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 28,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "state": {
                          "$ref": "Owner#/properties/state"
                        },
                        "country": {
                          "description": "Only United States is allowed.",
                          "type": "string",
                          "enum": [
                            "United States"
                          ]
                        },
                        "postalCode": {
                          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                          "example": "12345",
                          "type": "string",
                          "minLength": 5,
                          "maxLength": 5,
                          "pattern": "^[0-9]{5}$"
                        },
                        "title": {
                          "description": "Required for AMEX acquired merchants otherwise optional.",
                          "example": "President",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 30,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "middleInitial": {
                          "description": "Middle initial.",
                          "example": "M",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "phoneNumberExt": {
                          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                          "example": "1234",
                          "type": "string",
                          "maxLength": 8,
                          "pattern": "^[0-9]{1,8}$"
                        },
                        "phoneType": {
                          "$ref": "Owner#/properties/phoneType"
                        },
                        "alternatePhone": {
                          "description": "10-digit alternate phone number of the format  5131234567.",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        },
                        "alternatePhoneType": {
                          "$ref": "Owner#/properties/alternatePhoneType"
                        },
                        "faxNumber": {
                          "description": "10-digit fax number of the format 5131234567",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        },
                        "addressLine2": {
                          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                          "example": "suite 104",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 40,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "postalCodeExtension": {
                          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                          "example": "1234",
                          "type": "string",
                          "minLength": 4,
                          "maxLength": 4,
                          "pattern": "^[0-9]{4}$"
                        },
                        "identification": {
                          "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                          "type": "array",
                          "items": {
                            "$ref": "Identification"
                          }
                        }
                      },
                      "required": [
                        "roleName",
                        "signingExperience",
                        "signingOrder",
                        "firstName",
                        "lastName",
                        "phoneNumber",
                        "email",
                        "ssn",
                        "dob",
                        "addressLine1",
                        "city",
                        "state",
                        "country",
                        "postalCode"
                      ]
                    }
                  },
                  "contacts": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "Contact",
                      "title": "Contact",
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Type1",
                          "description": "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST.",
                          "example": "Primary Contact",
                          "type": "string",
                          "enum": [
                            "Primary Contact",
                            "Accounting Contact",
                            "Customer Service Contact",
                            "Shipping Contact",
                            "Third Party Contact",
                            "Vendor Contact Info",
                            "PCI Contact",
                            "Corporate"
                          ]
                        },
                        "firstName": {
                          "description": "First name. Region based validations will be applied to this field.",
                          "example": "Todd",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 15,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "lastName": {
                          "description": "Last name. Region based validations will be applied to this field.",
                          "example": "Davis",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "phoneNumber": {
                          "description": "10-digit phone number of the format  5131234567.",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        },
                        "email": {
                          "description": "Email address of the contact. Must have @ and a .",
                          "example": "test@gmail.com",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 64,
                          "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                        },
                        "title": {
                          "description": "Required for AMEX acquired merchants otherwise optional.",
                          "example": "President",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 30,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "middleInitial": {
                          "description": "Middle initial.",
                          "example": "M",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "ssn": {
                          "description": "Social security number. Do not include dashes.",
                          "example": "123456789",
                          "type": "string",
                          "pattern": "^[0-9]{9}$"
                        },
                        "birthDate": {
                          "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                          "example": "2000-03-23",
                          "type": "string",
                          "format": "date"
                        },
                        "phoneNumberExt": {
                          "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                          "example": "1234",
                          "type": "string",
                          "maxLength": 8,
                          "pattern": "^[0-9]{1,8}$"
                        },
                        "phoneType": {
                          "$ref": "Owner#/properties/phoneType"
                        },
                        "alternatePhone": {
                          "description": "10-digit alternate phone number of the format  5131234567.",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        },
                        "alternatePhoneType": {
                          "$ref": "Owner#/properties/alternatePhoneType"
                        },
                        "faxNumber": {
                          "description": "10-digit fax number of the format 5131234567",
                          "example": "5131234567",
                          "type": "string",
                          "pattern": "^[0-9]{10}$"
                        }
                      },
                      "required": [
                        "type",
                        "firstName",
                        "lastName",
                        "phoneNumber",
                        "email"
                      ]
                    },
                    "uniqueItems": true
                  },
                  "addresses": {
                    "description": "",
                    "example": [
                      {
                        "type": "Mailing Address",
                        "addressLine1": "1234 W Tester Ave.",
                        "city": "City Town",
                        "state": "CO",
                        "country": "United States",
                        "postalCode": "80123",
                        "postalCodeExtension": "1234"
                      },
                      {
                        "type": "Physical Address",
                        "addressLine1": "1234 W Tester Ave.",
                        "city": "City Town",
                        "state": "CO",
                        "country": "United States",
                        "postalCode": "80123",
                        "postalCodeExtension": "1234"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "Address",
                      "title": "Address",
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "AddressType",
                          "description": "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory.",
                          "example": "Physical Address",
                          "type": "string",
                          "enum": [
                            "Mailing Address",
                            "Physical Address",
                            "Shipping Address"
                          ]
                        },
                        "addressLine1": {
                          "description": "Address Line 1. Field for house number, street and direction.",
                          "example": "4355 N Coalwhipe St.",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 40,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "city": {
                          "example": "Denver",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 28,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "state": {
                          "$ref": "Owner#/properties/state"
                        },
                        "country": {
                          "description": "Only United States is allowed.",
                          "type": "string",
                          "enum": [
                            "United States"
                          ]
                        },
                        "postalCode": {
                          "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                          "example": "12345",
                          "type": "string",
                          "minLength": 5,
                          "maxLength": 5,
                          "pattern": "^[0-9]{5}$"
                        },
                        "addressLine2": {
                          "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                          "example": "suite 104",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 40,
                          "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                        },
                        "postalCodeExtension": {
                          "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                          "example": "1234",
                          "type": "string",
                          "minLength": 4,
                          "maxLength": 4,
                          "pattern": "^[0-9]{4}$"
                        }
                      },
                      "required": [
                        "type",
                        "addressLine1",
                        "city",
                        "state",
                        "country",
                        "postalCode"
                      ]
                    },
                    "uniqueItems": true
                  },
                  "bankAccount": {
                    "id": "BankAccount",
                    "title": "BankAccount",
                    "type": "object",
                    "properties": {
                      "ddaType": {
                        "title": "DdaType",
                        "description": "Direct deposit account type.",
                        "example": "Checking",
                        "type": "string",
                        "enum": [
                          "Checking",
                          "Savings"
                        ]
                      },
                      "achType": {
                        "title": "AchType",
                        "description": "Check deposit type",
                        "example": "Commercial Checking",
                        "type": "string",
                        "enum": [
                          "Commercial Checking",
                          "Private Checking"
                        ]
                      },
                      "accountNumber": {
                        "description": "Direct deposit account number.  Maximum 17 characters.",
                        "example": "011401545",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 17
                      },
                      "routingNumber": {
                        "description": "Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.",
                        "example": "102000076",
                        "type": "string",
                        "minLength": 9,
                        "maxLength": 9
                      },
                      "bankName": {
                        "description": "Bank name used for credit card processing services.",
                        "example": "Bank name",
                        "type": "string"
                      }
                    }
                  },
                  "salesAgent": {
                    "id": "SalesAgent",
                    "title": "SalesAgent",
                    "description": "The agent who is submitting the deal.",
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "description": "Sales agent's first name.",
                        "example": "John",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                      },
                      "lastName": {
                        "description": "Sales agent's last name.",
                        "example": "Doe",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25
                      },
                      "email": {
                        "description": "Sales agent's email address.  Must have @ and a .",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
                      },
                      "id": {
                        "description": "Id for the Sales Contact.",
                        "example": "U15315",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                      },
                      "mobilePhoneNumber": {
                        "description": "Sales agent's 10-digit phone number of the format 5131234567.",
                        "example": "1234567890",
                        "type": "string",
                        "pattern": "^[0-9]{10}$"
                      }
                    },
                    "required": [
                      "firstName",
                      "lastName",
                      "email"
                    ]
                  },
                  "installationContact": {
                    "id": "InstallationContact",
                    "title": "InstallationContact",
                    "description": "The Technical Agent who is going to do setup.",
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "description": "Contact's first name.",
                        "example": "Sam",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15,
                        "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                      },
                      "lastName": {
                        "description": "Contact's last name.",
                        "example": "Doe",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                      },
                      "email": {
                        "description": "Contact's email address. Must have @ and a .",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
                      },
                      "id": {
                        "description": "Id for Technical Contact",
                        "example": "U15318",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15,
                        "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                      },
                      "mobilePhoneNumber": {
                        "description": "Contact's 10-digit phone number of the format 5131234567.",
                        "example": "1234567890",
                        "type": "string",
                        "minLength": 10,
                        "maxLength": 10,
                        "pattern": "([0-9]{10})$"
                      }
                    },
                    "required": [
                      "firstName",
                      "lastName",
                      "email"
                    ]
                  },
                  "routeToSalesRep": {
                    "description": "Used to route a application to a worldpay or partner sales rep. By default the API is configured to route to a Worldpay sales rep. If you would like to route to partner (Launchpad UI) please work with your implementation consultant.",
                    "example": false,
                    "type": "boolean"
                  }
                },
                "required": [
                  "externalRefId",
                  "businessInfo",
                  "transactionInfo"
                ]
              }
      '0':
        description: Default errors
        body:
          application/json:
            schema: |
              {
                "id": "ErrorResponse",
                "title": "ErrorResponse",
                "examples": [
                  {
                    "Id": "400 Bad Request",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                    "ExternalValue": null,
                    "Description": "Bad Request"
                  },
                  {
                    "Id": "401 Unauthorized",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "403 Forbidden",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "404 Not Found",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "412 Pre Condition",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "415 Bad content Type",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "500 Server Error",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusMessage": "BAD_REQUEST",
                  "errors": [
                    {
                      "errorCode": "PARAMETER_VALIDATION_ERROR",
                      "errorMessage": "PartnerId is missing in header.",
                      "target": "partnerId"
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "httpStatusCode": {
                    "example": 404,
                    "type": "integer",
                    "format": "int32"
                  },
                  "httpStatusMessage": {
                    "example": "STATUS-MESSAGE",
                    "type": "string"
                  },
                  "errors": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "Error",
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "ERROR_CODE",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "Error message here.",
                          "type": "string"
                        },
                        "target": {
                          "example": "Target",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
  put:
    description: This endpoint allows merchants to update an existing application with new information.
    headers:
      v-correlation-id:
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
        required: false
        displayName: v-correlation-id
      Content-Type:
        description: Indicates the media type of the request-body. Accepts application/json.
        default: application/json
        required: false
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "id": "ExistingApplication_1",
            "title": "ExistingApplication_1",
            "type": "object",
            "properties": {
              "externalRefId": {
                "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
                "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
                "type": "string",
                "maxLength": 36,
                "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
              },
              "businessInfo": {
                "id": "BusinessInfo_1",
                "title": "BusinessInfo_1",
                "type": "object",
                "properties": {
                  "dbaName": {
                    "description": "The merchant name they do business as.  Generally with what their customers know the business.",
                    "example": "The DBA Name",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "legalName": {
                    "description": "Business Legal Name as filed with the IRS.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "^([a-z0-9& -]{1,40})$"
                  },
                  "ownershipType": {
                    "title": "OwnershipType",
                    "description": "Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).",
                    "example": "LLC",
                    "type": "string",
                    "enum": [
                      "GOVERNMENT",
                      "SOLE PROPRIETOR",
                      "LLC",
                      "PARTNERSHIP",
                      "FIN INSTITUTION",
                      "NON-PROFIT",
                      "ASSOCIATION/ESTATE/TRUST",
                      "PRIVATE CORPORATION",
                      "SEC REGISTERED",
                      "PUBLIC CORPORATION",
                      "OTHER"
                    ]
                  },
                  "mccCode": {
                    "description": "SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.",
                    "example": "5812",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4
                  },
                  "businessEstablishedDate": {
                    "description": "Date (CCYY-MM-DD) on which the merchant's business was established.",
                    "example": "2000-03-23",
                    "type": "string",
                    "format": "date"
                  },
                  "websiteUrl": {
                    "description": "The URL of the merchant's website.",
                    "example": "www.thefoodplace.com",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 80
                  },
                  "numberOfLocation": {
                    "description": "Number of current locations.",
                    "example": 2,
                    "type": "integer",
                    "format": "int32"
                  },
                  "federalTaxId": {
                    "description": "The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.The full list of restricted federal tax id-\n  “000000000” “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666” \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                    "example": "123456781",
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 9,
                    "pattern": "^([a-z0-9& -]{1,40})$"
                  },
                  "paymentAcceptanceMethod": {
                    "description": "The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.",
                    "example": [
                      "inPerson",
                      "onlineSite"
                    ],
                    "type": "array",
                    "items": {
                      "title": "PaymentAcceptanceMethod",
                      "type": "string",
                      "enum": [
                        "inPerson",
                        "onlineSite",
                        "phoneOrMailOrder"
                      ]
                    }
                  },
                  "pciadc": {
                    "title": "Pciadc",
                    "description": "Indication if the merchant has had an account data compromise.",
                    "example": "No",
                    "type": "string",
                    "enum": [
                      "Yes",
                      "No"
                    ]
                  },
                  "pcidssValidated": {
                    "title": "PcidssValidated",
                    "description": "Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.",
                    "example": "No",
                    "type": "string",
                    "enum": [
                      "Yes",
                      "No"
                    ]
                  },
                  "surroundingArea": {
                    "title": "SurroundingArea",
                    "description": "Type of area surroundning the business.",
                    "example": "Commercial",
                    "type": "string",
                    "enum": [
                      "Commercial",
                      "Industrial",
                      "Residential"
                    ]
                  },
                  "productServiceSold": {
                    "description": "Type of goods or services sold.",
                    "example": "Food",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "(^[-a-zA-Z0-9_ &()*+,./:;=_'‘]{1,40}$)"
                  },
                  "ownAddYears": {
                    "description": "Years the business has been operating in their current location.",
                    "example": 2,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 99.0,
                    "format": "int32"
                  },
                  "lengthOfContract": {
                    "description": "Inital contract term in months.",
                    "type": "string",
                    "pattern": "([0-9]{3})$"
                  },
                  "seasonal": {
                    "title": "Seasonal",
                    "description": "Does the business operate seasonally?",
                    "example": "Yes",
                    "type": "string",
                    "enum": [
                      "Yes",
                      "No"
                    ]
                  },
                  "activeMonths": {
                    "description": "The months during which the business is actively operating.",
                    "example": [
                      "Jan",
                      "Feb",
                      "Mar"
                    ],
                    "type": "array",
                    "items": {
                      "title": "ActiveMonth",
                      "type": "string",
                      "enum": [
                        "Jan",
                        "Feb",
                        "Mar",
                        "Apr",
                        "May",
                        "Jun",
                        "Jul",
                        "Aug",
                        "Sep",
                        "Oct",
                        "Nov",
                        "Dec"
                      ]
                    }
                  },
                  "warranty": {
                    "title": "Warranty",
                    "description": "Does the business offer warranties, dues, subscriptions, memberships, or other extended services?",
                    "example": "1 YEAR",
                    "type": "string",
                    "enum": [
                      "1 YEAR",
                      "30 DAY",
                      "60 DAY",
                      "90 DAY",
                      "LIFETIME",
                      "NO"
                    ]
                  },
                  "returnPolicy": {
                    "title": "ReturnPolicy",
                    "description": "The business's return policy.",
                    "example": "30 Day",
                    "type": "string",
                    "enum": [
                      "3 Day",
                      "30 Day",
                      "60 Day",
                      "60+ Day",
                      "ALL SALES FINAL",
                      "EXCHANGE ONLY/STORE CREDIT",
                      "NO RETURN POLICY"
                    ]
                  },
                  "taxExempt": {
                    "title": "TaxExempt",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ]
                  },
                  "acceptCreditCards": {
                    "title": "AcceptCreditCards",
                    "description": "Does the business accept credit cards?",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ]
                  },
                  "govOwnedMerchantCountry": {
                    "description": "If merchant is a government entity or an entity at least 50% owned or controlled by government entity than provide 2 digit country code which belongs to the country.",
                    "example": "US",
                    "type": "string"
                  }
                },
                "required": [
                  "dbaName",
                  "legalName",
                  "ownershipType",
                  "mccCode"
                ]
              },
              "transactionInfo": {
                "id": "TransactionInfo_1",
                "title": "TransactionInfo_1",
                "type": "object",
                "properties": {
                  "annualSalesVolume": {
                    "description": "Projected annual sales volume.",
                    "example": 20000.12,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 9999999999999.99
                  },
                  "percentRetailSwipedTransactions": {
                    "description": "Projected Percentage of daily card-present transactions.",
                    "example": 82,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "averageTicket": {
                    "description": "Average ticket dollar amount.",
                    "example": 2.3,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 9999999.99
                  },
                  "highestTicket": {
                    "description": "Highest ticket dollar amount.",
                    "example": 32.41,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 9999999.99
                  },
                  "currentProcessor": {
                    "description": "the current processor",
                    "example": "Global Payments",
                    "type": "string"
                  },
                  "acceptChargebacks": {
                    "title": "AcceptChargebacks",
                    "description": "Do you have more than 25 chargeback accepted in the last 12 months?",
                    "example": "No",
                    "type": "string",
                    "enum": [
                      "Yes",
                      "No"
                    ]
                  },
                  "chargebackPercent": {
                    "description": "Projected chargeback percentage.\n\n```Required when acceptChargebacks is 'Yes'```\n\n```Optional when acceptChargebacks is null or 'No'.```",
                    "example": 0,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "returnPercent": {
                    "description": "Projected return percent of  goods sold",
                    "example": 10,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "cardNotPresentPercent": {
                    "description": "Percent of card not present transactions.",
                    "example": 20,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "businessToBusinessPercent": {
                    "description": "Percent of business-to-business transactions.",
                    "example": 20,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "internetTransactionPercent": {
                    "description": "Percent of internet transactions.",
                    "example": 10,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "inPersonTransactionPercent": {
                    "description": "Percent of in person transactions.",
                    "example": 10,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "motoTransactionPercent": {
                    "description": "Percent of mail or phone order transactions.",
                    "example": 10,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "annualCreditSalesVolume": {
                    "description": "Projected annual credit card sales volume.",
                    "example": 123.32,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 999999999.99
                  },
                  "annualDebitSalesVolume": {
                    "description": "Projected annual debit card sales volume.",
                    "example": 32.23,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 999999999.99
                  },
                  "annualAmexVolume": {
                    "description": "Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```",
                    "example": 10000,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 999999999.99
                  },
                  "amexAverageTicket": {
                    "description": "AverageTicket dollar amount for Amex.\n ```This field is required when you opt-in for Amex```",
                    "example": 2.3,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 9999999.99
                  },
                  "averageNumberofDays": {
                    "description": "Average number of days from when cardholder is charged & when products or services are received IN FULL by cardholder.",
                    "example": 10,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 365.0,
                    "format": "int32"
                  },
                  "needsProcessingBy": {
                    "description": "Date (CCYY-MM-DD) by which the Equipment needs to be setup. This field may be required for a given partner.",
                    "example": "2022-11-01",
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "annualSalesVolume",
                  "percentRetailSwipedTransactions"
                ]
              },
              "leadSource": {
                "description": "The source of a lead.",
                "example": "Activate",
                "type": "string",
                "maxLength": 12
              },
              "owners": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Owner_1",
                  "title": "Owner_1",
                  "description": "A Control Owner is required for the following ownership types > LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT",
                  "example": {
                    "type": "Control Owner Contact",
                    "title": "Owner",
                    "firstName": "Timothy",
                    "middleInitial": "M",
                    "lastName": "Jones",
                    "phoneNumber": "1234567890",
                    "phoneNumberExt": "1234",
                    "faxNumber": "1234567890",
                    "email": "test@test.com",
                    "ownershipPercentage": 23,
                    "ssn": "123456789",
                    "dob": "2000-03-23",
                    "addressLine1": "4355 N Coalwhipe St.",
                    "city": "City Town",
                    "state": "OH",
                    "country": "United States",
                    "postalCode": "80123",
                    "postalCodeExtension": "1234"
                  },
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Type",
                      "description": "The Owner Type. Please note the above Ownership Types where a Control Owner is required.",
                      "type": "string",
                      "enum": [
                        "Control Owner Contact",
                        "Owner 1 Contact",
                        "Owner 2 Contact",
                        "Owner 3 Contact",
                        "Owner 4 Contact"
                      ]
                    },
                    "firstName": {
                      "description": "First name. Region based validations will be applied to this field.",
                      "example": "Todd",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 15,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "lastName": {
                      "description": "Last name. Region based validations will be applied to this field.",
                      "example": "Davis",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumber": {
                      "description": "10-digit phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "email": {
                      "description": "Email address of the contact. Must have @ and a .",
                      "example": "test@gmail.com",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                    },
                    "addressLine1": {
                      "description": "Address Line 1. Field for house number, street and direction.",
                      "example": "4355 N Coalwhipe St.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "city": {
                      "example": "Denver",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 28,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "state": {
                      "title": "State_1",
                      "description": "Valid US state, commonwealth, and territory codes are allowed.",
                      "example": "CO",
                      "type": "string",
                      "enum": [
                        "AK",
                        "AL",
                        "AR",
                        "AS",
                        "AZ",
                        "CA",
                        "CO",
                        "CT",
                        "DC",
                        "DE",
                        "FL",
                        "FM",
                        "GA",
                        "GU",
                        "HI",
                        "IA",
                        "ID",
                        "IL",
                        "IN",
                        "KS",
                        "KY",
                        "LA",
                        "MA",
                        "MD",
                        "ME",
                        "MH",
                        "MI",
                        "MN",
                        "MO",
                        "MP",
                        "MS",
                        "MT",
                        "NC",
                        "ND",
                        "NE",
                        "NH",
                        "NJ",
                        "NM",
                        "NV",
                        "NY",
                        "OH",
                        "OK",
                        "OR",
                        "PA",
                        "PR",
                        "PW",
                        "RI",
                        "SC",
                        "SD",
                        "TN",
                        "TX",
                        "UM",
                        "UT",
                        "VA",
                        "VI",
                        "VT",
                        "WA",
                        "WI",
                        "WV",
                        "WY"
                      ]
                    },
                    "country": {
                      "description": "Only United States is allowed.",
                      "type": "string",
                      "enum": [
                        "United States"
                      ]
                    },
                    "postalCode": {
                      "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                      "example": "12345",
                      "type": "string",
                      "minLength": 5,
                      "maxLength": 5,
                      "pattern": "^[0-9]{5}$"
                    },
                    "title": {
                      "description": "Required for AMEX acquired merchants otherwise optional.",
                      "example": "President",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 30,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "middleInitial": {
                      "description": "Middle initial.",
                      "example": "M",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumberExt": {
                      "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                      "example": "1234",
                      "type": "string",
                      "maxLength": 8,
                      "pattern": "^[0-9]{1,8}$"
                    },
                    "phoneType": {
                      "title": "PhoneType",
                      "description": "Phone type.",
                      "example": "mobile",
                      "type": "string",
                      "enum": [
                        "mobile",
                        "home"
                      ]
                    },
                    "alternatePhone": {
                      "description": "10-digit alternate phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "alternatePhoneType": {
                      "title": "AlternatePhoneType",
                      "description": "Alternate phone type.",
                      "example": "home",
                      "type": "string",
                      "enum": [
                        "mobile",
                        "home"
                      ]
                    },
                    "faxNumber": {
                      "description": "10-digit fax number of the format 5131234567",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "ownershipPercentage": {
                      "description": "Ownership stake percentage.",
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 100.0,
                      "format": "int32"
                    },
                    "ssn": {
                      "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                      "example": "123456789",
                      "type": "string",
                      "pattern": "^[0-9]{9}$"
                    },
                    "dob": {
                      "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                      "example": "2000-03-23",
                      "type": "string",
                      "format": "date"
                    },
                    "addressLine2": {
                      "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                      "example": "suite 104",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "postalCodeExtension": {
                      "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                      "example": "1234",
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "pattern": "^[0-9]{4}$"
                    },
                    "identification": {
                      "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                      "type": "array",
                      "items": {
                        "id": "Identification",
                        "title": "Identification",
                        "type": "object",
                        "properties": {
                          "idType": {
                            "title": "IdType",
                            "description": "Type of ID provided by the owner.",
                            "example": "PASSPORT",
                            "type": "string",
                            "enum": [
                              "ALIEN ID",
                              "CREDIT BUREAU",
                              "DRIVERS LICENSE",
                              "STATE ID",
                              "MEXICAN CONSULATE",
                              "MILITARY ID",
                              "OTHER",
                              "PASSPORT"
                            ]
                          },
                          "idNumber": {
                            "description": "Owner's ID number.",
                            "example": "312312341",
                            "type": "string",
                            "maxLength": 40
                          },
                          "issuedCity": {
                            "description": "City in which ID was issued.",
                            "example": "City Town",
                            "type": "string",
                            "maxLength": 28
                          },
                          "issuedState": {
                            "title": "IssuedState",
                            "description": "Valid state code where ID was issued.",
                            "example": "CO",
                            "type": "string",
                            "maxLength": 2,
                            "enum": [
                              "AK",
                              "AL",
                              "AR",
                              "AS",
                              "AZ",
                              "CA",
                              "CO",
                              "CT",
                              "DC",
                              "DE",
                              "FL",
                              "FM",
                              "GA",
                              "GU",
                              "HI",
                              "IA",
                              "ID",
                              "IL",
                              "IN",
                              "KS",
                              "KY",
                              "LA",
                              "MA",
                              "MD",
                              "ME",
                              "MH",
                              "MI",
                              "MN",
                              "MO",
                              "MP",
                              "MS",
                              "MT",
                              "NC",
                              "ND",
                              "NE",
                              "NH",
                              "NJ",
                              "NM",
                              "NV",
                              "NY",
                              "OH",
                              "OK",
                              "OR",
                              "PA",
                              "PR",
                              "PW",
                              "RI",
                              "SC",
                              "SD",
                              "TN",
                              "TX",
                              "UT",
                              "VA",
                              "VI",
                              "VT",
                              "WA",
                              "WI",
                              "WV",
                              "WY"
                            ]
                          },
                          "issuedCountry": {
                            "description": "Country where ID was issued.",
                            "example": "US",
                            "type": "string",
                            "maxLength": 2
                          },
                          "dateIssued": {
                            "description": "Date ID was issued (CCYY-MM-DD).",
                            "example": "1999-01-30",
                            "type": "string",
                            "format": "date"
                          },
                          "dateExpires": {
                            "description": "Date ID expires (CCYY-MM-DD).",
                            "example": "2020-02-11",
                            "type": "string",
                            "format": "date"
                          }
                        },
                        "required": [
                          "idType",
                          "idNumber"
                        ]
                      }
                    }
                  },
                  "required": [
                    "type",
                    "firstName",
                    "lastName",
                    "phoneNumber",
                    "email",
                    "addressLine1",
                    "city",
                    "state",
                    "country",
                    "postalCode"
                  ]
                }
              },
              "guarantors": {
                "description": "Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.",
                "type": "array",
                "items": {
                  "id": "Guarantor_1",
                  "title": "Guarantor_1",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Type3",
                      "example": "Guarantor 1 Contact",
                      "type": "string",
                      "enum": [
                        "Guarantor 1 Contact",
                        "Guarantor 2 Contact",
                        "Guarantor 3 Contact",
                        "Guarantor 4 Contact"
                      ]
                    },
                    "firstName": {
                      "description": "First name. Region based validations will be applied to this field.",
                      "example": "Todd",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 15,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "lastName": {
                      "description": "Last name. Region based validations will be applied to this field.",
                      "example": "Davis",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumber": {
                      "description": "10-digit phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "email": {
                      "description": "Email address of the contact. Must have @ and a .",
                      "example": "test@gmail.com",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                    },
                    "addressLine1": {
                      "description": "Address Line 1. Field for house number, street and direction.",
                      "example": "4355 N Coalwhipe St.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "city": {
                      "example": "Denver",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 28,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "state": {
                      "$ref": "Owner_1#/properties/state"
                    },
                    "country": {
                      "description": "Only United States is allowed.",
                      "type": "string",
                      "enum": [
                        "United States"
                      ]
                    },
                    "postalCode": {
                      "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                      "example": "12345",
                      "type": "string",
                      "minLength": 5,
                      "maxLength": 5,
                      "pattern": "^[0-9]{5}$"
                    },
                    "title": {
                      "description": "Required for AMEX acquired merchants otherwise optional.",
                      "example": "President",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 30,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "middleInitial": {
                      "description": "Middle initial.",
                      "example": "M",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumberExt": {
                      "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                      "example": "1234",
                      "type": "string",
                      "maxLength": 8,
                      "pattern": "^[0-9]{1,8}$"
                    },
                    "phoneType": {
                      "$ref": "Owner_1#/properties/phoneType"
                    },
                    "alternatePhone": {
                      "description": "10-digit alternate phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "alternatePhoneType": {
                      "$ref": "Owner_1#/properties/alternatePhoneType"
                    },
                    "faxNumber": {
                      "description": "10-digit fax number of the format 5131234567",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "ownershipPercentage": {
                      "description": "Ownership stake percentage.",
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 100.0,
                      "format": "int32"
                    },
                    "ssn": {
                      "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                      "example": "123456789",
                      "type": "string",
                      "pattern": "^[0-9]{9}$"
                    },
                    "dob": {
                      "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                      "example": "2000-03-23",
                      "type": "string",
                      "format": "date"
                    },
                    "addressLine2": {
                      "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                      "example": "suite 104",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "postalCodeExtension": {
                      "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                      "example": "1234",
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "pattern": "^[0-9]{4}$"
                    },
                    "identification": {
                      "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                      "type": "array",
                      "items": {
                        "$ref": "Identification"
                      }
                    }
                  },
                  "required": [
                    "type",
                    "firstName",
                    "lastName",
                    "phoneNumber",
                    "email",
                    "addressLine1",
                    "city",
                    "state",
                    "country",
                    "postalCode"
                  ]
                },
                "uniqueItems": true
              },
              "authorizedSigners": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "AuthorizedSigner_1",
                  "title": "AuthorizedSigner_1",
                  "type": "object",
                  "properties": {
                    "roleName": {
                      "title": "RoleName_1",
                      "description": "The role of the signer. Please note the below.\n\n 1) Merchant role name is mandatory.\n 2) Required fields indicated in schema are those required for all role names other than \"SalesRep\"\n 3) The \"SalesRep\" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email\n 4) The \"Signer2\" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.",
                      "example": "Merchant",
                      "type": "string",
                      "enum": [
                        "SalesRep",
                        "Merchant",
                        "Signer2",
                        "Signer3",
                        "Signer4",
                        "Signer5",
                        "Signer6",
                        "Signer7",
                        "Signer8",
                        "Guarantor2",
                        "Guarantor3",
                        "Guarantor4"
                      ]
                    },
                    "signingExperience": {
                      "title": "SigningExperience",
                      "description": "Signing ceremony type",
                      "example": "email",
                      "type": "string",
                      "enum": [
                        "embed",
                        "email",
                        "wet"
                      ]
                    },
                    "signingOrder": {
                      "description": "Define the signing order for multiple signers",
                      "example": "2",
                      "type": "string"
                    },
                    "firstName": {
                      "description": "First name. Region based validations will be applied to this field.",
                      "example": "Todd",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 15,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "lastName": {
                      "description": "Last name. Region based validations will be applied to this field.",
                      "example": "Davis",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumber": {
                      "description": "10-digit phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "email": {
                      "description": "Email address of the contact. Must have @ and a .",
                      "example": "test@gmail.com",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                    },
                    "ssn": {
                      "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                      "example": "123456789",
                      "type": "string",
                      "pattern": "^[0-9]{9}$"
                    },
                    "dob": {
                      "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                      "example": "2000-03-23",
                      "type": "string",
                      "format": "date"
                    },
                    "addressLine1": {
                      "description": "Address Line 1. Field for house number, street and direction.",
                      "example": "4355 N Coalwhipe St.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "city": {
                      "example": "Denver",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 28,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "state": {
                      "$ref": "Owner_1#/properties/state"
                    },
                    "country": {
                      "description": "Only United States is allowed.",
                      "type": "string",
                      "enum": [
                        "United States"
                      ]
                    },
                    "postalCode": {
                      "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                      "example": "12345",
                      "type": "string",
                      "minLength": 5,
                      "maxLength": 5,
                      "pattern": "^[0-9]{5}$"
                    },
                    "title": {
                      "description": "Required for AMEX acquired merchants otherwise optional.",
                      "example": "President",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 30,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "middleInitial": {
                      "description": "Middle initial.",
                      "example": "M",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumberExt": {
                      "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                      "example": "1234",
                      "type": "string",
                      "maxLength": 8,
                      "pattern": "^[0-9]{1,8}$"
                    },
                    "phoneType": {
                      "$ref": "Owner_1#/properties/phoneType"
                    },
                    "alternatePhone": {
                      "description": "10-digit alternate phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "alternatePhoneType": {
                      "$ref": "Owner_1#/properties/alternatePhoneType"
                    },
                    "faxNumber": {
                      "description": "10-digit fax number of the format 5131234567",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "addressLine2": {
                      "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                      "example": "suite 104",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "postalCodeExtension": {
                      "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                      "example": "1234",
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "pattern": "^[0-9]{4}$"
                    },
                    "identification": {
                      "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                      "type": "array",
                      "items": {
                        "$ref": "Identification"
                      }
                    }
                  },
                  "required": [
                    "roleName",
                    "signingExperience",
                    "signingOrder",
                    "firstName",
                    "lastName",
                    "phoneNumber",
                    "email",
                    "ssn",
                    "dob",
                    "addressLine1",
                    "city",
                    "state",
                    "country",
                    "postalCode"
                  ]
                }
              },
              "contacts": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Contact_1",
                  "title": "Contact_1",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Type4",
                      "description": "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST.",
                      "example": "Primary Contact",
                      "type": "string",
                      "enum": [
                        "Primary Contact",
                        "Store Primary Contact",
                        "Accounting Contact",
                        "Customer Service Contact",
                        "Shipping Contact",
                        "Third Party Contact",
                        "Vendor Contact Info",
                        "PCI Contact",
                        "Corporate"
                      ]
                    },
                    "firstName": {
                      "description": "First name. Region based validations will be applied to this field.",
                      "example": "Todd",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 15,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "lastName": {
                      "description": "Last name. Region based validations will be applied to this field.",
                      "example": "Davis",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumber": {
                      "description": "10-digit phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "email": {
                      "description": "Email address of the contact. Must have @ and a .",
                      "example": "test@gmail.com",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                    },
                    "title": {
                      "description": "Required for AMEX acquired merchants otherwise optional.",
                      "example": "President",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 30,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "middleInitial": {
                      "description": "Middle initial.",
                      "example": "M",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "ssn": {
                      "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                      "example": "123456789",
                      "type": "string",
                      "pattern": "^[0-9]{9}$"
                    },
                    "birthDate": {
                      "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                      "example": "2000-03-23",
                      "type": "string",
                      "format": "date"
                    },
                    "phoneNumberExt": {
                      "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                      "example": "1234",
                      "type": "string",
                      "maxLength": 8,
                      "pattern": "^[0-9]{1,8}$"
                    },
                    "phoneType": {
                      "$ref": "Owner_1#/properties/phoneType"
                    },
                    "alternatePhone": {
                      "description": "10-digit alternate phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "alternatePhoneType": {
                      "$ref": "Owner_1#/properties/alternatePhoneType"
                    },
                    "faxNumber": {
                      "description": "10-digit fax number of the format 5131234567",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    }
                  },
                  "required": [
                    "type",
                    "firstName",
                    "lastName",
                    "phoneNumber",
                    "email"
                  ]
                },
                "uniqueItems": true
              },
              "addresses": {
                "description": "",
                "example": [
                  {
                    "type": "Mailing Address",
                    "addressLine1": "1234 W Tester Ave.",
                    "city": "City Town",
                    "state": "CO",
                    "country": "United States",
                    "postalCode": "80123",
                    "postalCodeExtension": "1234"
                  },
                  {
                    "type": "Physical Address",
                    "addressLine1": "1234 W Tester Ave.",
                    "city": "City Town",
                    "state": "CO",
                    "country": "United States",
                    "postalCode": "80123",
                    "postalCodeExtension": "1234"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "Address_1",
                  "title": "Address_1",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "AddressType",
                      "description": "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory.",
                      "example": "Physical Address",
                      "type": "string",
                      "enum": [
                        "Mailing Address",
                        "Physical Address",
                        "Shipping Address"
                      ]
                    },
                    "addressLine1": {
                      "description": "Address Line 1. Field for house number, street and direction.",
                      "example": "4355 N Coalwhipe St.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "city": {
                      "example": "Denver",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 28,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "state": {
                      "$ref": "Owner_1#/properties/state"
                    },
                    "country": {
                      "description": "Only United States is allowed.",
                      "type": "string",
                      "enum": [
                        "United States"
                      ]
                    },
                    "postalCode": {
                      "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                      "example": "12345",
                      "type": "string",
                      "minLength": 5,
                      "maxLength": 5,
                      "pattern": "^[0-9]{5}$"
                    },
                    "addressLine2": {
                      "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                      "example": "suite 104",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "postalCodeExtension": {
                      "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                      "example": "1234",
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "pattern": "^[0-9]{4}$"
                    }
                  },
                  "required": [
                    "type",
                    "addressLine1",
                    "city",
                    "state",
                    "country",
                    "postalCode"
                  ]
                },
                "uniqueItems": true
              },
              "bankAccount": {
                "id": "BankAccount_1",
                "title": "BankAccount_1",
                "description": "Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber & bankName.",
                "type": "object",
                "properties": {
                  "ddaType": {
                    "title": "DdaType",
                    "description": "Direct deposit account type.",
                    "example": "Checking",
                    "type": "string",
                    "enum": [
                      "Checking",
                      "Savings"
                    ]
                  },
                  "achType": {
                    "title": "AchType",
                    "description": "Check deposit type",
                    "example": "Commercial Checking",
                    "type": "string",
                    "enum": [
                      "Commercial Checking",
                      "Private Checking"
                    ]
                  },
                  "accountNumber": {
                    "description": "Direct deposit account number.  Maximum 17 characters.",
                    "example": "011401545",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 17
                  },
                  "routingNumber": {
                    "description": "Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.",
                    "example": "102000076",
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 9
                  },
                  "bankName": {
                    "description": "Bank name used for credit card processing services.",
                    "example": "Bank name",
                    "type": "string"
                  }
                }
              },
              "advancedSettelment": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "AdvancedSettlement_inner",
                  "title": "AdvancedSettlement_inner",
                  "description": "Advanced Settlement gives merchants options to settle their account according to their needs with different settlement categories.",
                  "type": "object",
                  "properties": {
                    "settlementCategories": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "title": "SettlementCategory",
                        "description": "Settlement categories gives merhant an option to settle their account with different settlement categories. It is an optional field. However at time of boarding it becomes a required field.",
                        "type": "string",
                        "enum": [
                          "Deposits",
                          "Fees",
                          "Exceptions"
                        ]
                      }
                    },
                    "bankAccount": {
                      "$ref": "BankAccount_1"
                    }
                  }
                }
              },
              "salesAgent": {
                "id": "SalesAgent_1",
                "title": "SalesAgent_1",
                "description": "The agent who is submitting the deal. It is an optional object. It becomes required, when  partner wants to route deals to their own sales rep. Please work with your integration specialist for route to sales rep functionality.",
                "type": "object",
                "properties": {
                  "firstName": {
                    "description": "Sales agent's first name.",
                    "example": "John",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 15
                  },
                  "lastName": {
                    "description": "Sales agent's last name.",
                    "example": "Doe",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25
                  },
                  "email": {
                    "description": "Sales agent's email address.  Must have @ and a .",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
                  },
                  "id": {
                    "description": "Id for the Sales Contact.",
                    "example": "U15315",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 15
                  },
                  "mobilePhoneNumber": {
                    "description": "Sales agent's 10-digit phone number of the format 5131234567.",
                    "example": "1234567890",
                    "type": "string",
                    "pattern": "^[0-9]{10}$"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email"
                ]
              },
              "installationContact": {
                "id": "InstallationContact",
                "title": "InstallationContact",
                "description": "The Technical Agent who is going to do setup.",
                "type": "object",
                "properties": {
                  "firstName": {
                    "description": "Contact's first name.",
                    "example": "Sam",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 15,
                    "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                  },
                  "lastName": {
                    "description": "Contact's last name.",
                    "example": "Doe",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                  },
                  "email": {
                    "description": "Contact's email address. Must have @ and a .",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
                  },
                  "id": {
                    "description": "Id for Technical Contact",
                    "example": "U15318",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 15,
                    "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                  },
                  "mobilePhoneNumber": {
                    "description": "Contact's 10-digit phone number of the format 5131234567.",
                    "example": "1234567890",
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10,
                    "pattern": "([0-9]{10})$"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email"
                ]
              },
              "routeToSalesRep": {
                "description": "Used to route a application to a worldpay or partner sales rep. By default the API is configured to route to a Worldpay sales rep. If you would like to route to partner (Launchpad UI) please work with your implementation consultant.",
                "example": false,
                "type": "boolean"
              }
            },
            "required": [
              "externalRefId",
              "businessInfo",
              "transactionInfo"
            ]
          }
        example: ''
    responses:
      '200':
        description: Success
        headers:
          v-correlation-id:
            required: false
      '0':
        description: Default errors
        body:
          application/json:
            schema: |
              {
                "id": "ErrorResponse",
                "title": "ErrorResponse",
                "examples": [
                  {
                    "Id": "400 Bad Request",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                    "ExternalValue": null,
                    "Description": "Bad Request"
                  },
                  {
                    "Id": "401 Unauthorized",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "403 Forbidden",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "404 Not Found",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "412 Pre Condition",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "415 Bad content Type",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "500 Server Error",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusMessage": "BAD_REQUEST",
                  "errors": [
                    {
                      "errorCode": "PARAMETER_VALIDATION_ERROR",
                      "errorMessage": "PartnerId is missing in header.",
                      "target": "partnerId"
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "httpStatusCode": {
                    "example": 404,
                    "type": "integer",
                    "format": "int32"
                  },
                  "httpStatusMessage": {
                    "example": "STATUS-MESSAGE",
                    "type": "string"
                  },
                  "errors": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "Error",
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "ERROR_CODE",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "Error message here.",
                          "type": "string"
                        },
                        "target": {
                          "example": "Target",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
  post:
    description: 'Use this endpoint to collect the merchant information needed to initiate a new contract. '
    headers:
      v-correlation-id:
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
        required: false
        displayName: v-correlation-id
      Content-Type:
        description: Indicates the media type of the request-body. Accepts application/json.
        default: application/json
        required: false
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "id": "Application",
            "title": "Application",
            "type": "object",
            "properties": {
              "businessInfo": {
                "id": "BusinessInfo_1",
                "title": "BusinessInfo_1",
                "type": "object",
                "properties": {
                  "dbaName": {
                    "description": "The merchant name they do business as.  Generally with what their customers know the business.",
                    "example": "The DBA Name",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "legalName": {
                    "description": "Business Legal Name as filed with the IRS.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "^([a-z0-9& -]{1,40})$"
                  },
                  "ownershipType": {
                    "title": "OwnershipType",
                    "description": "Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).",
                    "example": "LLC",
                    "type": "string",
                    "enum": [
                      "GOVERNMENT",
                      "SOLE PROPRIETOR",
                      "LLC",
                      "PARTNERSHIP",
                      "FIN INSTITUTION",
                      "NON-PROFIT",
                      "ASSOCIATION/ESTATE/TRUST",
                      "PRIVATE CORPORATION",
                      "SEC REGISTERED",
                      "PUBLIC CORPORATION",
                      "OTHER"
                    ]
                  },
                  "mccCode": {
                    "description": "SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.",
                    "example": "5812",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4
                  },
                  "businessEstablishedDate": {
                    "description": "Date (CCYY-MM-DD) on which the merchant's business was established.",
                    "example": "2000-03-23",
                    "type": "string",
                    "format": "date"
                  },
                  "websiteUrl": {
                    "description": "The URL of the merchant's website.",
                    "example": "www.thefoodplace.com",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 80
                  },
                  "numberOfLocation": {
                    "description": "Number of current locations.",
                    "example": 2,
                    "type": "integer",
                    "format": "int32"
                  },
                  "federalTaxId": {
                    "description": "The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.The full list of restricted federal tax id-\n  “000000000” “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666” \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                    "example": "123456781",
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 9,
                    "pattern": "^([a-z0-9& -]{1,40})$"
                  },
                  "paymentAcceptanceMethod": {
                    "description": "The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.",
                    "example": [
                      "inPerson",
                      "onlineSite"
                    ],
                    "type": "array",
                    "items": {
                      "title": "PaymentAcceptanceMethod",
                      "type": "string",
                      "enum": [
                        "inPerson",
                        "onlineSite",
                        "phoneOrMailOrder"
                      ]
                    }
                  },
                  "pciadc": {
                    "title": "Pciadc",
                    "description": "Indication if the merchant has had an account data compromise.",
                    "example": "No",
                    "type": "string",
                    "enum": [
                      "Yes",
                      "No"
                    ]
                  },
                  "pcidssValidated": {
                    "title": "PcidssValidated",
                    "description": "Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.",
                    "example": "No",
                    "type": "string",
                    "enum": [
                      "Yes",
                      "No"
                    ]
                  },
                  "surroundingArea": {
                    "title": "SurroundingArea",
                    "description": "Type of area surroundning the business.",
                    "example": "Commercial",
                    "type": "string",
                    "enum": [
                      "Commercial",
                      "Industrial",
                      "Residential"
                    ]
                  },
                  "productServiceSold": {
                    "description": "Type of goods or services sold.",
                    "example": "Food",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "(^[-a-zA-Z0-9_ &()*+,./:;=_'‘]{1,40}$)"
                  },
                  "ownAddYears": {
                    "description": "Years the business has been operating in their current location.",
                    "example": 2,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 99.0,
                    "format": "int32"
                  },
                  "lengthOfContract": {
                    "description": "Inital contract term in months.",
                    "type": "string",
                    "pattern": "([0-9]{3})$"
                  },
                  "seasonal": {
                    "title": "Seasonal",
                    "description": "Does the business operate seasonally?",
                    "example": "Yes",
                    "type": "string",
                    "enum": [
                      "Yes",
                      "No"
                    ]
                  },
                  "activeMonths": {
                    "description": "The months during which the business is actively operating.",
                    "example": [
                      "Jan",
                      "Feb",
                      "Mar"
                    ],
                    "type": "array",
                    "items": {
                      "title": "ActiveMonth",
                      "type": "string",
                      "enum": [
                        "Jan",
                        "Feb",
                        "Mar",
                        "Apr",
                        "May",
                        "Jun",
                        "Jul",
                        "Aug",
                        "Sep",
                        "Oct",
                        "Nov",
                        "Dec"
                      ]
                    }
                  },
                  "warranty": {
                    "title": "Warranty",
                    "description": "Does the business offer warranties, dues, subscriptions, memberships, or other extended services?",
                    "example": "1 YEAR",
                    "type": "string",
                    "enum": [
                      "1 YEAR",
                      "30 DAY",
                      "60 DAY",
                      "90 DAY",
                      "LIFETIME",
                      "NO"
                    ]
                  },
                  "returnPolicy": {
                    "title": "ReturnPolicy",
                    "description": "The business's return policy.",
                    "example": "30 Day",
                    "type": "string",
                    "enum": [
                      "3 Day",
                      "30 Day",
                      "60 Day",
                      "60+ Day",
                      "ALL SALES FINAL",
                      "EXCHANGE ONLY/STORE CREDIT",
                      "NO RETURN POLICY"
                    ]
                  },
                  "taxExempt": {
                    "title": "TaxExempt",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ]
                  },
                  "acceptCreditCards": {
                    "title": "AcceptCreditCards",
                    "description": "Does the business accept credit cards?",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ]
                  },
                  "govOwnedMerchantCountry": {
                    "description": "If merchant is a government entity or an entity at least 50% owned or controlled by government entity than provide 2 digit country code which belongs to the country.",
                    "example": "US",
                    "type": "string"
                  }
                },
                "required": [
                  "dbaName",
                  "legalName",
                  "ownershipType",
                  "mccCode"
                ]
              },
              "transactionInfo": {
                "id": "TransactionInfo_1",
                "title": "TransactionInfo_1",
                "type": "object",
                "properties": {
                  "annualSalesVolume": {
                    "description": "Projected annual sales volume.",
                    "example": 20000.12,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 9999999999999.99
                  },
                  "percentRetailSwipedTransactions": {
                    "description": "Projected Percentage of daily card-present transactions.",
                    "example": 82,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "averageTicket": {
                    "description": "Average ticket dollar amount.",
                    "example": 2.3,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 9999999.99
                  },
                  "highestTicket": {
                    "description": "Highest ticket dollar amount.",
                    "example": 32.41,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 9999999.99
                  },
                  "currentProcessor": {
                    "description": "the current processor",
                    "example": "Global Payments",
                    "type": "string"
                  },
                  "acceptChargebacks": {
                    "title": "AcceptChargebacks",
                    "description": "Do you have more than 25 chargeback accepted in the last 12 months?",
                    "example": "No",
                    "type": "string",
                    "enum": [
                      "Yes",
                      "No"
                    ]
                  },
                  "chargebackPercent": {
                    "description": "Projected chargeback percentage.\n\n```Required when acceptChargebacks is 'Yes'```\n\n```Optional when acceptChargebacks is null or 'No'.```",
                    "example": 0,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "returnPercent": {
                    "description": "Projected return percent of  goods sold",
                    "example": 10,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "cardNotPresentPercent": {
                    "description": "Percent of card not present transactions.",
                    "example": 20,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "businessToBusinessPercent": {
                    "description": "Percent of business-to-business transactions.",
                    "example": 20,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "internetTransactionPercent": {
                    "description": "Percent of internet transactions.",
                    "example": 10,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "inPersonTransactionPercent": {
                    "description": "Percent of in person transactions.",
                    "example": 10,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "motoTransactionPercent": {
                    "description": "Percent of mail or phone order transactions.",
                    "example": 10,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "annualCreditSalesVolume": {
                    "description": "Projected annual credit card sales volume.",
                    "example": 123.32,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 999999999.99
                  },
                  "annualDebitSalesVolume": {
                    "description": "Projected annual debit card sales volume.",
                    "example": 32.23,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 999999999.99
                  },
                  "annualAmexVolume": {
                    "description": "Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```",
                    "example": 10000,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 999999999.99
                  },
                  "amexAverageTicket": {
                    "description": "AverageTicket dollar amount for Amex.\n ```This field is required when you opt-in for Amex```",
                    "example": 2.3,
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 9999999.99
                  },
                  "averageNumberofDays": {
                    "description": "Average number of days from when cardholder is charged & when products or services are received IN FULL by cardholder.",
                    "example": 10,
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 365.0,
                    "format": "int32"
                  },
                  "needsProcessingBy": {
                    "description": "Date (CCYY-MM-DD) by which the Equipment needs to be setup. This field may be required for a given partner.",
                    "example": "2022-11-01",
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "annualSalesVolume",
                  "percentRetailSwipedTransactions"
                ]
              },
              "authorizedSigners": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "AuthorizedSigner_1",
                  "title": "AuthorizedSigner_1",
                  "type": "object",
                  "properties": {
                    "roleName": {
                      "title": "RoleName_1",
                      "description": "The role of the signer. Please note the below.\n\n 1) Merchant role name is mandatory.\n 2) Required fields indicated in schema are those required for all role names other than \"SalesRep\"\n 3) The \"SalesRep\" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email\n 4) The \"Signer2\" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.",
                      "example": "Merchant",
                      "type": "string",
                      "enum": [
                        "SalesRep",
                        "Merchant",
                        "Signer2",
                        "Signer3",
                        "Signer4",
                        "Signer5",
                        "Signer6",
                        "Signer7",
                        "Signer8",
                        "Guarantor2",
                        "Guarantor3",
                        "Guarantor4"
                      ]
                    },
                    "signingExperience": {
                      "title": "SigningExperience",
                      "description": "Signing ceremony type",
                      "example": "email",
                      "type": "string",
                      "enum": [
                        "embed",
                        "email",
                        "wet"
                      ]
                    },
                    "signingOrder": {
                      "description": "Define the signing order for multiple signers",
                      "example": "2",
                      "type": "string"
                    },
                    "firstName": {
                      "description": "First name. Region based validations will be applied to this field.",
                      "example": "Todd",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 15,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "lastName": {
                      "description": "Last name. Region based validations will be applied to this field.",
                      "example": "Davis",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumber": {
                      "description": "10-digit phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "email": {
                      "description": "Email address of the contact. Must have @ and a .",
                      "example": "test@gmail.com",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                    },
                    "ssn": {
                      "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                      "example": "123456789",
                      "type": "string",
                      "pattern": "^[0-9]{9}$"
                    },
                    "dob": {
                      "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                      "example": "2000-03-23",
                      "type": "string",
                      "format": "date"
                    },
                    "addressLine1": {
                      "description": "Address Line 1. Field for house number, street and direction.",
                      "example": "4355 N Coalwhipe St.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "city": {
                      "example": "Denver",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 28,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "state": {
                      "title": "State_1",
                      "description": "Valid US state, commonwealth, and territory codes are allowed.",
                      "example": "CO",
                      "type": "string",
                      "enum": [
                        "AK",
                        "AL",
                        "AR",
                        "AS",
                        "AZ",
                        "CA",
                        "CO",
                        "CT",
                        "DC",
                        "DE",
                        "FL",
                        "FM",
                        "GA",
                        "GU",
                        "HI",
                        "IA",
                        "ID",
                        "IL",
                        "IN",
                        "KS",
                        "KY",
                        "LA",
                        "MA",
                        "MD",
                        "ME",
                        "MH",
                        "MI",
                        "MN",
                        "MO",
                        "MP",
                        "MS",
                        "MT",
                        "NC",
                        "ND",
                        "NE",
                        "NH",
                        "NJ",
                        "NM",
                        "NV",
                        "NY",
                        "OH",
                        "OK",
                        "OR",
                        "PA",
                        "PR",
                        "PW",
                        "RI",
                        "SC",
                        "SD",
                        "TN",
                        "TX",
                        "UM",
                        "UT",
                        "VA",
                        "VI",
                        "VT",
                        "WA",
                        "WI",
                        "WV",
                        "WY"
                      ]
                    },
                    "country": {
                      "description": "Only United States is allowed.",
                      "type": "string",
                      "enum": [
                        "United States"
                      ]
                    },
                    "postalCode": {
                      "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                      "example": "12345",
                      "type": "string",
                      "minLength": 5,
                      "maxLength": 5,
                      "pattern": "^[0-9]{5}$"
                    },
                    "title": {
                      "description": "Required for AMEX acquired merchants otherwise optional.",
                      "example": "President",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 30,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "middleInitial": {
                      "description": "Middle initial.",
                      "example": "M",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumberExt": {
                      "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                      "example": "1234",
                      "type": "string",
                      "maxLength": 8,
                      "pattern": "^[0-9]{1,8}$"
                    },
                    "phoneType": {
                      "title": "PhoneType",
                      "description": "Phone type.",
                      "example": "mobile",
                      "type": "string",
                      "enum": [
                        "mobile",
                        "home"
                      ]
                    },
                    "alternatePhone": {
                      "description": "10-digit alternate phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "alternatePhoneType": {
                      "title": "AlternatePhoneType",
                      "description": "Alternate phone type.",
                      "example": "home",
                      "type": "string",
                      "enum": [
                        "mobile",
                        "home"
                      ]
                    },
                    "faxNumber": {
                      "description": "10-digit fax number of the format 5131234567",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "addressLine2": {
                      "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                      "example": "suite 104",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "postalCodeExtension": {
                      "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                      "example": "1234",
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "pattern": "^[0-9]{4}$"
                    },
                    "identification": {
                      "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                      "type": "array",
                      "items": {
                        "id": "Identification",
                        "title": "Identification",
                        "type": "object",
                        "properties": {
                          "idType": {
                            "title": "IdType",
                            "description": "Type of ID provided by the owner.",
                            "example": "PASSPORT",
                            "type": "string",
                            "enum": [
                              "ALIEN ID",
                              "CREDIT BUREAU",
                              "DRIVERS LICENSE",
                              "STATE ID",
                              "MEXICAN CONSULATE",
                              "MILITARY ID",
                              "OTHER",
                              "PASSPORT"
                            ]
                          },
                          "idNumber": {
                            "description": "Owner's ID number.",
                            "example": "312312341",
                            "type": "string",
                            "maxLength": 40
                          },
                          "issuedCity": {
                            "description": "City in which ID was issued.",
                            "example": "City Town",
                            "type": "string",
                            "maxLength": 28
                          },
                          "issuedState": {
                            "title": "IssuedState",
                            "description": "Valid state code where ID was issued.",
                            "example": "CO",
                            "type": "string",
                            "maxLength": 2,
                            "enum": [
                              "AK",
                              "AL",
                              "AR",
                              "AS",
                              "AZ",
                              "CA",
                              "CO",
                              "CT",
                              "DC",
                              "DE",
                              "FL",
                              "FM",
                              "GA",
                              "GU",
                              "HI",
                              "IA",
                              "ID",
                              "IL",
                              "IN",
                              "KS",
                              "KY",
                              "LA",
                              "MA",
                              "MD",
                              "ME",
                              "MH",
                              "MI",
                              "MN",
                              "MO",
                              "MP",
                              "MS",
                              "MT",
                              "NC",
                              "ND",
                              "NE",
                              "NH",
                              "NJ",
                              "NM",
                              "NV",
                              "NY",
                              "OH",
                              "OK",
                              "OR",
                              "PA",
                              "PR",
                              "PW",
                              "RI",
                              "SC",
                              "SD",
                              "TN",
                              "TX",
                              "UT",
                              "VA",
                              "VI",
                              "VT",
                              "WA",
                              "WI",
                              "WV",
                              "WY"
                            ]
                          },
                          "issuedCountry": {
                            "description": "Country where ID was issued.",
                            "example": "US",
                            "type": "string",
                            "maxLength": 2
                          },
                          "dateIssued": {
                            "description": "Date ID was issued (CCYY-MM-DD).",
                            "example": "1999-01-30",
                            "type": "string",
                            "format": "date"
                          },
                          "dateExpires": {
                            "description": "Date ID expires (CCYY-MM-DD).",
                            "example": "2020-02-11",
                            "type": "string",
                            "format": "date"
                          }
                        },
                        "required": [
                          "idType",
                          "idNumber"
                        ]
                      }
                    }
                  },
                  "required": [
                    "roleName",
                    "signingExperience",
                    "signingOrder",
                    "firstName",
                    "lastName",
                    "phoneNumber",
                    "email",
                    "ssn",
                    "dob",
                    "addressLine1",
                    "city",
                    "state",
                    "country",
                    "postalCode"
                  ]
                }
              },
              "contacts": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Contact_1",
                  "title": "Contact_1",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Type4",
                      "description": "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST.",
                      "example": "Primary Contact",
                      "type": "string",
                      "enum": [
                        "Primary Contact",
                        "Store Primary Contact",
                        "Accounting Contact",
                        "Customer Service Contact",
                        "Shipping Contact",
                        "Third Party Contact",
                        "Vendor Contact Info",
                        "PCI Contact",
                        "Corporate"
                      ]
                    },
                    "firstName": {
                      "description": "First name. Region based validations will be applied to this field.",
                      "example": "Todd",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 15,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "lastName": {
                      "description": "Last name. Region based validations will be applied to this field.",
                      "example": "Davis",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumber": {
                      "description": "10-digit phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "email": {
                      "description": "Email address of the contact. Must have @ and a .",
                      "example": "test@gmail.com",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                    },
                    "title": {
                      "description": "Required for AMEX acquired merchants otherwise optional.",
                      "example": "President",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 30,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "middleInitial": {
                      "description": "Middle initial.",
                      "example": "M",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "ssn": {
                      "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                      "example": "123456789",
                      "type": "string",
                      "pattern": "^[0-9]{9}$"
                    },
                    "birthDate": {
                      "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                      "example": "2000-03-23",
                      "type": "string",
                      "format": "date"
                    },
                    "phoneNumberExt": {
                      "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                      "example": "1234",
                      "type": "string",
                      "maxLength": 8,
                      "pattern": "^[0-9]{1,8}$"
                    },
                    "phoneType": {
                      "$ref": "AuthorizedSigner_1#/properties/phoneType"
                    },
                    "alternatePhone": {
                      "description": "10-digit alternate phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "alternatePhoneType": {
                      "$ref": "AuthorizedSigner_1#/properties/alternatePhoneType"
                    },
                    "faxNumber": {
                      "description": "10-digit fax number of the format 5131234567",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    }
                  },
                  "required": [
                    "type",
                    "firstName",
                    "lastName",
                    "phoneNumber",
                    "email"
                  ]
                },
                "uniqueItems": true,
                "minItems": 1
              },
              "addresses": {
                "description": "",
                "example": [
                  {
                    "type": "Mailing Address",
                    "addressLine1": "1234 W Tester Ave.",
                    "city": "City Town",
                    "state": "CO",
                    "country": "United States",
                    "postalCode": "80123",
                    "postalCodeExtension": "1234"
                  },
                  {
                    "type": "Physical Address",
                    "addressLine1": "1234 W Tester Ave.",
                    "city": "City Town",
                    "state": "CO",
                    "country": "United States",
                    "postalCode": "80123",
                    "postalCodeExtension": "1234"
                  },
                  {
                    "type": "Shipping Address",
                    "addressLine1": "1234 W Tester Ave.",
                    "city": "City Town",
                    "state": "CO",
                    "country": "United States",
                    "postalCode": "80123",
                    "postalCodeExtension": "1234"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "Address_1",
                  "title": "Address_1",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "AddressType",
                      "description": "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory.",
                      "example": "Physical Address",
                      "type": "string",
                      "enum": [
                        "Mailing Address",
                        "Physical Address",
                        "Shipping Address"
                      ]
                    },
                    "addressLine1": {
                      "description": "Address Line 1. Field for house number, street and direction.",
                      "example": "4355 N Coalwhipe St.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "city": {
                      "example": "Denver",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 28,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "state": {
                      "$ref": "AuthorizedSigner_1#/properties/state"
                    },
                    "country": {
                      "description": "Only United States is allowed.",
                      "type": "string",
                      "enum": [
                        "United States"
                      ]
                    },
                    "postalCode": {
                      "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                      "example": "12345",
                      "type": "string",
                      "minLength": 5,
                      "maxLength": 5,
                      "pattern": "^[0-9]{5}$"
                    },
                    "addressLine2": {
                      "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                      "example": "suite 104",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "postalCodeExtension": {
                      "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                      "example": "1234",
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "pattern": "^[0-9]{4}$"
                    }
                  },
                  "required": [
                    "type",
                    "addressLine1",
                    "city",
                    "state",
                    "country",
                    "postalCode"
                  ]
                },
                "uniqueItems": true,
                "minItems": 1
              },
              "clientTrackingId": {
                "description": "This is an optional field that can be used by the partners to send a unique Id from their application for reporting purposes.",
                "example": "1341341234132412341",
                "type": "string",
                "minLength": 1,
                "maxLength": 36
              },
              "owners": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Owner_1",
                  "title": "Owner_1",
                  "description": "A Control Owner is required for the following ownership types > LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT",
                  "example": {
                    "type": "Control Owner Contact",
                    "title": "Owner",
                    "firstName": "Timothy",
                    "middleInitial": "M",
                    "lastName": "Jones",
                    "phoneNumber": "1234567890",
                    "phoneNumberExt": "1234",
                    "faxNumber": "1234567890",
                    "email": "test@test.com",
                    "ownershipPercentage": 23,
                    "ssn": "123456789",
                    "dob": "2000-03-23",
                    "addressLine1": "4355 N Coalwhipe St.",
                    "city": "City Town",
                    "state": "OH",
                    "country": "United States",
                    "postalCode": "80123",
                    "postalCodeExtension": "1234"
                  },
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Type",
                      "description": "The Owner Type. Please note the above Ownership Types where a Control Owner is required.",
                      "type": "string",
                      "enum": [
                        "Control Owner Contact",
                        "Owner 1 Contact",
                        "Owner 2 Contact",
                        "Owner 3 Contact",
                        "Owner 4 Contact"
                      ]
                    },
                    "firstName": {
                      "description": "First name. Region based validations will be applied to this field.",
                      "example": "Todd",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 15,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "lastName": {
                      "description": "Last name. Region based validations will be applied to this field.",
                      "example": "Davis",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumber": {
                      "description": "10-digit phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "email": {
                      "description": "Email address of the contact. Must have @ and a .",
                      "example": "test@gmail.com",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                    },
                    "addressLine1": {
                      "description": "Address Line 1. Field for house number, street and direction.",
                      "example": "4355 N Coalwhipe St.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "city": {
                      "example": "Denver",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 28,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "state": {
                      "$ref": "AuthorizedSigner_1#/properties/state"
                    },
                    "country": {
                      "description": "Only United States is allowed.",
                      "type": "string",
                      "enum": [
                        "United States"
                      ]
                    },
                    "postalCode": {
                      "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                      "example": "12345",
                      "type": "string",
                      "minLength": 5,
                      "maxLength": 5,
                      "pattern": "^[0-9]{5}$"
                    },
                    "title": {
                      "description": "Required for AMEX acquired merchants otherwise optional.",
                      "example": "President",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 30,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "middleInitial": {
                      "description": "Middle initial.",
                      "example": "M",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumberExt": {
                      "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                      "example": "1234",
                      "type": "string",
                      "maxLength": 8,
                      "pattern": "^[0-9]{1,8}$"
                    },
                    "phoneType": {
                      "$ref": "AuthorizedSigner_1#/properties/phoneType"
                    },
                    "alternatePhone": {
                      "description": "10-digit alternate phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "alternatePhoneType": {
                      "$ref": "AuthorizedSigner_1#/properties/alternatePhoneType"
                    },
                    "faxNumber": {
                      "description": "10-digit fax number of the format 5131234567",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "ownershipPercentage": {
                      "description": "Ownership stake percentage.",
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 100.0,
                      "format": "int32"
                    },
                    "ssn": {
                      "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                      "example": "123456789",
                      "type": "string",
                      "pattern": "^[0-9]{9}$"
                    },
                    "dob": {
                      "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                      "example": "2000-03-23",
                      "type": "string",
                      "format": "date"
                    },
                    "addressLine2": {
                      "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                      "example": "suite 104",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "postalCodeExtension": {
                      "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                      "example": "1234",
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "pattern": "^[0-9]{4}$"
                    },
                    "identification": {
                      "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                      "type": "array",
                      "items": {
                        "$ref": "Identification"
                      }
                    }
                  },
                  "required": [
                    "type",
                    "firstName",
                    "lastName",
                    "phoneNumber",
                    "email",
                    "addressLine1",
                    "city",
                    "state",
                    "country",
                    "postalCode"
                  ]
                }
              },
              "guarantors": {
                "description": "Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.",
                "type": "array",
                "items": {
                  "id": "Guarantor_1",
                  "title": "Guarantor_1",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Type3",
                      "example": "Guarantor 1 Contact",
                      "type": "string",
                      "enum": [
                        "Guarantor 1 Contact",
                        "Guarantor 2 Contact",
                        "Guarantor 3 Contact",
                        "Guarantor 4 Contact"
                      ]
                    },
                    "firstName": {
                      "description": "First name. Region based validations will be applied to this field.",
                      "example": "Todd",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 15,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "lastName": {
                      "description": "Last name. Region based validations will be applied to this field.",
                      "example": "Davis",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumber": {
                      "description": "10-digit phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "email": {
                      "description": "Email address of the contact. Must have @ and a .",
                      "example": "test@gmail.com",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}"
                    },
                    "addressLine1": {
                      "description": "Address Line 1. Field for house number, street and direction.",
                      "example": "4355 N Coalwhipe St.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "city": {
                      "example": "Denver",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 28,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "state": {
                      "$ref": "AuthorizedSigner_1#/properties/state"
                    },
                    "country": {
                      "description": "Only United States is allowed.",
                      "type": "string",
                      "enum": [
                        "United States"
                      ]
                    },
                    "postalCode": {
                      "description": "Postal code / zip code. The postal code must be valid for the address' country code.",
                      "example": "12345",
                      "type": "string",
                      "minLength": 5,
                      "maxLength": 5,
                      "pattern": "^[0-9]{5}$"
                    },
                    "title": {
                      "description": "Required for AMEX acquired merchants otherwise optional.",
                      "example": "President",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 30,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "middleInitial": {
                      "description": "Middle initial.",
                      "example": "M",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "phoneNumberExt": {
                      "description": "Phone number extension. Up to 8 digits of the format 12345678.",
                      "example": "1234",
                      "type": "string",
                      "maxLength": 8,
                      "pattern": "^[0-9]{1,8}$"
                    },
                    "phoneType": {
                      "$ref": "AuthorizedSigner_1#/properties/phoneType"
                    },
                    "alternatePhone": {
                      "description": "10-digit alternate phone number of the format  5131234567.",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "alternatePhoneType": {
                      "$ref": "AuthorizedSigner_1#/properties/alternatePhoneType"
                    },
                    "faxNumber": {
                      "description": "10-digit fax number of the format 5131234567",
                      "example": "5131234567",
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "ownershipPercentage": {
                      "description": "Ownership stake percentage.",
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 100.0,
                      "format": "int32"
                    },
                    "ssn": {
                      "description": "Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009\" \"111111110\" “111111111” \"111111112\" \"111111113\" \"111111114\" \"111111115\" \"111111116\" \"111111117\" \"111111118\" \"111111119\" \"222222220\" \"222222221\" “222222222” \"222222223\" \"222222224\" \"222222225\" \"222222226\" \"222222227\" \"222222228\" \"222222229\" \"333333330\" \"333333331\" \"333333332\" “333333333” \"333333334\" \"333333335\" \"333333336\" \"333333337\" \"333333338\" \"333333339\"  \"444444440\" \"444444441\" \"444444442\" \"444444443\" “444444444” \"444444445\" \"444444446\" \"444444447\" \"444444448\" \"444444449\" \"555555550\" \"555555551\" \"555555552\" \"555555553\" \"555555554\" “555555555” \"555555556\" \"555555557\" \"555555558\" \"555555559\"  \"666666660\" \"666666661\" \"666666662\" \"666666663\" \"666666664\" \"666666665\" “666666666\" \"666666667\" \"666666668\" \"666666669\" \"777777770\" \"777777771” \"777777772\" \"777777773\" \"777777774\" \"777777775\" \"777777776\" “777777777” \"777777778\" \"777777779\" \"888888880\" \"888888881\" \"888888882\" \"888888883\" \"888888884\" \"888888885\" \"888888886\" \"888888887\" “888888888” \"888888889\"  \"999999990\" \"999999991\" \"999999992\" \"999999993\" \"999999994\" \"999999995\" \"99999996\"   \"999999997\" \"999999998\" “999999999”  \"123456780\" to \"123456789\" \"123123123\"",
                      "example": "123456789",
                      "type": "string",
                      "pattern": "^[0-9]{9}$"
                    },
                    "dob": {
                      "description": "Date of Birth (CCYY-MM-DD). Must be at least 18 years old.",
                      "example": "2000-03-23",
                      "type": "string",
                      "format": "date"
                    },
                    "addressLine2": {
                      "description": "Address Line 2. Field for apartment or suite numbers, etc.",
                      "example": "suite 104",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                    },
                    "postalCodeExtension": {
                      "description": "Postal code / zip code extension.  The postal code extension must be valid for the address' country code.",
                      "example": "1234",
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "pattern": "^[0-9]{4}$"
                    },
                    "identification": {
                      "description": "Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.",
                      "type": "array",
                      "items": {
                        "$ref": "Identification"
                      }
                    }
                  },
                  "required": [
                    "type",
                    "firstName",
                    "lastName",
                    "phoneNumber",
                    "email",
                    "addressLine1",
                    "city",
                    "state",
                    "country",
                    "postalCode"
                  ]
                },
                "uniqueItems": true,
                "minItems": 1
              },
              "bankAccount": {
                "id": "BankAccount_1",
                "title": "BankAccount_1",
                "description": "Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber & bankName.",
                "type": "object",
                "properties": {
                  "ddaType": {
                    "title": "DdaType",
                    "description": "Direct deposit account type.",
                    "example": "Checking",
                    "type": "string",
                    "enum": [
                      "Checking",
                      "Savings"
                    ]
                  },
                  "achType": {
                    "title": "AchType",
                    "description": "Check deposit type",
                    "example": "Commercial Checking",
                    "type": "string",
                    "enum": [
                      "Commercial Checking",
                      "Private Checking"
                    ]
                  },
                  "accountNumber": {
                    "description": "Direct deposit account number.  Maximum 17 characters.",
                    "example": "011401545",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 17
                  },
                  "routingNumber": {
                    "description": "Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.",
                    "example": "102000076",
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 9
                  },
                  "bankName": {
                    "description": "Bank name used for credit card processing services.",
                    "example": "Bank name",
                    "type": "string"
                  }
                }
              },
              "advancedSettelment": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "AdvancedSettlement_inner",
                  "title": "AdvancedSettlement_inner",
                  "description": "Advanced Settlement gives merchants options to settle their account according to their needs with different settlement categories.",
                  "type": "object",
                  "properties": {
                    "settlementCategories": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "title": "SettlementCategory",
                        "description": "Settlement categories gives merhant an option to settle their account with different settlement categories. It is an optional field. However at time of boarding it becomes a required field.",
                        "type": "string",
                        "enum": [
                          "Deposits",
                          "Fees",
                          "Exceptions"
                        ]
                      }
                    },
                    "bankAccount": {
                      "$ref": "BankAccount_1"
                    }
                  }
                }
              },
              "salesAgent": {
                "id": "SalesAgent_1",
                "title": "SalesAgent_1",
                "description": "The agent who is submitting the deal. It is an optional object. It becomes required, when  partner wants to route deals to their own sales rep. Please work with your integration specialist for route to sales rep functionality.",
                "type": "object",
                "properties": {
                  "firstName": {
                    "description": "Sales agent's first name.",
                    "example": "John",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 15
                  },
                  "lastName": {
                    "description": "Sales agent's last name.",
                    "example": "Doe",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25
                  },
                  "email": {
                    "description": "Sales agent's email address.  Must have @ and a .",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
                  },
                  "id": {
                    "description": "Id for the Sales Contact.",
                    "example": "U15315",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 15
                  },
                  "mobilePhoneNumber": {
                    "description": "Sales agent's 10-digit phone number of the format 5131234567.",
                    "example": "1234567890",
                    "type": "string",
                    "pattern": "^[0-9]{10}$"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email"
                ]
              },
              "installationContact": {
                "id": "InstallationContact",
                "title": "InstallationContact",
                "description": "The Technical Agent who is going to do setup.",
                "type": "object",
                "properties": {
                  "firstName": {
                    "description": "Contact's first name.",
                    "example": "Sam",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 15,
                    "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                  },
                  "lastName": {
                    "description": "Contact's last name.",
                    "example": "Doe",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                  },
                  "email": {
                    "description": "Contact's email address. Must have @ and a .",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "(\\\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z0-9]{2,}\\\\b{0,64})"
                  },
                  "id": {
                    "description": "Id for Technical Contact",
                    "example": "U15318",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 15,
                    "pattern": "^[a-zA-Z0-9 \\p{P}\\p{S}]+$"
                  },
                  "mobilePhoneNumber": {
                    "description": "Contact's 10-digit phone number of the format 5131234567.",
                    "example": "1234567890",
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10,
                    "pattern": "([0-9]{10})$"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email"
                ]
              },
              "additionalInformation": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "AdditionalInformationObject",
                  "title": "AdditionalInformationObject",
                  "description": "Required for some partners. Work with your Developer Integrations specialist for more information.",
                  "type": "object",
                  "properties": {
                    "key": {
                      "title": "Key",
                      "example": "partnerEmployeeId",
                      "type": "string",
                      "enum": [
                        "partnerEmployeeId",
                        "partnerEmployeeName",
                        "partnerEmployeePhoneNumber",
                        "partnerEmployeeEmail",
                        "partnerEmployeeType",
                        "partnerEmployeeBranch",
                        "partnerEmployeeCostCentre",
                        "partnerEmployeeRegion",
                        "partnerEmployeeOfficerCode",
                        "partnerEmployeeCompany",
                        "partnerEmployeeId2",
                        "partnerEmployeeName2",
                        "partnerEmployeePhoneNumber2",
                        "partnerEmployeeEmail2",
                        "partnerEmployeeType2",
                        "partnerEmployeeBranch2",
                        "partnerEmployeeCostCentre2",
                        "partnerEmployeeRegion2",
                        "partnerEmployeeOfficerCode2",
                        "partnerEmployeeCompany2",
                        "partnerEmployeeIndustry",
                        "partnerLeadSource",
                        "partnerEmployeeRef",
                        "partnerMethod",
                        "partnerVipIndicator",
                        "partnerMarketRegion",
                        "partnerPromotionCampaign",
                        "partnerLeadType",
                        "partnerCustom1",
                        "partnerCustom2",
                        "partnerCustom3",
                        "partnerCustom4",
                        "partnerCustom5",
                        "leadInitiatedBy"
                      ]
                    },
                    "value": {
                      "example": "4656",
                      "type": "string"
                    }
                  }
                }
              },
              "leadSource": {
                "description": "The source of the lead.",
                "example": "LP Connect API",
                "type": "string",
                "maxLength": 150
              },
              "routeToSalesRep": {
                "description": "Used to route a application to a worldpay or partner sales rep.",
                "type": "boolean"
              },
              "productsInquiry": {
                "description": "",
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 25
                },
                "uniqueItems": true
              }
            },
            "required": [
              "businessInfo",
              "transactionInfo",
              "authorizedSigners",
              "contacts",
              "addresses"
            ]
          }
        example: ''
    responses:
      '201':
        description: Created
        headers:
          v-correlation-id:
            required: false
        body:
          application/json:
            schema: |
              {
                "id": "ApplicationResponse",
                "title": "ApplicationResponse",
                "type": "object",
                "properties": {
                  "externalRefId": {
                    "description": "A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.",
                    "example": "df8a6d82-3bb4-4f3b-ba18-57a5981ede8e",
                    "type": "string",
                    "maxLength": 36,
                    "pattern": "([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})"
                  }
                }
              }
      '0':
        description: Default errors
        body:
          application/json:
            schema: |
              {
                "id": "ErrorResponse",
                "title": "ErrorResponse",
                "examples": [
                  {
                    "Id": "400 Bad Request",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                    "ExternalValue": null,
                    "Description": "Bad Request"
                  },
                  {
                    "Id": "401 Unauthorized",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "403 Forbidden",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "404 Not Found",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "412 Pre Condition",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "415 Bad content Type",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "500 Server Error",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusMessage": "BAD_REQUEST",
                  "errors": [
                    {
                      "errorCode": "PARAMETER_VALIDATION_ERROR",
                      "errorMessage": "PartnerId is missing in header.",
                      "target": "partnerId"
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "httpStatusCode": {
                    "example": 404,
                    "type": "integer",
                    "format": "int32"
                  },
                  "httpStatusMessage": {
                    "example": "STATUS-MESSAGE",
                    "type": "string"
                  },
                  "errors": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "Error",
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "ERROR_CODE",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "Error message here.",
                          "type": "string"
                        },
                        "target": {
                          "example": "Target",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
/terminal/additional-configurations:
  get:
    description: Fetches a list of valid terminal customizations and peripherals, such as electing to password protect a void.
    headers:
      externalRefId:
        description: The externalRefId returned from POST /applications call.
        example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
        required: true
        displayName: externalRefId
      v-correlation-id:
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
        required: false
        displayName: v-correlation-id
      logicalApplicationId:
        description: Logical App ID of the terminal.
        type: string
        example: '1073'
        required: false
        displayName: logicalApplicationId
    responses:
      '200':
        description: Response is a list of valid terminal configurations.
        headers:
          v-correlation-id:
            required: false
        body:
          application/json:
            schema: |
              {
                "id": "AdditionalConfigurationsResponse",
                "title": "AdditionalConfigurationsResponse",
                "type": "object",
                "properties": {
                  "customizations": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "AdditionalConfigurationCustomization",
                      "title": "AdditionalConfigurationCustomization",
                      "type": "object",
                      "properties": {
                        "customizationId": {
                          "description": "Customization Id is internally populated from a master list.",
                          "example": "1",
                          "type": "string"
                        },
                        "customizationType": {
                          "description": "type of customization",
                          "example": "time",
                          "type": "string"
                        },
                        "useProductMatrix": {
                          "description": "Whether or not used in product matrix",
                          "example": "N",
                          "type": "string"
                        },
                        "productId": {
                          "description": "unique ID for the product",
                          "example": "12",
                          "type": "string"
                        },
                        "code": {
                          "description": "product code",
                          "example": "CST01",
                          "type": "string"
                        },
                        "customizationCodeDetails": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "CustomizationCodeDetails",
                            "title": "CustomizationCodeDetails",
                            "type": "object",
                            "properties": {
                              "value": {
                                "description": "customization code",
                                "example": "H",
                                "type": "string"
                              },
                              "shortDescription": {
                                "description": "short description of the customization code",
                                "example": "Host Auto Close",
                                "type": "string"
                              },
                              "longDescription": {
                                "description": "long description of the customization code",
                                "example": "Host Auto Close",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "customizationValue": {
                          "description": "Actual Customization Value",
                          "example": "H",
                          "type": "string"
                        },
                        "customizationFieldLength": {
                          "description": "Length of the customization value",
                          "example": "1",
                          "type": "string"
                        },
                        "customizationDecimalPlace": {
                          "description": "Number of decimal places",
                          "example": "0",
                          "type": "string"
                        },
                        "customizationMinValue": {
                          "description": "Minimum Value. Only applicable if the customization value is a number",
                          "example": "0",
                          "type": "string"
                        },
                        "customizationMaxValue": {
                          "description": "Maximum Value. Only applicable if the customization value is a number",
                          "example": "6",
                          "type": "string"
                        },
                        "charactersAllowed": {
                          "description": "All characters allowed for customization. Only applicable if the customization value is a string.",
                          "example": "abcdefghijklmnopqrstuvwxyz",
                          "type": "string"
                        },
                        "rule": {
                          "description": "customization rule",
                          "type": "string"
                        },
                        "regex": {
                          "description": "Regular expression to validate the customization value",
                          "example": "^[a-z]{1}",
                          "type": "string"
                        },
                        "multiMerchantFlag": {
                          "description": "Applicable in a multiple merchant situation",
                          "example": false,
                          "type": "boolean",
                          "default": false
                        },
                        "shortDescription": {
                          "description": "Description of the customization",
                          "example": "CVV_PROMPTING",
                          "type": "string"
                        },
                        "longDescription": {
                          "description": "Verbose description of the customiztion",
                          "example": "CVV_PROMPTING",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "peripherals": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "AdditionalConfigurationPeripheral",
                      "title": "AdditionalConfigurationPeripheral",
                      "type": "object",
                      "properties": {
                        "peripheralId": {
                          "description": "Peripheral IDs are internally populated.",
                          "example": "35",
                          "type": "string"
                        },
                        "model": {
                          "description": "Peripheral Name",
                          "example": "Pin Pad 1000 SE",
                          "type": "string"
                        },
                        "shortDescription": {
                          "description": "Description of the peripheral",
                          "example": "PP1S",
                          "type": "string"
                        },
                        "longDescription": {
                          "description": "Verbose description of the peripheral",
                          "example": "PPAD",
                          "type": "string"
                        },
                        "isEMVCertified": {
                          "description": "Whether peripheral is EMV certified",
                          "example": true,
                          "type": "boolean"
                        },
                        "isEMVCapable": {
                          "description": "Whether peripheral is EMV Capable",
                          "example": true,
                          "type": "boolean"
                        },
                        "activePeripheralFlag": {
                          "example": "Y",
                          "type": "string"
                        },
                        "purchasePrice": {
                          "description": "purchase price of the peripheral",
                          "example": "168.12",
                          "type": "string"
                        },
                        "leasePrice": {
                          "description": "lease price of the peripheral",
                          "example": "100.12",
                          "type": "string"
                        },
                        "rentalPrice": {
                          "description": "rental price of the peripheral",
                          "example": "90",
                          "type": "string"
                        },
                        "hardwareCost": {
                          "description": "hardware cost of the terminal",
                          "example": "50.75",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
      '0':
        description: Default errors
        body:
          application/json:
            schema: |
              {
                "id": "ErrorResponse",
                "title": "ErrorResponse",
                "examples": [
                  {
                    "Id": "400 Bad Request",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                    "ExternalValue": null,
                    "Description": "Bad Request"
                  },
                  {
                    "Id": "401 Unauthorized",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "403 Forbidden",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "404 Not Found",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "412 Pre Condition",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "415 Bad content Type",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "500 Server Error",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusMessage": "BAD_REQUEST",
                  "errors": [
                    {
                      "errorCode": "PARAMETER_VALIDATION_ERROR",
                      "errorMessage": "PartnerId is missing in header.",
                      "target": "partnerId"
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "httpStatusCode": {
                    "example": 404,
                    "type": "integer",
                    "format": "int32"
                  },
                  "httpStatusMessage": {
                    "example": "STATUS-MESSAGE",
                    "type": "string"
                  },
                  "errors": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "Error",
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "ERROR_CODE",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "Error message here.",
                          "type": "string"
                        },
                        "target": {
                          "example": "Target",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
/contracts:
  get:
    description: Returns a PDF contract to be signed.
    headers:
      externalRefId:
        description: The externalRefId returned from POST /applications call.
        example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
        required: true
        displayName: externalRefId
      v-correlation-id:
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
        required: false
        displayName: v-correlation-id
    responses:
      '200':
        description: Response is a PDF file.
        headers:
          v-correlation-id:
            required: false
        body:
          application/pdf:
            schema: |
              {
                "x-is-dynamic": true
              }
      '0':
        description: Default errors
        body:
          application/json:
            schema: |
              {
                "id": "ErrorResponse",
                "title": "ErrorResponse",
                "examples": [
                  {
                    "Id": "400 Bad Request",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                    "ExternalValue": null,
                    "Description": "Bad Request"
                  },
                  {
                    "Id": "401 Unauthorized",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "403 Forbidden",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "404 Not Found",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "412 Pre Condition",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "415 Bad content Type",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  },
                  {
                    "Id": "500 Server Error",
                    "Name": null,
                    "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusMessage": "BAD_REQUEST",
                  "errors": [
                    {
                      "errorCode": "PARAMETER_VALIDATION_ERROR",
                      "errorMessage": "PartnerId is missing in header.",
                      "target": "partnerId"
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "httpStatusCode": {
                    "example": 404,
                    "type": "integer",
                    "format": "int32"
                  },
                  "httpStatusMessage": {
                    "example": "STATUS-MESSAGE",
                    "type": "string"
                  },
                  "errors": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "Error",
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "ERROR_CODE",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "Error message here.",
                          "type": "string"
                        },
                        "target": {
                          "example": "Target",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
/equipment:
  /supported:
    get:
      description: Retrieve applicable equipment for an existing application.
      headers:
        externalRefId:
          description: The externalRefId returned from POST /applications call.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: true
          displayName: externalRefId
        v-correlation-id:
          description: Unique transaction Id. Will be generated if not provided and returned in response headers.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: false
          displayName: v-correlation-id
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              required: false
          body:
            application/json:
              schema: |
                {
                  "id": "inline_response_200",
                  "title": "inline_response_200",
                  "type": "object",
                  "properties": {
                    "equipment": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "inline_response_200_equipment",
                        "title": "inline_response_200_equipment",
                        "type": "object",
                        "properties": {
                          "id": {
                            "example": "1",
                            "type": "string"
                          },
                          "name": {
                            "example": "Verifone LX570",
                            "type": "string"
                          },
                          "logicalApplicationId": {
                            "example": "1073",
                            "type": "string"
                          },
                          "environment": {
                            "example": "Retail",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        '0':
          description: Default errors
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "examples": [
                    {
                      "Id": "400 Bad Request",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                      "ExternalValue": null,
                      "Description": "Bad Request"
                    },
                    {
                      "Id": "401 Unauthorized",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "403 Forbidden",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "404 Not Found",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "412 Pre Condition",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "415 Bad content Type",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "500 Server Error",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "httpStatusCode": 400,
                    "httpStatusMessage": "BAD_REQUEST",
                    "errors": [
                      {
                        "errorCode": "PARAMETER_VALIDATION_ERROR",
                        "errorMessage": "PartnerId is missing in header.",
                        "target": "partnerId"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "httpStatusCode": {
                      "example": 404,
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpStatusMessage": {
                      "example": "STATUS-MESSAGE",
                      "type": "string"
                    },
                    "errors": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "Error",
                        "title": "Error",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "ERROR_CODE",
                            "type": "string"
                          },
                          "errorMessage": {
                            "example": "Error message here.",
                            "type": "string"
                          },
                          "target": {
                            "example": "Target",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
  /terminal-var:
    get:
      description: Gets the terminal configuration information for a specific partner.
      headers:
        externalRefId:
          description: The externalRefId returned from POST /applications call.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: true
          displayName: externalRefId
        v-correlation-id:
          description: Unique transaction Id. Will be generated if not provided and returned in response headers.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: false
          displayName: v-correlation-id
        Content-Type:
          description: Indicates the media type of the request-body. Accepts application/json.
          example: application/json
          default: application/json
          required: false
          displayName: Content-Type
          enum:
          - application/json
        locationId:
          description: The locationId returned from POST /locations call.
          type: string
          required: false
          displayName: locationId
        merchantId:
          description: The merchantId returned from POST /merchants call.
          type: string
          required: false
          displayName: merchantId
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              required: false
          body:
            application/json:
              schema: |
                {
                  "id": "EquipmentSetup",
                  "title": "EquipmentSetup",
                  "type": "object",
                  "properties": {
                    "shippingOption": {
                      "title": "ShippingOption",
                      "description": "The speed you would like the equipment to be shipped.",
                      "example": "next day",
                      "type": "string",
                      "enum": [
                        "ground",
                        "next day",
                        "2nd day"
                      ]
                    },
                    "terminals": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "Terminal",
                        "title": "Terminal",
                        "type": "object",
                        "properties": {
                          "terminalConfigs": {
                            "id": "TerminalConfig",
                            "title": "TerminalConfig",
                            "type": "object",
                            "properties": {
                              "terminalId": {
                                "description": "Terminal ID number.",
                                "example": "iCT220",
                                "type": "string"
                              },
                              "price": {
                                "description": "Terminal price",
                                "example": 187.99,
                                "type": "number"
                              },
                              "quantity": {
                                "example": 1,
                                "type": "integer",
                                "format": "int32"
                              },
                              "logicalApplicationId": {
                                "description": "Logical application ID.",
                                "example": "MONE510",
                                "type": "string"
                              },
                              "accessMethod": {
                                "description": "Methods of terminal access.",
                                "example": "SSL",
                                "type": "string"
                              },
                              "paymentMethod": {
                                "title": "PaymentMethod",
                                "description": "Payment method for the selected terminal.",
                                "example": "PURCHASE / SALE",
                                "type": "string",
                                "enum": [
                                  "PURCHASE / SALE",
                                  "REPROGRAM / OWN",
                                  "MONTH-TO-MONTH RENTAL",
                                  "LEASE"
                                ]
                              },
                              "environmentName": {
                                "description": "Environment name",
                                "example": "Retail",
                                "type": "string"
                              },
                              "requestId": {
                                "description": "Partner assigned unique request ID for terminal setup.",
                                "example": "41231",
                                "type": "string"
                              },
                              "terminalModel": {
                                "description": "The model name of the terminal in use.",
                                "example": "Ingenico iCT220 CTLS 3.X Dial",
                                "type": "string"
                              },
                              "isVar": {
                                "description": "The value added reseller. Default value is false.",
                                "example": false,
                                "type": "boolean",
                                "default": false
                              },
                              "emvCapable": {
                                "description": "Is it EMV capabale?",
                                "example": true,
                                "type": "boolean",
                                "default": false
                              },
                              "leaseId": {
                                "description": "Lease ID. Required when PaymentMethod is selected as lease.",
                                "example": "12",
                                "type": "string"
                              },
                              "leaseTermLength": {
                                "title": "LeaseTermLength",
                                "description": "Lease term for the peripheral",
                                "example": "24",
                                "type": "string",
                                "enum": [
                                  "24",
                                  "36",
                                  "48",
                                  "60"
                                ]
                              },
                              "terminalSequenceNumber": {
                                "description": "Terminal sequence number. If not sent, the API will autogenerate a number.",
                                "example": "14",
                                "type": "string",
                                "pattern": "^[0-9]"
                              },
                              "specialCustomizations": {
                                "description": "Any customization request for a terminal configuration.",
                                "example": "Mulitple merchant setup is Yes",
                                "type": "string",
                                "maxLength": 255
                              }
                            },
                            "required": [
                              "terminalId",
                              "price",
                              "quantity",
                              "logicalApplicationId",
                              "accessMethod",
                              "paymentMethod",
                              "environmentName"
                            ]
                          },
                          "products": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "Product",
                              "title": "Product",
                              "type": "object",
                              "properties": {
                                "productId": {
                                  "description": "Product ID is populated internally.",
                                  "example": "1",
                                  "type": "string"
                                },
                                "productName": {
                                  "description": "Payment method associated with the internally-populated ID.",
                                  "example": "Debit",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "customizations": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "TerminalCustomization",
                              "title": "TerminalCustomization",
                              "type": "object",
                              "properties": {
                                "customizationId": {
                                  "description": "Customization ID is internally populated from a master list.",
                                  "example": "10",
                                  "type": "string"
                                },
                                "customizationName": {
                                  "example": "Auto-Close Time",
                                  "type": "string"
                                },
                                "customizationFieldValue": {
                                  "example": "N",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "peripherals": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "Peripheral",
                              "title": "Peripheral",
                              "type": "object",
                              "properties": {
                                "peripheralId": {
                                  "description": "Peripheral IDs are internally populated.",
                                  "example": "231",
                                  "type": "string"
                                },
                                "peripheralType": {
                                  "description": "Peripheral type",
                                  "example": "PPAD",
                                  "type": "string"
                                },
                                "model": {
                                  "example": "Magtek Check Reader",
                                  "type": "string"
                                },
                                "leaseId": {
                                  "description": "Lease ID for the peripheral",
                                  "example": "18",
                                  "type": "string"
                                },
                                "leaseTermLength": {
                                  "$ref": "TerminalConfig#/properties/leaseTermLength"
                                },
                                "paymentMethod": {
                                  "title": "PaymentMethod1",
                                  "description": "Payment method for the selected peripheral.",
                                  "example": "PURCHASE / SALE",
                                  "type": "string",
                                  "enum": [
                                    "PURCHASE / SALE",
                                    "REPROGRAM / OWN",
                                    "MONTH-TO-MONTH RENTAL",
                                    "LEASE"
                                  ]
                                },
                                "amount": {
                                  "description": "\"Payment Amount for the peripheral. Valid values are 0.00\n  - 9999999999.99.\"",
                                  "example": "220.21",
                                  "type": "string",
                                  "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
                                },
                                "paymentConfirmationNumber": {
                                  "description": "Payment confirmation number for the peripheral.",
                                  "example": "123456",
                                  "type": "string",
                                  "pattern": "[0-9a-zA-Z]{6}|"
                                }
                              }
                            }
                          },
                          "vendors": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "PaymentApplicationVendor",
                              "title": "PaymentApplicationVendor",
                              "description": "A payment application is installed software developed for processing various payments types: Credit, Debit, Gift, Checks, etc. and can be integrated with a POS system or used in a standalone manner.",
                              "type": "object",
                              "properties": {
                                "paymentApplicationId": {
                                  "description": "Payment application ID",
                                  "example": "9",
                                  "type": "string"
                                },
                                "paymentApplicationName": {
                                  "example": "PurchaseExpress",
                                  "type": "string"
                                },
                                "vendorId": {
                                  "description": "Vendor ID for the payment application.",
                                  "example": "4",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Payment application version.",
                                  "example": "1",
                                  "type": "string"
                                },
                                "reseller": {
                                  "description": "Reseller",
                                  "example": "Agilysys Inc",
                                  "type": "string"
                                },
                                "lastUpgradeDate": {
                                  "description": "Last date payment application was upgraded.",
                                  "example": "2012-02-18T00:00:00Z",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "notes": {
                                  "description": "Custom notes can go here.",
                                  "example": "Paymetric Gateway v3",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "gateways": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "Gateway",
                              "title": "Gateway",
                              "description": "A gateway is a hosted payment processing application provided by a service provider and accessed through an internet connection.",
                              "type": "object",
                              "properties": {
                                "gatewayId": {
                                  "description": "Internally-generated gateway ID.",
                                  "example": "15",
                                  "type": "string"
                                },
                                "gatewayName": {
                                  "example": "Paymetric Gateway",
                                  "type": "string"
                                },
                                "notes": {
                                  "description": "Add any custom notes here.",
                                  "example": "Paymetric Gateway v3",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "supply": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "TerminalSupply",
                              "title": "TerminalSupply",
                              "type": "object",
                              "properties": {
                                "supplyType": {
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Supply name",
                                  "type": "string"
                                },
                                "quantity": {
                                  "description": "Supply quantity",
                                  "example": 2,
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "total": {
                                  "description": "Total Supplies. Valid values are 0.00\n  - 9999999999.99.\"",
                                  "example": "220.21",
                                  "type": "string",
                                  "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
                                }
                              },
                              "required": [
                                "supplyType"
                              ]
                            }
                          },
                          "deployment": {
                            "id": "TerminalDeployment",
                            "title": "TerminalDeployment",
                            "type": "object",
                            "properties": {
                              "equipmentUpdateDeploy": {
                                "title": "EquipmentUpdateDeploy",
                                "example": "M",
                                "type": "string",
                                "enum": [
                                  "M",
                                  "D",
                                  "N"
                                ]
                              },
                              "terminalBuildFlag": {
                                "example": true,
                                "type": "boolean"
                              },
                              "frontEndBuildFlag": {
                                "example": true,
                                "type": "boolean"
                              },
                              "sicMerchantFlag": {
                                "example": false,
                                "type": "boolean"
                              },
                              "specialInstructions": {
                                "description": "Special instructions for terminal deployment.",
                                "example": "Retail - H52460A (SP)",
                                "type": "string",
                                "maxLength": 255
                              }
                            },
                            "required": [
                              "equipmentUpdateDeploy"
                            ]
                          }
                        },
                        "required": [
                          "terminalConfigs",
                          "products"
                        ]
                      }
                    }
                  }
                }
        '0':
          description: Default errors
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "examples": [
                    {
                      "Id": "400 Bad Request",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                      "ExternalValue": null,
                      "Description": "Bad Request"
                    },
                    {
                      "Id": "401 Unauthorized",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "403 Forbidden",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "404 Not Found",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "412 Pre Condition",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "415 Bad content Type",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "500 Server Error",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "httpStatusCode": 400,
                    "httpStatusMessage": "BAD_REQUEST",
                    "errors": [
                      {
                        "errorCode": "PARAMETER_VALIDATION_ERROR",
                        "errorMessage": "PartnerId is missing in header.",
                        "target": "partnerId"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "httpStatusCode": {
                      "example": 404,
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpStatusMessage": {
                      "example": "STATUS-MESSAGE",
                      "type": "string"
                    },
                    "errors": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "Error",
                        "title": "Error",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "ERROR_CODE",
                            "type": "string"
                          },
                          "errorMessage": {
                            "example": "Error message here.",
                            "type": "string"
                          },
                          "target": {
                            "example": "Target",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
    put:
      description: Updates terminal configurations.
      headers:
        externalRefId:
          description: The externalRefId returned from POST /applications call.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: true
          displayName: externalRefId
        v-correlation-id:
          description: Unique transaction Id. Will be generated if not provided and returned in response headers.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: false
          displayName: v-correlation-id
        Content-Type:
          description: Indicates the media type of the request-body. Accepts application/json.
          example: application/json
          default: application/json
          required: false
          displayName: Content-Type
          enum:
          - application/json
        locationId:
          description: The locationId returned from POST /locations call.
          type: string
          required: false
          displayName: locationId
        merchantId:
          description: The merchantId returned from POST /merchants call.
          type: string
          required: false
          displayName: merchantId
      body:
        application/json:
          schema: |
            {
              "id": "EquipmentSetup",
              "title": "EquipmentSetup",
              "examples": [
                {
                  "Id": "Partners - Standalone Terminals",
                  "Name": null,
                  "Value": "{\"shippingOption\":\"next day\",\"terminals\":[{\"terminalConfigs\":{\"requestId\":\"41231\",\"terminalId\":\"67\",\"terminalModel\":\"VAR - Xpient Solutions\",\"price\":187.99,\"quantity\":1,\"logicalApplicationId\":\"194\",\"accessMethod\":\"SSL\",\"paymentMethod\":\"PURCHASE / SALE\",\"environmentName\":\"Restaurant\"},\"products\":[{\"productId\":\"1\",\"productName\":\"Credit\"}]}]}",
                  "ExternalValue": null,
                  "Description": null
                }
              ],
              "example": {
                "shippingOption": "next day",
                "terminals": [
                  {
                    "terminalConfigs": {
                      "requestId": "41231",
                      "terminalId": "67",
                      "terminalModel": "VAR - Xpient Solutions",
                      "price": 187.99,
                      "quantity": 1,
                      "logicalApplicationId": "194",
                      "accessMethod": "SSL",
                      "paymentMethod": "PURCHASE / SALE",
                      "environmentName": "Restaurant"
                    },
                    "products": [
                      {
                        "productId": "1",
                        "productName": "Credit"
                      }
                    ]
                  }
                ]
              },
              "type": "object",
              "properties": {
                "shippingOption": {
                  "title": "ShippingOption",
                  "description": "The speed you would like the equipment to be shipped.",
                  "example": "next day",
                  "type": "string",
                  "enum": [
                    "ground",
                    "next day",
                    "2nd day"
                  ]
                },
                "terminals": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "id": "Terminal",
                    "title": "Terminal",
                    "type": "object",
                    "properties": {
                      "terminalConfigs": {
                        "id": "TerminalConfig",
                        "title": "TerminalConfig",
                        "type": "object",
                        "properties": {
                          "terminalId": {
                            "description": "Terminal ID number.",
                            "example": "iCT220",
                            "type": "string"
                          },
                          "price": {
                            "description": "Terminal price",
                            "example": 187.99,
                            "type": "number"
                          },
                          "quantity": {
                            "example": 1,
                            "type": "integer",
                            "format": "int32"
                          },
                          "logicalApplicationId": {
                            "description": "Logical application ID.",
                            "example": "MONE510",
                            "type": "string"
                          },
                          "accessMethod": {
                            "description": "Methods of terminal access.",
                            "example": "SSL",
                            "type": "string"
                          },
                          "paymentMethod": {
                            "title": "PaymentMethod",
                            "description": "Payment method for the selected terminal.",
                            "example": "PURCHASE / SALE",
                            "type": "string",
                            "enum": [
                              "PURCHASE / SALE",
                              "REPROGRAM / OWN",
                              "MONTH-TO-MONTH RENTAL",
                              "LEASE"
                            ]
                          },
                          "environmentName": {
                            "description": "Environment name",
                            "example": "Retail",
                            "type": "string"
                          },
                          "requestId": {
                            "description": "Partner assigned unique request ID for terminal setup.",
                            "example": "41231",
                            "type": "string"
                          },
                          "terminalModel": {
                            "description": "The model name of the terminal in use.",
                            "example": "Ingenico iCT220 CTLS 3.X Dial",
                            "type": "string"
                          },
                          "isVar": {
                            "description": "The value added reseller. Default value is false.",
                            "example": false,
                            "type": "boolean",
                            "default": false
                          },
                          "emvCapable": {
                            "description": "Is it EMV capabale?",
                            "example": true,
                            "type": "boolean",
                            "default": false
                          },
                          "leaseId": {
                            "description": "Lease ID. Required when PaymentMethod is selected as lease.",
                            "example": "12",
                            "type": "string"
                          },
                          "leaseTermLength": {
                            "title": "LeaseTermLength",
                            "description": "Lease term for the peripheral",
                            "example": "24",
                            "type": "string",
                            "enum": [
                              "24",
                              "36",
                              "48",
                              "60"
                            ]
                          },
                          "terminalSequenceNumber": {
                            "description": "Terminal sequence number. If not sent, the API will autogenerate a number.",
                            "example": "14",
                            "type": "string",
                            "pattern": "^[0-9]"
                          },
                          "specialCustomizations": {
                            "description": "Any customization request for a terminal configuration.",
                            "example": "Mulitple merchant setup is Yes",
                            "type": "string",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "terminalId",
                          "price",
                          "quantity",
                          "logicalApplicationId",
                          "accessMethod",
                          "paymentMethod",
                          "environmentName"
                        ]
                      },
                      "products": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "Product",
                          "title": "Product",
                          "type": "object",
                          "properties": {
                            "productId": {
                              "description": "Product ID is populated internally.",
                              "example": "1",
                              "type": "string"
                            },
                            "productName": {
                              "description": "Payment method associated with the internally-populated ID.",
                              "example": "Debit",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "customizations": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "TerminalCustomization",
                          "title": "TerminalCustomization",
                          "type": "object",
                          "properties": {
                            "customizationId": {
                              "description": "Customization ID is internally populated from a master list.",
                              "example": "10",
                              "type": "string"
                            },
                            "customizationName": {
                              "example": "Auto-Close Time",
                              "type": "string"
                            },
                            "customizationFieldValue": {
                              "example": "N",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "peripherals": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "Peripheral",
                          "title": "Peripheral",
                          "type": "object",
                          "properties": {
                            "peripheralId": {
                              "description": "Peripheral IDs are internally populated.",
                              "example": "231",
                              "type": "string"
                            },
                            "peripheralType": {
                              "description": "Peripheral type",
                              "example": "PPAD",
                              "type": "string"
                            },
                            "model": {
                              "example": "Magtek Check Reader",
                              "type": "string"
                            },
                            "leaseId": {
                              "description": "Lease ID for the peripheral",
                              "example": "18",
                              "type": "string"
                            },
                            "leaseTermLength": {
                              "$ref": "TerminalConfig#/properties/leaseTermLength"
                            },
                            "paymentMethod": {
                              "title": "PaymentMethod1",
                              "description": "Payment method for the selected peripheral.",
                              "example": "PURCHASE / SALE",
                              "type": "string",
                              "enum": [
                                "PURCHASE / SALE",
                                "REPROGRAM / OWN",
                                "MONTH-TO-MONTH RENTAL",
                                "LEASE"
                              ]
                            },
                            "amount": {
                              "description": "\"Payment Amount for the peripheral. Valid values are 0.00\n  - 9999999999.99.\"",
                              "example": "220.21",
                              "type": "string",
                              "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
                            },
                            "paymentConfirmationNumber": {
                              "description": "Payment confirmation number for the peripheral.",
                              "example": "123456",
                              "type": "string",
                              "pattern": "[0-9a-zA-Z]{6}|"
                            }
                          }
                        }
                      },
                      "vendors": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "PaymentApplicationVendor",
                          "title": "PaymentApplicationVendor",
                          "description": "A payment application is installed software developed for processing various payments types: Credit, Debit, Gift, Checks, etc. and can be integrated with a POS system or used in a standalone manner.",
                          "type": "object",
                          "properties": {
                            "paymentApplicationId": {
                              "description": "Payment application ID",
                              "example": "9",
                              "type": "string"
                            },
                            "paymentApplicationName": {
                              "example": "PurchaseExpress",
                              "type": "string"
                            },
                            "vendorId": {
                              "description": "Vendor ID for the payment application.",
                              "example": "4",
                              "type": "string"
                            },
                            "version": {
                              "description": "Payment application version.",
                              "example": "1",
                              "type": "string"
                            },
                            "reseller": {
                              "description": "Reseller",
                              "example": "Agilysys Inc",
                              "type": "string"
                            },
                            "lastUpgradeDate": {
                              "description": "Last date payment application was upgraded.",
                              "example": "2012-02-18T00:00:00Z",
                              "type": "string",
                              "format": "date-time"
                            },
                            "notes": {
                              "description": "Custom notes can go here.",
                              "example": "Paymetric Gateway v3",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "gateways": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "Gateway",
                          "title": "Gateway",
                          "description": "A gateway is a hosted payment processing application provided by a service provider and accessed through an internet connection.",
                          "type": "object",
                          "properties": {
                            "gatewayId": {
                              "description": "Internally-generated gateway ID.",
                              "example": "15",
                              "type": "string"
                            },
                            "gatewayName": {
                              "example": "Paymetric Gateway",
                              "type": "string"
                            },
                            "notes": {
                              "description": "Add any custom notes here.",
                              "example": "Paymetric Gateway v3",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "supply": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "TerminalSupply",
                          "title": "TerminalSupply",
                          "type": "object",
                          "properties": {
                            "supplyType": {
                              "type": "string"
                            },
                            "name": {
                              "description": "Supply name",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Supply quantity",
                              "example": 2,
                              "type": "integer",
                              "format": "int32"
                            },
                            "total": {
                              "description": "Total Supplies. Valid values are 0.00\n  - 9999999999.99.\"",
                              "example": "220.21",
                              "type": "string",
                              "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
                            }
                          },
                          "required": [
                            "supplyType"
                          ]
                        }
                      },
                      "deployment": {
                        "id": "TerminalDeployment",
                        "title": "TerminalDeployment",
                        "type": "object",
                        "properties": {
                          "equipmentUpdateDeploy": {
                            "title": "EquipmentUpdateDeploy",
                            "example": "M",
                            "type": "string",
                            "enum": [
                              "M",
                              "D",
                              "N"
                            ]
                          },
                          "terminalBuildFlag": {
                            "example": true,
                            "type": "boolean"
                          },
                          "frontEndBuildFlag": {
                            "example": true,
                            "type": "boolean"
                          },
                          "sicMerchantFlag": {
                            "example": false,
                            "type": "boolean"
                          },
                          "specialInstructions": {
                            "description": "Special instructions for terminal deployment.",
                            "example": "Retail - H52460A (SP)",
                            "type": "string",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "equipmentUpdateDeploy"
                        ]
                      }
                    },
                    "required": [
                      "terminalConfigs",
                      "products"
                    ]
                  }
                }
              }
            }
          example: '{"shippingOption":"next day","terminals":[{"terminalConfigs":{"requestId":"41231","terminalId":"67","terminalModel":"VAR - Xpient Solutions","price":187.99,"quantity":1,"logicalApplicationId":"194","accessMethod":"SSL","paymentMethod":"PURCHASE / SALE","environmentName":"Restaurant"},"products":[{"productId":"1","productName":"Credit"}]}]}'
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              required: false
        '0':
          description: Default errors
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "examples": [
                    {
                      "Id": "400 Bad Request",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                      "ExternalValue": null,
                      "Description": "Bad Request"
                    },
                    {
                      "Id": "401 Unauthorized",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "403 Forbidden",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "404 Not Found",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "412 Pre Condition",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "415 Bad content Type",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "500 Server Error",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "httpStatusCode": 400,
                    "httpStatusMessage": "BAD_REQUEST",
                    "errors": [
                      {
                        "errorCode": "PARAMETER_VALIDATION_ERROR",
                        "errorMessage": "PartnerId is missing in header.",
                        "target": "partnerId"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "httpStatusCode": {
                      "example": 404,
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpStatusMessage": {
                      "example": "STATUS-MESSAGE",
                      "type": "string"
                    },
                    "errors": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "Error",
                        "title": "Error",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "ERROR_CODE",
                            "type": "string"
                          },
                          "errorMessage": {
                            "example": "Error message here.",
                            "type": "string"
                          },
                          "target": {
                            "example": "Target",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
    post:
      description: Sets up terminal configurations.
      headers:
        externalRefId:
          description: The externalRefId returned from POST /applications call.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: true
          displayName: externalRefId
        v-correlation-id:
          description: Unique transaction Id. Will be generated if not provided and returned in response headers.
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          required: false
          displayName: v-correlation-id
        Content-Type:
          description: Indicates the media type of the request-body. Accepts application/json.
          example: application/json
          default: application/json
          required: false
          displayName: Content-Type
          enum:
          - application/json
        locationId:
          description: The locationId returned from POST /locations call.
          type: string
          required: false
          displayName: locationId
        merchantId:
          description: The merchantId returned from POST /merchants call.
          type: string
          required: false
          displayName: merchantId
      body:
        application/json:
          schema: |
            {
              "id": "EquipmentSetup",
              "title": "EquipmentSetup",
              "examples": [
                {
                  "Id": "Partners - Standalone Terminals",
                  "Name": null,
                  "Value": "{\"shippingOption\":\"next day\",\"terminals\":[{\"terminalConfigs\":{\"requestId\":\"41231\",\"terminalId\":\"67\",\"terminalModel\":\"VAR - Xpient Solutions\",\"price\":187.99,\"quantity\":1,\"logicalApplicationId\":\"194\",\"accessMethod\":\"SSL\",\"paymentMethod\":\"PURCHASE / SALE\",\"environmentName\":\"Restaurant\"},\"products\":[{\"productId\":\"1\",\"productName\":\"Credit\"}]}]}",
                  "ExternalValue": null,
                  "Description": null
                }
              ],
              "example": {
                "shippingOption": "next day",
                "terminals": [
                  {
                    "terminalConfigs": {
                      "requestId": "41231",
                      "terminalId": "67",
                      "terminalModel": "VAR - Xpient Solutions",
                      "price": 187.99,
                      "quantity": 1,
                      "logicalApplicationId": "194",
                      "accessMethod": "SSL",
                      "paymentMethod": "PURCHASE / SALE",
                      "environmentName": "Restaurant"
                    },
                    "products": [
                      {
                        "productId": "1",
                        "productName": "Credit"
                      }
                    ]
                  }
                ]
              },
              "type": "object",
              "properties": {
                "shippingOption": {
                  "title": "ShippingOption",
                  "description": "The speed you would like the equipment to be shipped.",
                  "example": "next day",
                  "type": "string",
                  "enum": [
                    "ground",
                    "next day",
                    "2nd day"
                  ]
                },
                "terminals": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "id": "Terminal",
                    "title": "Terminal",
                    "type": "object",
                    "properties": {
                      "terminalConfigs": {
                        "id": "TerminalConfig",
                        "title": "TerminalConfig",
                        "type": "object",
                        "properties": {
                          "terminalId": {
                            "description": "Terminal ID number.",
                            "example": "iCT220",
                            "type": "string"
                          },
                          "price": {
                            "description": "Terminal price",
                            "example": 187.99,
                            "type": "number"
                          },
                          "quantity": {
                            "example": 1,
                            "type": "integer",
                            "format": "int32"
                          },
                          "logicalApplicationId": {
                            "description": "Logical application ID.",
                            "example": "MONE510",
                            "type": "string"
                          },
                          "accessMethod": {
                            "description": "Methods of terminal access.",
                            "example": "SSL",
                            "type": "string"
                          },
                          "paymentMethod": {
                            "title": "PaymentMethod",
                            "description": "Payment method for the selected terminal.",
                            "example": "PURCHASE / SALE",
                            "type": "string",
                            "enum": [
                              "PURCHASE / SALE",
                              "REPROGRAM / OWN",
                              "MONTH-TO-MONTH RENTAL",
                              "LEASE"
                            ]
                          },
                          "environmentName": {
                            "description": "Environment name",
                            "example": "Retail",
                            "type": "string"
                          },
                          "requestId": {
                            "description": "Partner assigned unique request ID for terminal setup.",
                            "example": "41231",
                            "type": "string"
                          },
                          "terminalModel": {
                            "description": "The model name of the terminal in use.",
                            "example": "Ingenico iCT220 CTLS 3.X Dial",
                            "type": "string"
                          },
                          "isVar": {
                            "description": "The value added reseller. Default value is false.",
                            "example": false,
                            "type": "boolean",
                            "default": false
                          },
                          "emvCapable": {
                            "description": "Is it EMV capabale?",
                            "example": true,
                            "type": "boolean",
                            "default": false
                          },
                          "leaseId": {
                            "description": "Lease ID. Required when PaymentMethod is selected as lease.",
                            "example": "12",
                            "type": "string"
                          },
                          "leaseTermLength": {
                            "title": "LeaseTermLength",
                            "description": "Lease term for the peripheral",
                            "example": "24",
                            "type": "string",
                            "enum": [
                              "24",
                              "36",
                              "48",
                              "60"
                            ]
                          },
                          "terminalSequenceNumber": {
                            "description": "Terminal sequence number. If not sent, the API will autogenerate a number.",
                            "example": "14",
                            "type": "string",
                            "pattern": "^[0-9]"
                          },
                          "specialCustomizations": {
                            "description": "Any customization request for a terminal configuration.",
                            "example": "Mulitple merchant setup is Yes",
                            "type": "string",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "terminalId",
                          "price",
                          "quantity",
                          "logicalApplicationId",
                          "accessMethod",
                          "paymentMethod",
                          "environmentName"
                        ]
                      },
                      "products": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "Product",
                          "title": "Product",
                          "type": "object",
                          "properties": {
                            "productId": {
                              "description": "Product ID is populated internally.",
                              "example": "1",
                              "type": "string"
                            },
                            "productName": {
                              "description": "Payment method associated with the internally-populated ID.",
                              "example": "Debit",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "customizations": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "TerminalCustomization",
                          "title": "TerminalCustomization",
                          "type": "object",
                          "properties": {
                            "customizationId": {
                              "description": "Customization ID is internally populated from a master list.",
                              "example": "10",
                              "type": "string"
                            },
                            "customizationName": {
                              "example": "Auto-Close Time",
                              "type": "string"
                            },
                            "customizationFieldValue": {
                              "example": "N",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "peripherals": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "Peripheral",
                          "title": "Peripheral",
                          "type": "object",
                          "properties": {
                            "peripheralId": {
                              "description": "Peripheral IDs are internally populated.",
                              "example": "231",
                              "type": "string"
                            },
                            "peripheralType": {
                              "description": "Peripheral type",
                              "example": "PPAD",
                              "type": "string"
                            },
                            "model": {
                              "example": "Magtek Check Reader",
                              "type": "string"
                            },
                            "leaseId": {
                              "description": "Lease ID for the peripheral",
                              "example": "18",
                              "type": "string"
                            },
                            "leaseTermLength": {
                              "$ref": "TerminalConfig#/properties/leaseTermLength"
                            },
                            "paymentMethod": {
                              "title": "PaymentMethod1",
                              "description": "Payment method for the selected peripheral.",
                              "example": "PURCHASE / SALE",
                              "type": "string",
                              "enum": [
                                "PURCHASE / SALE",
                                "REPROGRAM / OWN",
                                "MONTH-TO-MONTH RENTAL",
                                "LEASE"
                              ]
                            },
                            "amount": {
                              "description": "\"Payment Amount for the peripheral. Valid values are 0.00\n  - 9999999999.99.\"",
                              "example": "220.21",
                              "type": "string",
                              "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
                            },
                            "paymentConfirmationNumber": {
                              "description": "Payment confirmation number for the peripheral.",
                              "example": "123456",
                              "type": "string",
                              "pattern": "[0-9a-zA-Z]{6}|"
                            }
                          }
                        }
                      },
                      "vendors": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "PaymentApplicationVendor",
                          "title": "PaymentApplicationVendor",
                          "description": "A payment application is installed software developed for processing various payments types: Credit, Debit, Gift, Checks, etc. and can be integrated with a POS system or used in a standalone manner.",
                          "type": "object",
                          "properties": {
                            "paymentApplicationId": {
                              "description": "Payment application ID",
                              "example": "9",
                              "type": "string"
                            },
                            "paymentApplicationName": {
                              "example": "PurchaseExpress",
                              "type": "string"
                            },
                            "vendorId": {
                              "description": "Vendor ID for the payment application.",
                              "example": "4",
                              "type": "string"
                            },
                            "version": {
                              "description": "Payment application version.",
                              "example": "1",
                              "type": "string"
                            },
                            "reseller": {
                              "description": "Reseller",
                              "example": "Agilysys Inc",
                              "type": "string"
                            },
                            "lastUpgradeDate": {
                              "description": "Last date payment application was upgraded.",
                              "example": "2012-02-18T00:00:00Z",
                              "type": "string",
                              "format": "date-time"
                            },
                            "notes": {
                              "description": "Custom notes can go here.",
                              "example": "Paymetric Gateway v3",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "gateways": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "Gateway",
                          "title": "Gateway",
                          "description": "A gateway is a hosted payment processing application provided by a service provider and accessed through an internet connection.",
                          "type": "object",
                          "properties": {
                            "gatewayId": {
                              "description": "Internally-generated gateway ID.",
                              "example": "15",
                              "type": "string"
                            },
                            "gatewayName": {
                              "example": "Paymetric Gateway",
                              "type": "string"
                            },
                            "notes": {
                              "description": "Add any custom notes here.",
                              "example": "Paymetric Gateway v3",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "supply": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "TerminalSupply",
                          "title": "TerminalSupply",
                          "type": "object",
                          "properties": {
                            "supplyType": {
                              "type": "string"
                            },
                            "name": {
                              "description": "Supply name",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Supply quantity",
                              "example": 2,
                              "type": "integer",
                              "format": "int32"
                            },
                            "total": {
                              "description": "Total Supplies. Valid values are 0.00\n  - 9999999999.99.\"",
                              "example": "220.21",
                              "type": "string",
                              "pattern": "(^\\d{1,10}([.]\\d{1,2})?)$"
                            }
                          },
                          "required": [
                            "supplyType"
                          ]
                        }
                      },
                      "deployment": {
                        "id": "TerminalDeployment",
                        "title": "TerminalDeployment",
                        "type": "object",
                        "properties": {
                          "equipmentUpdateDeploy": {
                            "title": "EquipmentUpdateDeploy",
                            "example": "M",
                            "type": "string",
                            "enum": [
                              "M",
                              "D",
                              "N"
                            ]
                          },
                          "terminalBuildFlag": {
                            "example": true,
                            "type": "boolean"
                          },
                          "frontEndBuildFlag": {
                            "example": true,
                            "type": "boolean"
                          },
                          "sicMerchantFlag": {
                            "example": false,
                            "type": "boolean"
                          },
                          "specialInstructions": {
                            "description": "Special instructions for terminal deployment.",
                            "example": "Retail - H52460A (SP)",
                            "type": "string",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "equipmentUpdateDeploy"
                        ]
                      }
                    },
                    "required": [
                      "terminalConfigs",
                      "products"
                    ]
                  }
                }
              }
            }
          example: '{"shippingOption":"next day","terminals":[{"terminalConfigs":{"requestId":"41231","terminalId":"67","terminalModel":"VAR - Xpient Solutions","price":187.99,"quantity":1,"logicalApplicationId":"194","accessMethod":"SSL","paymentMethod":"PURCHASE / SALE","environmentName":"Restaurant"},"products":[{"productId":"1","productName":"Credit"}]}]}'
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              required: false
        '0':
          description: Default errors
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "examples": [
                    {
                      "Id": "400 Bad Request",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":400,\"httpStatusMessage\":\"BAD_REQUEST\",\"errors\":[{\"errorCode\":\"PARAMETER_VALIDATION_ERROR\",\"errorMessage\":\"PartnerId is missing in header.\",\"target\":\"partnerId\"}]}",
                      "ExternalValue": null,
                      "Description": "Bad Request"
                    },
                    {
                      "Id": "401 Unauthorized",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":401,\"httpStatusMessage\":\"Invalid API Key\",\"errors\":[{\"errorCode\":\"INVALID_API_KEY\",\"errorMessage\":\"Invalid API key. Please ensure the key is accurate and authorization is included.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "403 Forbidden",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":403,\"httpStatusMessage\":\"AUTH-ERROR\",\"errors\":[{\"errorCode\":\"AUTH_ERROR\",\"errorMessage\":\"Invalid Authorization header. Please ensure the license token is valid and properly formatted.\",\"target\":\"Authorization\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "404 Not Found",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":404,\"httpStatusMessage\":\"STATUS-MESSAGE\",\"errors\":[{\"errorCode\":\"ERROR_CODE\",\"errorMessage\":\"Error message here.\",\"target\":\"Target\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "412 Pre Condition",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":412,\"httpStatusMessage\":\"PRECONDITION_FAILED\",\"errors\":[{\"errorCode\":\"ERROR_VALIDATION_REQUEST_PARAM\",\"errorMessage\":\"JSONMappingException: Cannot deserialize.\",\"target\":\"Bad Contract Request\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "415 Bad content Type",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":415,\"httpStatusMessage\":\"Bad-Content-Type\",\"errors\":[{\"errorCode\":\"BAD_CONTENT_TYPE\",\"errorMessage\":\"text/xml is not supported.\",\"target\":\"Bad Content Type\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "500 Server Error",
                      "Name": null,
                      "Value": "{\"httpStatusCode\":500,\"httpStatusMessage\":\"env:Client\",\"errors\":[{\"errorCode\":\"Internal Error\",\"errorMessage\":\"Internal Client Error\",\"target\":\"exampleTarget\"}]}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "httpStatusCode": 400,
                    "httpStatusMessage": "BAD_REQUEST",
                    "errors": [
                      {
                        "errorCode": "PARAMETER_VALIDATION_ERROR",
                        "errorMessage": "PartnerId is missing in header.",
                        "target": "partnerId"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "httpStatusCode": {
                      "example": 404,
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpStatusMessage": {
                      "example": "STATUS-MESSAGE",
                      "type": "string"
                    },
                    "errors": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "Error",
                        "title": "Error",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "ERROR_CODE",
                            "type": "string"
                          },
                          "errorMessage": {
                            "example": "Error message here.",
                            "type": "string"
                          },
                          "target": {
                            "example": "Target",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"httpStatusCode":400,"httpStatusMessage":"BAD_REQUEST","errors":[{"errorCode":"PARAMETER_VALIDATION_ERROR","errorMessage":"PartnerId is missing in header.","target":"partnerId"}]}'
