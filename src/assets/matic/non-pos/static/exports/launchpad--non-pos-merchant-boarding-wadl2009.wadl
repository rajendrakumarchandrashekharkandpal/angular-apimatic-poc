<?xml version="1.0" encoding="utf-8"?>
<application xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:schemas="https://apis.cert.worldpay.com/merchant-boarding/v2/schemas" xmlns="http://wadl.dev.java.net/2009/02">
  <doc title="Launchpad: Non-POS Merchant Boarding" xml:lang="en">The Launchpads Merchant Boarding API allows Worldpay partners to onboard merchants to Worldpay's Payments Platform. Please see the Getting Started page for more information. &lt;/br&gt; &lt;/br&gt; To contact our certifications team, please email &lt;a href="mailto:Certification2@fisglobal.com"&gt;Certification2@fisglobal.com&lt;/a&gt;.   &lt;/br&gt; To contact the product team, please email &lt;a href="mailto:APICustomerIntegration@fisglobal.com"&gt;APICustomerIntegration@fisglobal.com&lt;/a&gt;.
</doc>
  <grammars>
    <xs:schema xmlns:tns="https://apis.cert.worldpay.com/merchant-boarding/v2/schemas" targetNamespace="https://apis.cert.worldpay.com/merchant-boarding/v2/schemas" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="Schema" type="schemas:Schema" />
      <xs:element name="ExistingApplication" type="schemas:ExistingApplication" />
      <xs:element name="BusinessInfo" type="schemas:BusinessInfo" />
      <xs:element name="TransactionInfo" type="schemas:TransactionInfo" />
      <xs:element name="Owner" type="schemas:Owner" />
      <xs:element name="PhoneType" type="schemas:PhoneType" />
      <xs:element name="AlternatePhoneType" type="schemas:AlternatePhoneType" />
      <xs:element name="State" type="schemas:State" />
      <xs:element name="Country" type="schemas:Country" />
      <xs:element name="Identification" type="schemas:Identification" />
      <xs:element name="Guarantor" type="schemas:Guarantor" />
      <xs:element name="AuthorizedSigner" type="schemas:AuthorizedSigner" />
      <xs:element name="RoleName" type="schemas:RoleName" />
      <xs:element name="SigningExperience" type="schemas:SigningExperience" />
      <xs:element name="Contact" type="schemas:Contact" />
      <xs:element name="Address" type="schemas:Address" />
      <xs:element name="AddressType" type="schemas:AddressType" />
      <xs:element name="BankAccount" type="schemas:BankAccount" />
      <xs:element name="SalesAgent" type="schemas:SalesAgent" />
      <xs:element name="InstallationContact" type="schemas:InstallationContact" />
      <xs:element name="ErrorResponse" type="schemas:ErrorResponse" />
      <xs:element name="Error" type="schemas:Error" />
      <xs:element name="ExistingApplication_1" type="schemas:ExistingApplication_1" />
      <xs:element name="BusinessInfo_1" type="schemas:BusinessInfo_1" />
      <xs:element name="TransactionInfo_1" type="schemas:TransactionInfo_1" />
      <xs:element name="Owner_1" type="schemas:Owner_1" />
      <xs:element name="State_1" type="schemas:State_1" />
      <xs:element name="Guarantor_1" type="schemas:Guarantor_1" />
      <xs:element name="AuthorizedSigner_1" type="schemas:AuthorizedSigner_1" />
      <xs:element name="RoleName_1" type="schemas:RoleName_1" />
      <xs:element name="Contact_1" type="schemas:Contact_1" />
      <xs:element name="Address_1" type="schemas:Address_1" />
      <xs:element name="BankAccount_1" type="schemas:BankAccount_1" />
      <xs:element name="AdvancedSettlement_inner" type="schemas:AdvancedSettlement_inner" />
      <xs:element name="SalesAgent_1" type="schemas:SalesAgent_1" />
      <xs:element name="Application" type="schemas:Application" />
      <xs:element name="AdditionalInformationObject" type="schemas:AdditionalInformationObject" />
      <xs:element name="ApplicationResponse" type="schemas:ApplicationResponse" />
      <xs:element name="AdditionalConfigurationsResponse" type="schemas:AdditionalConfigurationsResponse" />
      <xs:element name="AdditionalConfigurationCustomization" type="schemas:AdditionalConfigurationCustomization" />
      <xs:element name="CustomizationCodeDetails" type="schemas:CustomizationCodeDetails" />
      <xs:element name="AdditionalConfigurationPeripheral" type="schemas:AdditionalConfigurationPeripheral" />
      <xs:element name="EquipmentSetup" type="schemas:EquipmentSetup" />
      <xs:element name="Terminal" type="schemas:Terminal" />
      <xs:element name="TerminalConfig" type="schemas:TerminalConfig" />
      <xs:element name="TerminalCustomization" type="schemas:TerminalCustomization" />
      <xs:element name="Product" type="schemas:Product" />
      <xs:element name="Peripheral" type="schemas:Peripheral" />
      <xs:element name="PaymentApplicationVendor" type="schemas:PaymentApplicationVendor" />
      <xs:element name="Gateway" type="schemas:Gateway" />
      <xs:element name="TerminalSupply" type="schemas:TerminalSupply" />
      <xs:element name="TerminalDeployment" type="schemas:TerminalDeployment" />
      <xs:element name="ApplicationStatus" type="schemas:ApplicationStatus" />
      <xs:element name="StatusHistoryResponse" type="schemas:StatusHistoryResponse" />
      <xs:element name="StatusHistory" type="schemas:StatusHistory" />
      <xs:element name="SignerStatus" type="schemas:SignerStatus" />
      <xs:element name="AuthSigners" type="schemas:AuthSigners" />
      <xs:element name="DocumentLink" type="schemas:DocumentLink" />
      <xs:element name="DocuSignLink" type="schemas:DocuSignLink" />
      <xs:element name="inline_response_200" type="schemas:inline_response_200" />
      <xs:element name="inline_response_200_1" type="schemas:inline_response_200_1" />
      <xs:element name="inline_response_200_equipment" type="schemas:inline_response_200_equipment" />
      <xs:element name="AcceptChargebacks" type="schemas:AcceptChargebacks" />
      <xs:element name="AcceptCreditCards" type="schemas:AcceptCreditCards" />
      <xs:element name="AchType" type="schemas:AchType" />
      <xs:element name="ActiveMonth" type="schemas:ActiveMonth" />
      <xs:element name="Content-Type" type="schemas:Content-Type" />
      <xs:element name="ContractStatus" type="schemas:ContractStatus" />
      <xs:element name="DdaType" type="schemas:DdaType" />
      <xs:element name="EquipmentUpdateDeploy" type="schemas:EquipmentUpdateDeploy" />
      <xs:element name="IdType" type="schemas:IdType" />
      <xs:element name="IssuedState" type="schemas:IssuedState" />
      <xs:element name="Key" type="schemas:Key" />
      <xs:element name="LeaseTermLength" type="schemas:LeaseTermLength" />
      <xs:element name="OwnershipType" type="schemas:OwnershipType" />
      <xs:element name="PaymentAcceptanceMethod" type="schemas:PaymentAcceptanceMethod" />
      <xs:element name="PaymentMethod" type="schemas:PaymentMethod" />
      <xs:element name="PaymentMethod1" type="schemas:PaymentMethod1" />
      <xs:element name="Pciadc" type="schemas:Pciadc" />
      <xs:element name="PcidssValidated" type="schemas:PcidssValidated" />
      <xs:element name="ReturnPolicy" type="schemas:ReturnPolicy" />
      <xs:element name="Seasonal" type="schemas:Seasonal" />
      <xs:element name="SettlementCategory" type="schemas:SettlementCategory" />
      <xs:element name="ShippingOption" type="schemas:ShippingOption" />
      <xs:element name="SurroundingArea" type="schemas:SurroundingArea" />
      <xs:element name="TaxExempt" type="schemas:TaxExempt" />
      <xs:element name="Type" type="schemas:Type" />
      <xs:element name="Type1" type="schemas:Type1" />
      <xs:element name="Type3" type="schemas:Type3" />
      <xs:element name="Type4" type="schemas:Type4" />
      <xs:element name="Warranty" type="schemas:Warranty" />
      <xs:element name="FetchApplication200_Response0" type="schemas:FetchApplication200_Response0" />
      <xs:element name="FetchApplication0_Response0" type="schemas:FetchApplication0_Response0" />
      <xs:element name="ExisitingApplication_Request" type="schemas:ExisitingApplication_Request" />
      <xs:element name="ExisitingApplication0_Response0" type="schemas:ExisitingApplication0_Response0" />
      <xs:element name="NewApplication_Request" type="schemas:NewApplication_Request" />
      <xs:element name="NewApplication201_Response0" type="schemas:NewApplication201_Response0" />
      <xs:element name="NewApplication0_Response0" type="schemas:NewApplication0_Response0" />
      <xs:element name="GetEquipmentSupported200_Response0" type="schemas:GetEquipmentSupported200_Response0" />
      <xs:element name="GetEquipmentSupported0_Response0" type="schemas:GetEquipmentSupported0_Response0" />
      <xs:element name="GetAdditionalConfigurations200_Response0" type="schemas:GetAdditionalConfigurations200_Response0" />
      <xs:element name="GetAdditionalConfigurations0_Response0" type="schemas:GetAdditionalConfigurations0_Response0" />
      <xs:element name="GetTerminalInfo200_Response0" type="schemas:GetTerminalInfo200_Response0" />
      <xs:element name="GetTerminalInfo0_Response0" type="schemas:GetTerminalInfo0_Response0" />
      <xs:element name="UpdateTerminal_Request" type="schemas:UpdateTerminal_Request" />
      <xs:element name="UpdateTerminal0_Response0" type="schemas:UpdateTerminal0_Response0" />
      <xs:element name="ConfigStandaloneTerminal_Request" type="schemas:ConfigStandaloneTerminal_Request" />
      <xs:element name="ConfigStandaloneTerminal0_Response0" type="schemas:ConfigStandaloneTerminal0_Response0" />
      <xs:element name="validateBoard0_Response0" type="schemas:validateBoard0_Response0" />
      <xs:element name="InititateBoard0_Response0" type="schemas:InititateBoard0_Response0" />
      <xs:element name="GetApplicationStatus200_Response0" type="schemas:GetApplicationStatus200_Response0" />
      <xs:element name="GetApplicationStatus0_Response0" type="schemas:GetApplicationStatus0_Response0" />
      <xs:element name="fetchApplicationStatusHistory200_Response0" type="schemas:fetchApplicationStatusHistory200_Response0" />
      <xs:element name="fetchApplicationStatusHistory0_Response0" type="schemas:fetchApplicationStatusHistory0_Response0" />
      <xs:element name="fetchSignerStatus200_Response0" type="schemas:fetchSignerStatus200_Response0" />
      <xs:element name="fetchSignerStatus0_Response0" type="schemas:fetchSignerStatus0_Response0" />
      <xs:element name="response200" type="xs:anyType">
        <xs:annotation>
          <xs:documentation>Response is a PDF file.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GetContract0_Response0" type="schemas:GetContract0_Response0" />
      <xs:element name="DocusignLink_Request" type="schemas:DocusignLink_Request" />
      <xs:element name="DocusignLink200_Response0" type="schemas:DocusignLink200_Response0" />
      <xs:element name="DocusignLink0_Response0" type="schemas:DocusignLink0_Response0" />
      <xs:element name="Gethealth200_Response0" type="schemas:Gethealth200_Response0" />
      <xs:complexType name="Schema">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExistingApplication">
        <xs:sequence>
          <xs:element minOccurs="1" name="externalRefId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})" />
                <xs:maxLength value="36" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="leadSource">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The source of a lead.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="12" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="businessInfo" type="schemas:BusinessInfo" />
          <xs:element minOccurs="1" name="transactionInfo" type="schemas:TransactionInfo" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="owners" type="schemas:Owner" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="guarantors" type="schemas:Guarantor">
            <xs:annotation>
              <xs:documentation>Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="authorizedSigners" type="schemas:AuthorizedSigner" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="contacts" type="schemas:Contact" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="addresses" type="schemas:Address" />
          <xs:element minOccurs="0" name="bankAccount" type="schemas:BankAccount" />
          <xs:element minOccurs="0" name="salesAgent" type="schemas:SalesAgent">
            <xs:annotation>
              <xs:documentation>The agent who is submitting the deal.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="installationContact" type="schemas:InstallationContact">
            <xs:annotation>
              <xs:documentation>The Technical Agent who is going to do setup.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="routeToSalesRep" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Used to route a application to a worldpay or partner sales rep. By default the API is configured to route to a Worldpay sales rep. If you would like to route to partner (Launchpad UI) please work with your implementation consultant.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BusinessInfo">
        <xs:sequence>
          <xs:element minOccurs="1" name="dbaName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The merchant name they do business as.  Generally with what their customers know the business.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="legalName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Business Legal Name as filed with the IRS.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ownershipType" type="schemas:OwnershipType">
            <xs:annotation>
              <xs:documentation>Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="mccCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="4" />
                <xs:minLength value="4" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessEstablishedDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date (CCYY-MM-DD) on which the merchant's business was established.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="websiteUrl">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The URL of the merchant's website.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="80" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="numberOfLocation" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of current locations.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="federalTaxId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{9}$" />
                <xs:maxLength value="9" />
                <xs:minLength value="9" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="paymentAcceptanceMethod" type="schemas:PaymentAcceptanceMethod">
            <xs:annotation>
              <xs:documentation>The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="No" name="pciadc" type="schemas:Pciadc">
            <xs:annotation>
              <xs:documentation>Indication if the merchant has had an account data compromise.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="Yes" name="pcidssValidated" type="schemas:PcidssValidated">
            <xs:annotation>
              <xs:documentation>Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="surroundingArea" type="schemas:SurroundingArea">
            <xs:annotation>
              <xs:documentation>Type of area surroundning the business.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="productServiceSold">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Type of goods or services sold.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="(^[-a-zA-Z0-9_ &amp;()*+,./:;=_'‘]{1,40}$)" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ownAddYears">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Years the business has been operating in their current location.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="lengthOfContract">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Inital contract term in months.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="([0-9]{3})$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="seasonal" type="schemas:Seasonal">
            <xs:annotation>
              <xs:documentation>Does the business operate seasonally?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="activeMonths" type="schemas:ActiveMonth">
            <xs:annotation>
              <xs:documentation>The months during which the business is actively operating.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="warranty" type="schemas:Warranty">
            <xs:annotation>
              <xs:documentation>Does the business offer warranties, dues, subscriptions, memberships, or other extended services?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="returnPolicy" type="schemas:ReturnPolicy">
            <xs:annotation>
              <xs:documentation>The business's return policy.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="taxExempt" type="schemas:TaxExempt" />
          <xs:element minOccurs="0" name="acceptCreditCards" type="schemas:AcceptCreditCards">
            <xs:annotation>
              <xs:documentation>Does the business accept credit cards?</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionInfo">
        <xs:sequence>
          <xs:element minOccurs="1" name="annualSalesVolume">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected annual sales volume.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="9999999999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="percentRetailSwipedTransactions">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected Percentage of daily card-present transactions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="averageTicket">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Average ticket dollar amount.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="9999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="highestTicket">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Highest ticket dollar amount.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="9999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="currentProcessor" type="xs:string">
            <xs:annotation>
              <xs:documentation>the current processor</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="acceptChargebacks" type="schemas:AcceptChargebacks">
            <xs:annotation>
              <xs:documentation>Do you have more than 25 chargeback accepted in the last 12 months?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="chargebackPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected chargeback percentage.

```Required when acceptChargebacks is 'Yes'```

```Optional when acceptChargebacks is null or 'No'.```</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="returnPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected return percent of  goods sold</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="cardNotPresentPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Percent of card not present transactions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessToBusinessPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Percent of business-to-business transactions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="internetTransactionPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Percent of internet transactions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="annualCreditSalesVolume">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected annual credit card sales volume.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="999999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="annualDebitSalesVolume">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected annual debit card sales volume.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="999999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="annualAmexVolume">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="999999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="amexAverageTicket">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>AverageTicket dollar amount for Amex.
 ```This field is required when you opt-in for Amex```</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="9999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="averageNumberofDays">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Average number of days from when cardholder is charged &amp; when products or services are received IN FULL by cardholder.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Owner">
        <xs:annotation>
          <xs:documentation>A Control Owner is required for the following ownership types &gt; LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="type" type="schemas:Type">
            <xs:annotation>
              <xs:documentation>The Owner Type. Please note the above Ownership Types where a Control Owner is required.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Required for AMEX acquired merchants otherwise optional.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="30" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>First name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="middleInitial">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Middle initial.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="1" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Last name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="phoneNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneNumberExt">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Phone number extension. Up to 8 digits of the format 12345678.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{1,8}$" />
                <xs:maxLength value="8" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneType" type="schemas:PhoneType">
            <xs:annotation>
              <xs:documentation>Phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhone">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit alternate phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhoneType" type="schemas:AlternatePhoneType">
            <xs:annotation>
              <xs:documentation>Alternate phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="faxNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit fax number of the format 5131234567</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Email address of the contact. Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ownershipPercentage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Ownership stake percentage.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ssn">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Social security number. Do not include dashes.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{9}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="dob" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date of Birth (CCYY-MM-DD). Must be at least 18 years old.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="addressLine1">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 1. Field for house number, street and direction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="addressLine2">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 2. Field for apartment or suite numbers, etc.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="city">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="28" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="state" type="schemas:State">
            <xs:annotation>
              <xs:documentation>Valid US state, commonwealth, and territory codes are allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="United States" name="country" type="xs:string">
            <xs:annotation>
              <xs:documentation>Only United States is allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="postalCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code. The postal code must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="5" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="postalCodeExtension">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code extension.  The postal code extension must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="4" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="identification" type="schemas:Identification">
            <xs:annotation>
              <xs:documentation>Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PhoneType">
        <xs:annotation>
          <xs:documentation>Phone type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="mobile" />
          <xs:enumeration value="home" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AlternatePhoneType">
        <xs:annotation>
          <xs:documentation>Alternate phone type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="mobile" />
          <xs:enumeration value="home" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="State">
        <xs:annotation>
          <xs:documentation>Valid US state, commonwealth, and territory codes are allowed.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AK" />
          <xs:enumeration value="AL" />
          <xs:enumeration value="AR" />
          <xs:enumeration value="AS" />
          <xs:enumeration value="AZ" />
          <xs:enumeration value="CA" />
          <xs:enumeration value="CO" />
          <xs:enumeration value="CT" />
          <xs:enumeration value="DC" />
          <xs:enumeration value="DE" />
          <xs:enumeration value="FL" />
          <xs:enumeration value="FM" />
          <xs:enumeration value="GA" />
          <xs:enumeration value="GU" />
          <xs:enumeration value="HI" />
          <xs:enumeration value="IA" />
          <xs:enumeration value="ID" />
          <xs:enumeration value="IL" />
          <xs:enumeration value="IN" />
          <xs:enumeration value="KS" />
          <xs:enumeration value="KY" />
          <xs:enumeration value="LA" />
          <xs:enumeration value="MA" />
          <xs:enumeration value="MD" />
          <xs:enumeration value="ME" />
          <xs:enumeration value="MH" />
          <xs:enumeration value="MI" />
          <xs:enumeration value="MN" />
          <xs:enumeration value="MO" />
          <xs:enumeration value="MP" />
          <xs:enumeration value="MS" />
          <xs:enumeration value="MT" />
          <xs:enumeration value="NC" />
          <xs:enumeration value="ND" />
          <xs:enumeration value="NE" />
          <xs:enumeration value="NH" />
          <xs:enumeration value="NJ" />
          <xs:enumeration value="NM" />
          <xs:enumeration value="NV" />
          <xs:enumeration value="NY" />
          <xs:enumeration value="OH" />
          <xs:enumeration value="OK" />
          <xs:enumeration value="OR" />
          <xs:enumeration value="PA" />
          <xs:enumeration value="PR" />
          <xs:enumeration value="PW" />
          <xs:enumeration value="RI" />
          <xs:enumeration value="SC" />
          <xs:enumeration value="SD" />
          <xs:enumeration value="TN" />
          <xs:enumeration value="TX" />
          <xs:enumeration value="UT" />
          <xs:enumeration value="VA" />
          <xs:enumeration value="VI" />
          <xs:enumeration value="VT" />
          <xs:enumeration value="WA" />
          <xs:enumeration value="WI" />
          <xs:enumeration value="WV" />
          <xs:enumeration value="WY" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Country">
        <xs:annotation>
          <xs:documentation>Only United States is allowed.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="United States" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Identification">
        <xs:sequence>
          <xs:element minOccurs="1" name="idType" type="schemas:IdType">
            <xs:annotation>
              <xs:documentation>Type of ID provided by the owner.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="idNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Owner's ID number.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="issuedCity">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>City in which ID was issued.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="28" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="issuedState">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Valid state code where ID was issued.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="schemas:IssuedState">
                <xs:maxLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="issuedCountry">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Country where ID was issued.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="dateIssued" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date ID was issued (CCYY-MM-DD).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="dateExpires" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date ID expires (CCYY-MM-DD).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Guarantor">
        <xs:sequence>
          <xs:element minOccurs="1" fixed="Guarantor 1 Contact" name="type" type="xs:string" />
          <xs:element minOccurs="0" name="title">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Required for AMEX acquired merchants otherwise optional.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="30" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>First name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="middleInitial">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Middle initial.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="1" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Last name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="phoneNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneNumberExt">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Phone number extension. Up to 8 digits of the format 12345678.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{1,8}$" />
                <xs:maxLength value="8" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneType" type="schemas:PhoneType">
            <xs:annotation>
              <xs:documentation>Phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhone">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit alternate phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhoneType" type="schemas:AlternatePhoneType">
            <xs:annotation>
              <xs:documentation>Alternate phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="faxNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit fax number of the format 5131234567</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Email address of the contact. Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ownershipPercentage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Ownership stake percentage.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ssn">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Social security number. Do not include dashes.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{9}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="dob" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date of Birth (CCYY-MM-DD). Must be at least 18 years old.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="addressLine1">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 1. Field for house number, street and direction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="addressLine2">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 2. Field for apartment or suite numbers, etc.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="city">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="28" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="state" type="schemas:State">
            <xs:annotation>
              <xs:documentation>Valid US state, commonwealth, and territory codes are allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="United States" name="country" type="xs:string">
            <xs:annotation>
              <xs:documentation>Only United States is allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="postalCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code. The postal code must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="5" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="postalCodeExtension">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code extension.  The postal code extension must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="4" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="identification" type="schemas:Identification">
            <xs:annotation>
              <xs:documentation>Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AuthorizedSigner">
        <xs:sequence>
          <xs:element minOccurs="1" name="roleName" type="schemas:RoleName">
            <xs:annotation>
              <xs:documentation>The role of the signer. Please note the below.

 1) Merchant role name is mandatory.
 2) Required fields indicated in schema are those required for all role names other than "SalesRep"
 3) The "SalesRep" role name only requires the following fields &gt; roleName, signingExperience, signingOrder, firstName, lastName, email
 4) The "Signer2" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="signingExperience" type="schemas:SigningExperience">
            <xs:annotation>
              <xs:documentation>Signing ceremony type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="signingOrder" type="xs:string">
            <xs:annotation>
              <xs:documentation>Define the signing order for multiple signers</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Required for AMEX acquired merchants otherwise optional.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="30" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>First name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="middleInitial">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Middle initial.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="1" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Last name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="phoneNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneNumberExt">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Phone number extension. Up to 8 digits of the format 12345678.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{1,8}$" />
                <xs:maxLength value="8" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneType" type="schemas:PhoneType">
            <xs:annotation>
              <xs:documentation>Phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhone">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit alternate phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhoneType" type="schemas:AlternatePhoneType">
            <xs:annotation>
              <xs:documentation>Alternate phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="faxNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit fax number of the format 5131234567</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Email address of the contact. Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ssn">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Social security number. Do not include dashes.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{9}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="dob" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date of Birth (CCYY-MM-DD). Must be at least 18 years old.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="addressLine1">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 1. Field for house number, street and direction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="addressLine2">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 2. Field for apartment or suite numbers, etc.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="city">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="28" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="state" type="schemas:State">
            <xs:annotation>
              <xs:documentation>Valid US state, commonwealth, and territory codes are allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="United States" name="country" type="xs:string">
            <xs:annotation>
              <xs:documentation>Only United States is allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="postalCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code. The postal code must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="5" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="postalCodeExtension">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code extension.  The postal code extension must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="4" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="identification" type="schemas:Identification">
            <xs:annotation>
              <xs:documentation>Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="RoleName">
        <xs:annotation>
          <xs:documentation>The role of the signer. Please note the below.

 1) Merchant role name is mandatory.
 2) Required fields indicated in schema are those required for all role names other than "SalesRep"
 3) The "SalesRep" role name only requires the following fields &gt; roleName, signingExperience, signingOrder, firstName, lastName, email
 4) The "Signer2" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="SalesRep" />
          <xs:enumeration value="Merchant" />
          <xs:enumeration value="Reviewer" />
          <xs:enumeration value="Signer2" />
          <xs:enumeration value="Signer3" />
          <xs:enumeration value="Signer4" />
          <xs:enumeration value="Signer5" />
          <xs:enumeration value="Signer6" />
          <xs:enumeration value="Signer7" />
          <xs:enumeration value="Signer8" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SigningExperience">
        <xs:annotation>
          <xs:documentation>Signing ceremony type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="embed" />
          <xs:enumeration value="email" />
          <xs:enumeration value="wet" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Contact">
        <xs:sequence>
          <xs:element minOccurs="1" name="type" type="schemas:Type1">
            <xs:annotation>
              <xs:documentation>Type of merchant contact.   
 1) Only primary contact
      is mandatory. May be the same as any owner contact information. 
 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  
 3) For all other contact types, firstName and lastName are mandatory during POST.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Required for AMEX acquired merchants otherwise optional.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="30" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>First name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="middleInitial">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Middle initial.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="1" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Last name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ssn">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Social security number. Do not include dashes.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{9}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="birthDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date of Birth (CCYY-MM-DD). Must be at least 18 years old.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="phoneNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneNumberExt">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Phone number extension. Up to 8 digits of the format 12345678.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{1,8}$" />
                <xs:maxLength value="8" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneType" type="schemas:PhoneType">
            <xs:annotation>
              <xs:documentation>Phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhone">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit alternate phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhoneType" type="schemas:AlternatePhoneType">
            <xs:annotation>
              <xs:documentation>Alternate phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Email address of the contact. Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="faxNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit fax number of the format 5131234567</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Address">
        <xs:sequence>
          <xs:element minOccurs="1" name="type" type="schemas:AddressType">
            <xs:annotation>
              <xs:documentation>Address Type  
 1) Physical address is mandatory.
 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.
3) For any address type, addressLine1, city, state, postalCode and country are mandatory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="addressLine1">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 1. Field for house number, street and direction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="addressLine2">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 2. Field for apartment or suite numbers, etc.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="city">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="28" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="state" type="schemas:State">
            <xs:annotation>
              <xs:documentation>Valid US state, commonwealth, and territory codes are allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="United States" name="country" type="xs:string">
            <xs:annotation>
              <xs:documentation>Only United States is allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="postalCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code. The postal code must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="5" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="postalCodeExtension">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code extension.  The postal code extension must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="4" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="AddressType">
        <xs:annotation>
          <xs:documentation>Address Type  
 1) Physical address is mandatory.
 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.
3) For any address type, addressLine1, city, state, postalCode and country are mandatory.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Mailing Address" />
          <xs:enumeration value="Physical Address" />
          <xs:enumeration value="Shipping Address" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="BankAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="ddaType" type="schemas:DdaType">
            <xs:annotation>
              <xs:documentation>Direct deposit account type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="achType" type="schemas:AchType">
            <xs:annotation>
              <xs:documentation>Check deposit type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="accountNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Direct deposit account number.  Maximum 17 characters.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="17" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="routingNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="9" />
                <xs:minLength value="9" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="bankName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Bank name used for credit card processing services.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SalesAgent">
        <xs:annotation>
          <xs:documentation>The agent who is submitting the deal.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Id for the Sales Contact.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Sales agent's first name.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Sales agent's last name.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="mobilePhoneNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Sales agent's 10-digit phone number of the format 5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Sales agent's email address.  Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="(\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}\\b{0,64})" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InstallationContact">
        <xs:annotation>
          <xs:documentation>The Technical Agent who is going to do setup.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Id for Technical Contact</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contact's first name.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contact's last name.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="mobilePhoneNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contact's 10-digit phone number of the format 5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="([0-9]{10})$" />
                <xs:maxLength value="10" />
                <xs:minLength value="10" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contact's email address. Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="(\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}\\b{0,64})" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ErrorResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="httpStatusCode" type="xs:integer" />
          <xs:element minOccurs="0" name="httpStatusMessage" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="errors" type="schemas:Error" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Error">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="xs:string" />
          <xs:element minOccurs="0" name="errorMessage" type="xs:string" />
          <xs:element minOccurs="0" name="target" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExistingApplication_1">
        <xs:sequence>
          <xs:element minOccurs="1" name="externalRefId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})" />
                <xs:maxLength value="36" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="leadSource">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The source of a lead.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="12" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="businessInfo" type="schemas:BusinessInfo_1" />
          <xs:element minOccurs="1" name="transactionInfo" type="schemas:TransactionInfo_1" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="owners" type="schemas:Owner_1" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="guarantors" type="schemas:Guarantor_1">
            <xs:annotation>
              <xs:documentation>Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="authorizedSigners" type="schemas:AuthorizedSigner_1" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="contacts" type="schemas:Contact_1" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="addresses" type="schemas:Address_1" />
          <xs:element minOccurs="0" name="bankAccount" type="schemas:BankAccount_1">
            <xs:annotation>
              <xs:documentation>Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber &amp; bankName.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="advancedSettelment" type="schemas:AdvancedSettlement_inner" />
          <xs:element minOccurs="0" name="salesAgent" type="schemas:SalesAgent_1">
            <xs:annotation>
              <xs:documentation>The agent who is submitting the deal. It is an optional object. It becomes required, when  partner wants to route deals to their own sales rep. Please work with your integration specialist for route to sales rep functionality.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="installationContact" type="schemas:InstallationContact">
            <xs:annotation>
              <xs:documentation>The Technical Agent who is going to do setup.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="routeToSalesRep" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Used to route a application to a worldpay or partner sales rep. By default the API is configured to route to a Worldpay sales rep. If you would like to route to partner (Launchpad UI) please work with your implementation consultant.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BusinessInfo_1">
        <xs:sequence>
          <xs:element minOccurs="1" name="dbaName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The merchant name they do business as.  Generally with what their customers know the business.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="50" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="legalName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Business Legal Name as filed with the IRS.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^([a-z0-9&amp; -]{1,40})$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ownershipType" type="schemas:OwnershipType">
            <xs:annotation>
              <xs:documentation>Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="mccCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="4" />
                <xs:minLength value="4" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessEstablishedDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date (CCYY-MM-DD) on which the merchant's business was established.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="websiteUrl">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The URL of the merchant's website.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="80" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="numberOfLocation" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Number of current locations.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="federalTaxId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.The full list of restricted federal tax id-
  “000000000” “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009" "111111110" “111111111” "111111112" "111111113" "111111114" "111111115" "111111116" "111111117" "111111118" "111111119" "222222220" "222222221" “222222222” "222222223" "222222224" "222222225" "222222226" "222222227" "222222228" "222222229" "333333330" "333333331" "333333332" “333333333” "333333334" "333333335" "333333336" "333333337" "333333338" "333333339"  "444444440" "444444441" "444444442" "444444443" “444444444” "444444445" "444444446" "444444447" "444444448" "444444449" "555555550" "555555551" "555555552" "555555553" "555555554" “555555555” "555555556" "555555557" "555555558" "555555559"  "666666660" "666666661" "666666662" "666666663" "666666664" "666666665" “666666666” "666666667" "666666668" "666666669" "777777770" "777777771” "777777772" "777777773" "777777774" "777777775" "777777776" “777777777” "777777778" "777777779" "888888880" "888888881" "888888882" "888888883" "888888884" "888888885" "888888886" "888888887" “888888888” "888888889"  "999999990" "999999991" "999999992" "999999993" "999999994" "999999995" "99999996"   "999999997" "999999998" “999999999”  "123456780" to "123456789" "123123123"</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^([a-z0-9&amp; -]{1,40})$" />
                <xs:maxLength value="9" />
                <xs:minLength value="9" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="paymentAcceptanceMethod" type="schemas:PaymentAcceptanceMethod">
            <xs:annotation>
              <xs:documentation>The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="No" name="pciadc" type="schemas:Pciadc">
            <xs:annotation>
              <xs:documentation>Indication if the merchant has had an account data compromise.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="Yes" name="pcidssValidated" type="schemas:PcidssValidated">
            <xs:annotation>
              <xs:documentation>Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="surroundingArea" type="schemas:SurroundingArea">
            <xs:annotation>
              <xs:documentation>Type of area surroundning the business.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="productServiceSold">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Type of goods or services sold.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="(^[-a-zA-Z0-9_ &amp;()*+,./:;=_'‘]{1,40}$)" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ownAddYears">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Years the business has been operating in their current location.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="lengthOfContract">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Inital contract term in months.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="([0-9]{3})$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="seasonal" type="schemas:Seasonal">
            <xs:annotation>
              <xs:documentation>Does the business operate seasonally?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="activeMonths" type="schemas:ActiveMonth">
            <xs:annotation>
              <xs:documentation>The months during which the business is actively operating.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="warranty" type="schemas:Warranty">
            <xs:annotation>
              <xs:documentation>Does the business offer warranties, dues, subscriptions, memberships, or other extended services?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="returnPolicy" type="schemas:ReturnPolicy">
            <xs:annotation>
              <xs:documentation>The business's return policy.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="taxExempt" type="schemas:TaxExempt" />
          <xs:element minOccurs="0" name="acceptCreditCards" type="schemas:AcceptCreditCards">
            <xs:annotation>
              <xs:documentation>Does the business accept credit cards?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="govOwnedMerchantCountry" type="xs:string">
            <xs:annotation>
              <xs:documentation>If merchant is a government entity or an entity at least 50% owned or controlled by government entity than provide 2 digit country code which belongs to the country.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionInfo_1">
        <xs:sequence>
          <xs:element minOccurs="1" name="annualSalesVolume">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected annual sales volume.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="9999999999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="percentRetailSwipedTransactions">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected Percentage of daily card-present transactions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="averageTicket">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Average ticket dollar amount.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="9999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="highestTicket">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Highest ticket dollar amount.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="9999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="currentProcessor" type="xs:string">
            <xs:annotation>
              <xs:documentation>the current processor</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="acceptChargebacks" type="schemas:AcceptChargebacks">
            <xs:annotation>
              <xs:documentation>Do you have more than 25 chargeback accepted in the last 12 months?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="chargebackPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected chargeback percentage.

```Required when acceptChargebacks is 'Yes'```

```Optional when acceptChargebacks is null or 'No'.```</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="returnPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected return percent of  goods sold</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="cardNotPresentPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Percent of card not present transactions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="businessToBusinessPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Percent of business-to-business transactions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="internetTransactionPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Percent of internet transactions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="inPersonTransactionPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Percent of in person transactions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="motoTransactionPercent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Percent of mail or phone order transactions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="annualCreditSalesVolume">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected annual credit card sales volume.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="999999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="annualDebitSalesVolume">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected annual debit card sales volume.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="999999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="annualAmexVolume">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="999999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="amexAverageTicket">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>AverageTicket dollar amount for Amex.
 ```This field is required when you opt-in for Amex```</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double">
                <xs:maxInclusive value="9999999.99" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="averageNumberofDays">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Average number of days from when cardholder is charged &amp; when products or services are received IN FULL by cardholder.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="365" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="needsProcessingBy" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date (CCYY-MM-DD) by which the Equipment needs to be setup. This field may be required for a given partner.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Owner_1">
        <xs:annotation>
          <xs:documentation>A Control Owner is required for the following ownership types &gt; LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="type" type="schemas:Type">
            <xs:annotation>
              <xs:documentation>The Owner Type. Please note the above Ownership Types where a Control Owner is required.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Required for AMEX acquired merchants otherwise optional.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="30" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>First name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="middleInitial">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Middle initial.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="1" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Last name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="phoneNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneNumberExt">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Phone number extension. Up to 8 digits of the format 12345678.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{1,8}$" />
                <xs:maxLength value="8" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneType" type="schemas:PhoneType">
            <xs:annotation>
              <xs:documentation>Phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhone">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit alternate phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhoneType" type="schemas:AlternatePhoneType">
            <xs:annotation>
              <xs:documentation>Alternate phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="faxNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit fax number of the format 5131234567</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Email address of the contact. Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ownershipPercentage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Ownership stake percentage.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ssn">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009" "111111110" “111111111” "111111112" "111111113" "111111114" "111111115" "111111116" "111111117" "111111118" "111111119" "222222220" "222222221" “222222222” "222222223" "222222224" "222222225" "222222226" "222222227" "222222228" "222222229" "333333330" "333333331" "333333332" “333333333” "333333334" "333333335" "333333336" "333333337" "333333338" "333333339"  "444444440" "444444441" "444444442" "444444443" “444444444” "444444445" "444444446" "444444447" "444444448" "444444449" "555555550" "555555551" "555555552" "555555553" "555555554" “555555555” "555555556" "555555557" "555555558" "555555559"  "666666660" "666666661" "666666662" "666666663" "666666664" "666666665" “666666666" "666666667" "666666668" "666666669" "777777770" "777777771” "777777772" "777777773" "777777774" "777777775" "777777776" “777777777” "777777778" "777777779" "888888880" "888888881" "888888882" "888888883" "888888884" "888888885" "888888886" "888888887" “888888888” "888888889"  "999999990" "999999991" "999999992" "999999993" "999999994" "999999995" "99999996"   "999999997" "999999998" “999999999”  "123456780" to "123456789" "123123123"</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{9}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="dob" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date of Birth (CCYY-MM-DD). Must be at least 18 years old.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="addressLine1">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 1. Field for house number, street and direction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="addressLine2">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 2. Field for apartment or suite numbers, etc.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="city">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="28" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="state" type="schemas:State_1">
            <xs:annotation>
              <xs:documentation>Valid US state, commonwealth, and territory codes are allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="United States" name="country" type="xs:string">
            <xs:annotation>
              <xs:documentation>Only United States is allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="postalCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code. The postal code must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="5" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="postalCodeExtension">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code extension.  The postal code extension must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="4" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="identification" type="schemas:Identification">
            <xs:annotation>
              <xs:documentation>Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="State_1">
        <xs:annotation>
          <xs:documentation>Valid US state, commonwealth, and territory codes are allowed.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AK" />
          <xs:enumeration value="AL" />
          <xs:enumeration value="AR" />
          <xs:enumeration value="AS" />
          <xs:enumeration value="AZ" />
          <xs:enumeration value="CA" />
          <xs:enumeration value="CO" />
          <xs:enumeration value="CT" />
          <xs:enumeration value="DC" />
          <xs:enumeration value="DE" />
          <xs:enumeration value="FL" />
          <xs:enumeration value="FM" />
          <xs:enumeration value="GA" />
          <xs:enumeration value="GU" />
          <xs:enumeration value="HI" />
          <xs:enumeration value="IA" />
          <xs:enumeration value="ID" />
          <xs:enumeration value="IL" />
          <xs:enumeration value="IN" />
          <xs:enumeration value="KS" />
          <xs:enumeration value="KY" />
          <xs:enumeration value="LA" />
          <xs:enumeration value="MA" />
          <xs:enumeration value="MD" />
          <xs:enumeration value="ME" />
          <xs:enumeration value="MH" />
          <xs:enumeration value="MI" />
          <xs:enumeration value="MN" />
          <xs:enumeration value="MO" />
          <xs:enumeration value="MP" />
          <xs:enumeration value="MS" />
          <xs:enumeration value="MT" />
          <xs:enumeration value="NC" />
          <xs:enumeration value="ND" />
          <xs:enumeration value="NE" />
          <xs:enumeration value="NH" />
          <xs:enumeration value="NJ" />
          <xs:enumeration value="NM" />
          <xs:enumeration value="NV" />
          <xs:enumeration value="NY" />
          <xs:enumeration value="OH" />
          <xs:enumeration value="OK" />
          <xs:enumeration value="OR" />
          <xs:enumeration value="PA" />
          <xs:enumeration value="PR" />
          <xs:enumeration value="PW" />
          <xs:enumeration value="RI" />
          <xs:enumeration value="SC" />
          <xs:enumeration value="SD" />
          <xs:enumeration value="TN" />
          <xs:enumeration value="TX" />
          <xs:enumeration value="UM" />
          <xs:enumeration value="UT" />
          <xs:enumeration value="VA" />
          <xs:enumeration value="VI" />
          <xs:enumeration value="VT" />
          <xs:enumeration value="WA" />
          <xs:enumeration value="WI" />
          <xs:enumeration value="WV" />
          <xs:enumeration value="WY" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Guarantor_1">
        <xs:sequence>
          <xs:element minOccurs="1" name="type" type="schemas:Type3" />
          <xs:element minOccurs="0" name="title">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Required for AMEX acquired merchants otherwise optional.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="30" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>First name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="middleInitial">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Middle initial.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="1" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Last name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="phoneNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneNumberExt">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Phone number extension. Up to 8 digits of the format 12345678.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{1,8}$" />
                <xs:maxLength value="8" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneType" type="schemas:PhoneType">
            <xs:annotation>
              <xs:documentation>Phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhone">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit alternate phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhoneType" type="schemas:AlternatePhoneType">
            <xs:annotation>
              <xs:documentation>Alternate phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="faxNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit fax number of the format 5131234567</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Email address of the contact. Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ownershipPercentage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Ownership stake percentage.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:maxInclusive value="100" />
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ssn">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009" "111111110" “111111111” "111111112" "111111113" "111111114" "111111115" "111111116" "111111117" "111111118" "111111119" "222222220" "222222221" “222222222” "222222223" "222222224" "222222225" "222222226" "222222227" "222222228" "222222229" "333333330" "333333331" "333333332" “333333333” "333333334" "333333335" "333333336" "333333337" "333333338" "333333339"  "444444440" "444444441" "444444442" "444444443" “444444444” "444444445" "444444446" "444444447" "444444448" "444444449" "555555550" "555555551" "555555552" "555555553" "555555554" “555555555” "555555556" "555555557" "555555558" "555555559"  "666666660" "666666661" "666666662" "666666663" "666666664" "666666665" “666666666" "666666667" "666666668" "666666669" "777777770" "777777771” "777777772" "777777773" "777777774" "777777775" "777777776" “777777777” "777777778" "777777779" "888888880" "888888881" "888888882" "888888883" "888888884" "888888885" "888888886" "888888887" “888888888” "888888889"  "999999990" "999999991" "999999992" "999999993" "999999994" "999999995" "99999996"   "999999997" "999999998" “999999999”  "123456780" to "123456789" "123123123"</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{9}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="dob" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date of Birth (CCYY-MM-DD). Must be at least 18 years old.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="addressLine1">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 1. Field for house number, street and direction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="addressLine2">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 2. Field for apartment or suite numbers, etc.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="city">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="28" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="state" type="schemas:State_1">
            <xs:annotation>
              <xs:documentation>Valid US state, commonwealth, and territory codes are allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="United States" name="country" type="xs:string">
            <xs:annotation>
              <xs:documentation>Only United States is allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="postalCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code. The postal code must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="5" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="postalCodeExtension">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code extension.  The postal code extension must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="4" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="identification" type="schemas:Identification">
            <xs:annotation>
              <xs:documentation>Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AuthorizedSigner_1">
        <xs:sequence>
          <xs:element minOccurs="1" name="roleName" type="schemas:RoleName_1">
            <xs:annotation>
              <xs:documentation>The role of the signer. Please note the below.

 1) Merchant role name is mandatory.
 2) Required fields indicated in schema are those required for all role names other than "SalesRep"
 3) The "SalesRep" role name only requires the following fields &gt; roleName, signingExperience, signingOrder, firstName, lastName, email
 4) The "Signer2" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="signingExperience" type="schemas:SigningExperience">
            <xs:annotation>
              <xs:documentation>Signing ceremony type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="signingOrder" type="xs:string">
            <xs:annotation>
              <xs:documentation>Define the signing order for multiple signers</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Required for AMEX acquired merchants otherwise optional.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="30" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>First name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="middleInitial">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Middle initial.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="1" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Last name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="phoneNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneNumberExt">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Phone number extension. Up to 8 digits of the format 12345678.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{1,8}$" />
                <xs:maxLength value="8" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneType" type="schemas:PhoneType">
            <xs:annotation>
              <xs:documentation>Phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhone">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit alternate phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhoneType" type="schemas:AlternatePhoneType">
            <xs:annotation>
              <xs:documentation>Alternate phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="faxNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit fax number of the format 5131234567</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Email address of the contact. Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ssn">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009" "111111110" “111111111” "111111112" "111111113" "111111114" "111111115" "111111116" "111111117" "111111118" "111111119" "222222220" "222222221" “222222222” "222222223" "222222224" "222222225" "222222226" "222222227" "222222228" "222222229" "333333330" "333333331" "333333332" “333333333” "333333334" "333333335" "333333336" "333333337" "333333338" "333333339"  "444444440" "444444441" "444444442" "444444443" “444444444” "444444445" "444444446" "444444447" "444444448" "444444449" "555555550" "555555551" "555555552" "555555553" "555555554" “555555555” "555555556" "555555557" "555555558" "555555559"  "666666660" "666666661" "666666662" "666666663" "666666664" "666666665" “666666666" "666666667" "666666668" "666666669" "777777770" "777777771” "777777772" "777777773" "777777774" "777777775" "777777776" “777777777” "777777778" "777777779" "888888880" "888888881" "888888882" "888888883" "888888884" "888888885" "888888886" "888888887" “888888888” "888888889"  "999999990" "999999991" "999999992" "999999993" "999999994" "999999995" "99999996"   "999999997" "999999998" “999999999”  "123456780" to "123456789" "123123123"</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{9}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="dob" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date of Birth (CCYY-MM-DD). Must be at least 18 years old.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="addressLine1">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 1. Field for house number, street and direction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="addressLine2">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 2. Field for apartment or suite numbers, etc.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="city">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="28" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="state" type="schemas:State_1">
            <xs:annotation>
              <xs:documentation>Valid US state, commonwealth, and territory codes are allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="United States" name="country" type="xs:string">
            <xs:annotation>
              <xs:documentation>Only United States is allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="postalCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code. The postal code must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="5" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="postalCodeExtension">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code extension.  The postal code extension must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="4" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="identification" type="schemas:Identification">
            <xs:annotation>
              <xs:documentation>Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="RoleName_1">
        <xs:annotation>
          <xs:documentation>The role of the signer. Please note the below.

 1) Merchant role name is mandatory.
 2) Required fields indicated in schema are those required for all role names other than "SalesRep"
 3) The "SalesRep" role name only requires the following fields &gt; roleName, signingExperience, signingOrder, firstName, lastName, email
 4) The "Signer2" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="SalesRep" />
          <xs:enumeration value="Merchant" />
          <xs:enumeration value="Signer2" />
          <xs:enumeration value="Signer3" />
          <xs:enumeration value="Signer4" />
          <xs:enumeration value="Signer5" />
          <xs:enumeration value="Signer6" />
          <xs:enumeration value="Signer7" />
          <xs:enumeration value="Signer8" />
          <xs:enumeration value="Guarantor2" />
          <xs:enumeration value="Guarantor3" />
          <xs:enumeration value="Guarantor4" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Contact_1">
        <xs:sequence>
          <xs:element minOccurs="1" name="type" type="schemas:Type4">
            <xs:annotation>
              <xs:documentation>Type of merchant contact.   
 1) Only primary contact
      is mandatory. May be the same as any owner contact information. 
 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  
 3) For all other contact types, firstName and lastName are mandatory during POST.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="title">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Required for AMEX acquired merchants otherwise optional.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="30" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>First name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="middleInitial">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Middle initial.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="1" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Last name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ssn">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009" "111111110" “111111111” "111111112" "111111113" "111111114" "111111115" "111111116" "111111117" "111111118" "111111119" "222222220" "222222221" “222222222” "222222223" "222222224" "222222225" "222222226" "222222227" "222222228" "222222229" "333333330" "333333331" "333333332" “333333333” "333333334" "333333335" "333333336" "333333337" "333333338" "333333339"  "444444440" "444444441" "444444442" "444444443" “444444444” "444444445" "444444446" "444444447" "444444448" "444444449" "555555550" "555555551" "555555552" "555555553" "555555554" “555555555” "555555556" "555555557" "555555558" "555555559"  "666666660" "666666661" "666666662" "666666663" "666666664" "666666665" “666666666" "666666667" "666666668" "666666669" "777777770" "777777771” "777777772" "777777773" "777777774" "777777775" "777777776" “777777777” "777777778" "777777779" "888888880" "888888881" "888888882" "888888883" "888888884" "888888885" "888888886" "888888887" “888888888” "888888889"  "999999990" "999999991" "999999992" "999999993" "999999994" "999999995" "99999996"   "999999997" "999999998" “999999999”  "123456780" to "123456789" "123123123"</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{9}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="birthDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Date of Birth (CCYY-MM-DD). Must be at least 18 years old.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="phoneNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneNumberExt">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Phone number extension. Up to 8 digits of the format 12345678.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{1,8}$" />
                <xs:maxLength value="8" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="phoneType" type="schemas:PhoneType">
            <xs:annotation>
              <xs:documentation>Phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhone">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit alternate phone number of the format  5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="alternatePhoneType" type="schemas:AlternatePhoneType">
            <xs:annotation>
              <xs:documentation>Alternate phone type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Email address of the contact. Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="faxNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>10-digit fax number of the format 5131234567</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Address_1">
        <xs:sequence>
          <xs:element minOccurs="1" name="type" type="schemas:AddressType">
            <xs:annotation>
              <xs:documentation>Address Type  
 1) Physical address is mandatory.
 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.
3) For any address type, addressLine1, city, state, postalCode and country are mandatory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="addressLine1">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 1. Field for house number, street and direction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="addressLine2">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Line 2. Field for apartment or suite numbers, etc.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="city">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="28" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="state" type="schemas:State_1">
            <xs:annotation>
              <xs:documentation>Valid US state, commonwealth, and territory codes are allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" fixed="United States" name="country" type="xs:string">
            <xs:annotation>
              <xs:documentation>Only United States is allowed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="postalCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code. The postal code must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="5" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="postalCodeExtension">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal code / zip code extension.  The postal code extension must be valid for the address' country code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="4" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BankAccount_1">
        <xs:annotation>
          <xs:documentation>Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber &amp; bankName.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ddaType" type="schemas:DdaType">
            <xs:annotation>
              <xs:documentation>Direct deposit account type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="achType" type="schemas:AchType">
            <xs:annotation>
              <xs:documentation>Check deposit type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="accountNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Direct deposit account number.  Maximum 17 characters.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="17" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="routingNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="9" />
                <xs:minLength value="9" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="bankName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Bank name used for credit card processing services.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AdvancedSettlement_inner">
        <xs:annotation>
          <xs:documentation>Advanced Settlement gives merchants options to settle their account according to their needs with different settlement categories.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="settlementCategories" type="schemas:SettlementCategory" />
          <xs:element minOccurs="0" name="bankAccount" type="schemas:BankAccount_1">
            <xs:annotation>
              <xs:documentation>Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber &amp; bankName.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SalesAgent_1">
        <xs:annotation>
          <xs:documentation>The agent who is submitting the deal. It is an optional object. It becomes required, when  partner wants to route deals to their own sales rep. Please work with your integration specialist for route to sales rep functionality.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Id for the Sales Contact.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Sales agent's first name.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Sales agent's last name.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="mobilePhoneNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Sales agent's 10-digit phone number of the format 5131234567.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{10}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Sales agent's email address.  Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="(\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}\\b{0,64})" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Application">
        <xs:sequence>
          <xs:element minOccurs="0" name="clientTrackingId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is an optional field that can be used by the partners to send a unique Id from their application for reporting purposes.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="36" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="businessInfo" type="schemas:BusinessInfo_1" />
          <xs:element minOccurs="1" name="transactionInfo" type="schemas:TransactionInfo_1" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="owners" type="schemas:Owner_1" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="authorizedSigners" type="schemas:AuthorizedSigner_1" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="guarantors" type="schemas:Guarantor_1">
            <xs:annotation>
              <xs:documentation>Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="contacts" type="schemas:Contact_1" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="addresses" type="schemas:Address_1" />
          <xs:element minOccurs="0" name="bankAccount" type="schemas:BankAccount_1">
            <xs:annotation>
              <xs:documentation>Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber &amp; bankName.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="advancedSettelment" type="schemas:AdvancedSettlement_inner" />
          <xs:element minOccurs="0" name="salesAgent" type="schemas:SalesAgent_1">
            <xs:annotation>
              <xs:documentation>The agent who is submitting the deal. It is an optional object. It becomes required, when  partner wants to route deals to their own sales rep. Please work with your integration specialist for route to sales rep functionality.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="installationContact" type="schemas:InstallationContact">
            <xs:annotation>
              <xs:documentation>The Technical Agent who is going to do setup.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="additionalInformation" type="schemas:AdditionalInformationObject" />
          <xs:element minOccurs="0" name="leadSource">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The source of the lead.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="150" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="routeToSalesRep" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Used to route a application to a worldpay or partner sales rep.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="productsInquiry">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AdditionalInformationObject">
        <xs:annotation>
          <xs:documentation>Required for some partners. Work with your Developer Integrations specialist for more information.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="key" type="schemas:Key" />
          <xs:element minOccurs="0" name="value" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ApplicationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="externalRefId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})" />
                <xs:maxLength value="36" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AdditionalConfigurationsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="customizations" type="schemas:AdditionalConfigurationCustomization" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="peripherals" type="schemas:AdditionalConfigurationPeripheral" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AdditionalConfigurationCustomization">
        <xs:sequence>
          <xs:element minOccurs="0" name="customizationId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Customization Id is internally populated from a master list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customizationType" type="xs:string">
            <xs:annotation>
              <xs:documentation>type of customization</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="useProductMatrix" type="xs:string">
            <xs:annotation>
              <xs:documentation>Whether or not used in product matrix</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="productId" type="xs:string">
            <xs:annotation>
              <xs:documentation>unique ID for the product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="code" type="xs:string">
            <xs:annotation>
              <xs:documentation>product code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="customizationCodeDetails" type="schemas:CustomizationCodeDetails" />
          <xs:element minOccurs="0" name="customizationValue" type="xs:string">
            <xs:annotation>
              <xs:documentation>Actual Customization Value</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customizationFieldLength" type="xs:string">
            <xs:annotation>
              <xs:documentation>Length of the customization value</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customizationDecimalPlace" type="xs:string">
            <xs:annotation>
              <xs:documentation>Number of decimal places</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customizationMinValue" type="xs:string">
            <xs:annotation>
              <xs:documentation>Minimum Value. Only applicable if the customization value is a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customizationMaxValue" type="xs:string">
            <xs:annotation>
              <xs:documentation>Maximum Value. Only applicable if the customization value is a number</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="charactersAllowed" type="xs:string">
            <xs:annotation>
              <xs:documentation>All characters allowed for customization. Only applicable if the customization value is a string.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="rule" type="xs:string">
            <xs:annotation>
              <xs:documentation>customization rule</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="regex" type="xs:string">
            <xs:annotation>
              <xs:documentation>Regular expression to validate the customization value</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="multiMerchantFlag" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Applicable in a multiple merchant situation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="shortDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>Description of the customization</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="longDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>Verbose description of the customiztion</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CustomizationCodeDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string">
            <xs:annotation>
              <xs:documentation>customization code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="shortDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>short description of the customization code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="longDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>long description of the customization code</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AdditionalConfigurationPeripheral">
        <xs:sequence>
          <xs:element minOccurs="0" name="peripheralId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Peripheral IDs are internally populated.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="model" type="xs:string">
            <xs:annotation>
              <xs:documentation>Peripheral Name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="shortDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>Description of the peripheral</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="longDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>Verbose description of the peripheral</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="isEMVCertified" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether peripheral is EMV certified</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="isEMVCapable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether peripheral is EMV Capable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="activePeripheralFlag" type="xs:string" />
          <xs:element minOccurs="0" name="purchasePrice" type="xs:string">
            <xs:annotation>
              <xs:documentation>purchase price of the peripheral</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="leasePrice" type="xs:string">
            <xs:annotation>
              <xs:documentation>lease price of the peripheral</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="rentalPrice" type="xs:string">
            <xs:annotation>
              <xs:documentation>rental price of the peripheral</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="hardwareCost" type="xs:string">
            <xs:annotation>
              <xs:documentation>hardware cost of the terminal</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EquipmentSetup">
        <xs:sequence>
          <xs:element minOccurs="0" default="next day" name="shippingOption" type="schemas:ShippingOption">
            <xs:annotation>
              <xs:documentation>The speed you would like the equipment to be shipped.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="terminals" type="schemas:Terminal" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Terminal">
        <xs:sequence>
          <xs:element minOccurs="1" name="terminalConfigs" type="schemas:TerminalConfig" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="customizations" type="schemas:TerminalCustomization" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="products" type="schemas:Product" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="peripherals" type="schemas:Peripheral" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="vendors" type="schemas:PaymentApplicationVendor" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="gateways" type="schemas:Gateway" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="supply" type="schemas:TerminalSupply" />
          <xs:element minOccurs="0" name="deployment" type="schemas:TerminalDeployment" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TerminalConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="requestId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Partner assigned unique request ID for terminal setup.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="terminalId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Terminal ID number.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="terminalModel" type="xs:string">
            <xs:annotation>
              <xs:documentation>The model name of the terminal in use.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="price" type="xs:double">
            <xs:annotation>
              <xs:documentation>Terminal price</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="quantity" type="xs:integer" />
          <xs:element minOccurs="1" name="logicalApplicationId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Logical application ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="accessMethod" type="xs:string">
            <xs:annotation>
              <xs:documentation>Methods of terminal access.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="paymentMethod" type="schemas:PaymentMethod">
            <xs:annotation>
              <xs:documentation>Payment method for the selected terminal.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="environmentName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Environment name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="isVar" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>The value added reseller. Default value is false.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="emvCapable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Is it EMV capabale?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="leaseId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Lease ID. Required when PaymentMethod is selected as lease.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="leaseTermLength" type="schemas:LeaseTermLength">
            <xs:annotation>
              <xs:documentation>Lease term for the peripheral</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="terminalSequenceNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Terminal sequence number. If not sent, the API will autogenerate a number.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="specialCustomizations">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any customization request for a terminal configuration.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TerminalCustomization">
        <xs:sequence>
          <xs:element minOccurs="0" name="customizationId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Customization ID is internally populated from a master list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="customizationName" type="xs:string" />
          <xs:element minOccurs="0" name="customizationFieldValue" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Product">
        <xs:sequence>
          <xs:element minOccurs="0" name="productId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Product ID is populated internally.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="productName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Payment method associated with the internally-populated ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Peripheral">
        <xs:sequence>
          <xs:element minOccurs="0" name="peripheralId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Peripheral IDs are internally populated.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="peripheralType" type="xs:string">
            <xs:annotation>
              <xs:documentation>Peripheral type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="model" type="xs:string" />
          <xs:element minOccurs="0" name="leaseId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Lease ID for the peripheral</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="leaseTermLength" type="schemas:LeaseTermLength">
            <xs:annotation>
              <xs:documentation>Lease term for the peripheral</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="paymentMethod" type="schemas:PaymentMethod1">
            <xs:annotation>
              <xs:documentation>Payment method for the selected peripheral.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>"Payment Amount for the peripheral. Valid values are 0.00
  - 9999999999.99."</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="(^\d{1,10}([.]\d{1,2})?)$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="paymentConfirmationNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Payment confirmation number for the peripheral.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="[0-9a-zA-Z]{6}|" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaymentApplicationVendor">
        <xs:annotation>
          <xs:documentation>A payment application is installed software developed for processing various payments types: Credit, Debit, Gift, Checks, etc. and can be integrated with a POS system or used in a standalone manner.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="paymentApplicationId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Payment application ID</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="paymentApplicationName" type="xs:string" />
          <xs:element minOccurs="0" name="vendorId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Vendor ID for the payment application.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Payment application version.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="reseller" type="xs:string">
            <xs:annotation>
              <xs:documentation>Reseller</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastUpgradeDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Last date payment application was upgraded.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="notes" type="xs:string">
            <xs:annotation>
              <xs:documentation>Custom notes can go here.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Gateway">
        <xs:annotation>
          <xs:documentation>A gateway is a hosted payment processing application provided by a service provider and accessed through an internet connection.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="gatewayId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Internally-generated gateway ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="gatewayName" type="xs:string" />
          <xs:element minOccurs="0" name="notes" type="xs:string">
            <xs:annotation>
              <xs:documentation>Add any custom notes here.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TerminalSupply">
        <xs:sequence>
          <xs:element minOccurs="1" name="supplyType" type="xs:string" />
          <xs:element minOccurs="0" name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>Supply name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="quantity" type="xs:integer">
            <xs:annotation>
              <xs:documentation>Supply quantity</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="total">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Total Supplies. Valid values are 0.00
  - 9999999999.99."</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="(^\d{1,10}([.]\d{1,2})?)$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TerminalDeployment">
        <xs:sequence>
          <xs:element minOccurs="1" name="equipmentUpdateDeploy" type="schemas:EquipmentUpdateDeploy" />
          <xs:element minOccurs="0" name="terminalBuildFlag" type="xs:boolean" />
          <xs:element minOccurs="0" name="frontEndBuildFlag" type="xs:boolean" />
          <xs:element minOccurs="0" name="sicMerchantFlag" type="xs:boolean" />
          <xs:element minOccurs="0" name="specialInstructions">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Special instructions for terminal deployment.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ApplicationStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="externalRefId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})" />
                <xs:maxLength value="36" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="contractStatus" type="schemas:ContractStatus" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="pendedReason" type="xs:string">
            <xs:annotation>
              <xs:documentation>Detailed Underwriting Pended reason of the deal.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatusHistoryResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="externalRefId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})" />
                <xs:maxLength value="36" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="statusHistory" type="schemas:StatusHistory" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatusHistory">
        <xs:sequence>
          <xs:element minOccurs="0" name="statusSeqNumber" type="xs:integer" />
          <xs:element minOccurs="0" name="detailStatus" type="xs:string" />
          <xs:element minOccurs="0" name="summaryStatus" type="xs:string" />
          <xs:element minOccurs="0" name="statusCategory" type="xs:string" />
          <xs:element minOccurs="0" name="statusDateTime" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SignerStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="externalRefId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})" />
                <xs:maxLength value="36" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="authorizedSigners" type="schemas:AuthSigners" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AuthSigners">
        <xs:sequence>
          <xs:element minOccurs="0" name="firstName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>First name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="15" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="middleInitial">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Middle initial.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="1" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="lastName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Last name. Region based validations will be applied to this field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[a-zA-Z0-9 \p{P}\p{S}]+$" />
                <xs:maxLength value="25" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="email">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Email address of the contact. Must have @ and a .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}" />
                <xs:maxLength value="64" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>Status of the signer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastUpdated" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date contract was last updated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="dateSubmitted" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date contract was last updated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="dateSent" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date contract was sent</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="dateDelivered" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date contract was delivered</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="dateSigned" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date contract was signed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="signerRoleName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Role of the signer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="signerExperience" type="xs:string">
            <xs:annotation>
              <xs:documentation>Method of sign</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DocumentLink">
        <xs:sequence>
          <xs:element minOccurs="1" name="externalRefId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})" />
                <xs:maxLength value="36" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="returnUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>The recipient will be directed to the returnUrl once signing is complete. For example on how it looks:  https://docusign.com/Signing/StartInSession.aspx?t=7f0d21a4-2798-402f-8b26-b12dbb37ae40</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DocuSignLink">
        <xs:sequence>
          <xs:element minOccurs="0" name="embeddingUrl" type="xs:string">
            <xs:annotation>
              <xs:documentation>UI embeded link of the Docusign contract for the externalRefId.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="inline_response_200">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="equipment" type="schemas:inline_response_200_equipment" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="inline_response_200_1">
        <xs:sequence>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>UP or DOWN status of Lauchpad &amp; it's downstream system.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="inline_response_200_equipment">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="logicalApplicationId" type="xs:string" />
          <xs:element minOccurs="0" name="environment" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="AcceptChargebacks">
        <xs:annotation>
          <xs:documentation>Do you have more than 25 chargeback accepted in the last 12 months?</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Yes" />
          <xs:enumeration value="No" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AcceptCreditCards">
        <xs:annotation>
          <xs:documentation>Does the business accept credit cards?</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="true" />
          <xs:enumeration value="false" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AchType">
        <xs:annotation>
          <xs:documentation>Check deposit type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Commercial Checking" />
          <xs:enumeration value="Private Checking" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ActiveMonth">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Jan" />
          <xs:enumeration value="Feb" />
          <xs:enumeration value="Mar" />
          <xs:enumeration value="Apr" />
          <xs:enumeration value="May" />
          <xs:enumeration value="Jun" />
          <xs:enumeration value="Jul" />
          <xs:enumeration value="Aug" />
          <xs:enumeration value="Sep" />
          <xs:enumeration value="Oct" />
          <xs:enumeration value="Nov" />
          <xs:enumeration value="Dec" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Content-Type">
        <xs:restriction base="xs:string">
          <xs:enumeration value="application/json" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContractStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Complete" />
          <xs:enumeration value="In Progress" />
          <xs:enumeration value="Error" />
          <xs:enumeration value="Pending" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DdaType">
        <xs:annotation>
          <xs:documentation>Direct deposit account type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Checking" />
          <xs:enumeration value="Savings" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EquipmentUpdateDeploy">
        <xs:restriction base="xs:string">
          <xs:enumeration value="M" />
          <xs:enumeration value="D" />
          <xs:enumeration value="N" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IdType">
        <xs:annotation>
          <xs:documentation>Type of ID provided by the owner.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ALIEN ID" />
          <xs:enumeration value="CREDIT BUREAU" />
          <xs:enumeration value="DRIVERS LICENSE" />
          <xs:enumeration value="STATE ID" />
          <xs:enumeration value="MEXICAN CONSULATE" />
          <xs:enumeration value="MILITARY ID" />
          <xs:enumeration value="OTHER" />
          <xs:enumeration value="PASSPORT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IssuedState">
        <xs:annotation>
          <xs:documentation>Valid state code where ID was issued.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AK" />
          <xs:enumeration value="AL" />
          <xs:enumeration value="AR" />
          <xs:enumeration value="AS" />
          <xs:enumeration value="AZ" />
          <xs:enumeration value="CA" />
          <xs:enumeration value="CO" />
          <xs:enumeration value="CT" />
          <xs:enumeration value="DC" />
          <xs:enumeration value="DE" />
          <xs:enumeration value="FL" />
          <xs:enumeration value="FM" />
          <xs:enumeration value="GA" />
          <xs:enumeration value="GU" />
          <xs:enumeration value="HI" />
          <xs:enumeration value="IA" />
          <xs:enumeration value="ID" />
          <xs:enumeration value="IL" />
          <xs:enumeration value="IN" />
          <xs:enumeration value="KS" />
          <xs:enumeration value="KY" />
          <xs:enumeration value="LA" />
          <xs:enumeration value="MA" />
          <xs:enumeration value="MD" />
          <xs:enumeration value="ME" />
          <xs:enumeration value="MH" />
          <xs:enumeration value="MI" />
          <xs:enumeration value="MN" />
          <xs:enumeration value="MO" />
          <xs:enumeration value="MP" />
          <xs:enumeration value="MS" />
          <xs:enumeration value="MT" />
          <xs:enumeration value="NC" />
          <xs:enumeration value="ND" />
          <xs:enumeration value="NE" />
          <xs:enumeration value="NH" />
          <xs:enumeration value="NJ" />
          <xs:enumeration value="NM" />
          <xs:enumeration value="NV" />
          <xs:enumeration value="NY" />
          <xs:enumeration value="OH" />
          <xs:enumeration value="OK" />
          <xs:enumeration value="OR" />
          <xs:enumeration value="PA" />
          <xs:enumeration value="PR" />
          <xs:enumeration value="PW" />
          <xs:enumeration value="RI" />
          <xs:enumeration value="SC" />
          <xs:enumeration value="SD" />
          <xs:enumeration value="TN" />
          <xs:enumeration value="TX" />
          <xs:enumeration value="UT" />
          <xs:enumeration value="VA" />
          <xs:enumeration value="VI" />
          <xs:enumeration value="VT" />
          <xs:enumeration value="WA" />
          <xs:enumeration value="WI" />
          <xs:enumeration value="WV" />
          <xs:enumeration value="WY" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Key">
        <xs:restriction base="xs:string">
          <xs:enumeration value="partnerEmployeeId" />
          <xs:enumeration value="partnerEmployeeName" />
          <xs:enumeration value="partnerEmployeePhoneNumber" />
          <xs:enumeration value="partnerEmployeeEmail" />
          <xs:enumeration value="partnerEmployeeType" />
          <xs:enumeration value="partnerEmployeeBranch" />
          <xs:enumeration value="partnerEmployeeCostCentre" />
          <xs:enumeration value="partnerEmployeeRegion" />
          <xs:enumeration value="partnerEmployeeOfficerCode" />
          <xs:enumeration value="partnerEmployeeCompany" />
          <xs:enumeration value="partnerEmployeeId2" />
          <xs:enumeration value="partnerEmployeeName2" />
          <xs:enumeration value="partnerEmployeePhoneNumber2" />
          <xs:enumeration value="partnerEmployeeEmail2" />
          <xs:enumeration value="partnerEmployeeType2" />
          <xs:enumeration value="partnerEmployeeBranch2" />
          <xs:enumeration value="partnerEmployeeCostCentre2" />
          <xs:enumeration value="partnerEmployeeRegion2" />
          <xs:enumeration value="partnerEmployeeOfficerCode2" />
          <xs:enumeration value="partnerEmployeeCompany2" />
          <xs:enumeration value="partnerEmployeeIndustry" />
          <xs:enumeration value="partnerLeadSource" />
          <xs:enumeration value="partnerEmployeeRef" />
          <xs:enumeration value="partnerMethod" />
          <xs:enumeration value="partnerVipIndicator" />
          <xs:enumeration value="partnerMarketRegion" />
          <xs:enumeration value="partnerPromotionCampaign" />
          <xs:enumeration value="partnerLeadType" />
          <xs:enumeration value="partnerCustom1" />
          <xs:enumeration value="partnerCustom2" />
          <xs:enumeration value="partnerCustom3" />
          <xs:enumeration value="partnerCustom4" />
          <xs:enumeration value="partnerCustom5" />
          <xs:enumeration value="leadInitiatedBy" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LeaseTermLength">
        <xs:annotation>
          <xs:documentation>Lease term for the peripheral</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="24" />
          <xs:enumeration value="36" />
          <xs:enumeration value="48" />
          <xs:enumeration value="60" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OwnershipType">
        <xs:annotation>
          <xs:documentation>Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="GOVERNMENT" />
          <xs:enumeration value="SOLE PROPRIETOR" />
          <xs:enumeration value="LLC" />
          <xs:enumeration value="PARTNERSHIP" />
          <xs:enumeration value="FIN INSTITUTION" />
          <xs:enumeration value="NON-PROFIT" />
          <xs:enumeration value="ASSOCIATION/ESTATE/TRUST" />
          <xs:enumeration value="PRIVATE CORPORATION" />
          <xs:enumeration value="SEC REGISTERED" />
          <xs:enumeration value="PUBLIC CORPORATION" />
          <xs:enumeration value="OTHER" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentAcceptanceMethod">
        <xs:restriction base="xs:string">
          <xs:enumeration value="inPerson" />
          <xs:enumeration value="onlineSite" />
          <xs:enumeration value="phoneOrMailOrder" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethod">
        <xs:annotation>
          <xs:documentation>Payment method for the selected terminal.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PURCHASE / SALE" />
          <xs:enumeration value="REPROGRAM / OWN" />
          <xs:enumeration value="MONTH-TO-MONTH RENTAL" />
          <xs:enumeration value="LEASE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethod1">
        <xs:annotation>
          <xs:documentation>Payment method for the selected peripheral.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PURCHASE / SALE" />
          <xs:enumeration value="REPROGRAM / OWN" />
          <xs:enumeration value="MONTH-TO-MONTH RENTAL" />
          <xs:enumeration value="LEASE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Pciadc">
        <xs:annotation>
          <xs:documentation>Indication if the merchant has had an account data compromise.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Yes" />
          <xs:enumeration value="No" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PcidssValidated">
        <xs:annotation>
          <xs:documentation>Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Yes" />
          <xs:enumeration value="No" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReturnPolicy">
        <xs:annotation>
          <xs:documentation>The business's return policy.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="3 Day" />
          <xs:enumeration value="30 Day" />
          <xs:enumeration value="60 Day" />
          <xs:enumeration value="60+ Day" />
          <xs:enumeration value="ALL SALES FINAL" />
          <xs:enumeration value="EXCHANGE ONLY/STORE CREDIT" />
          <xs:enumeration value="NO RETURN POLICY" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Seasonal">
        <xs:annotation>
          <xs:documentation>Does the business operate seasonally?</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Yes" />
          <xs:enumeration value="No" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SettlementCategory">
        <xs:annotation>
          <xs:documentation>Settlement categories gives merhant an option to settle their account with different settlement categories. It is an optional field. However at time of boarding it becomes a required field.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Deposits" />
          <xs:enumeration value="Fees" />
          <xs:enumeration value="Exceptions" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ShippingOption">
        <xs:annotation>
          <xs:documentation>The speed you would like the equipment to be shipped.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ground" />
          <xs:enumeration value="next day" />
          <xs:enumeration value="2nd day" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SurroundingArea">
        <xs:annotation>
          <xs:documentation>Type of area surroundning the business.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Commercial" />
          <xs:enumeration value="Industrial" />
          <xs:enumeration value="Residential" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TaxExempt">
        <xs:restriction base="xs:string">
          <xs:enumeration value="true" />
          <xs:enumeration value="false" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type">
        <xs:annotation>
          <xs:documentation>The Owner Type. Please note the above Ownership Types where a Control Owner is required.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Control Owner Contact" />
          <xs:enumeration value="Owner 1 Contact" />
          <xs:enumeration value="Owner 2 Contact" />
          <xs:enumeration value="Owner 3 Contact" />
          <xs:enumeration value="Owner 4 Contact" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type1">
        <xs:annotation>
          <xs:documentation>Type of merchant contact.   
 1) Only primary contact
      is mandatory. May be the same as any owner contact information. 
 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  
 3) For all other contact types, firstName and lastName are mandatory during POST.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Primary Contact" />
          <xs:enumeration value="Accounting Contact" />
          <xs:enumeration value="Customer Service Contact" />
          <xs:enumeration value="Shipping Contact" />
          <xs:enumeration value="Third Party Contact" />
          <xs:enumeration value="Vendor Contact Info" />
          <xs:enumeration value="PCI Contact" />
          <xs:enumeration value="Corporate" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type3">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Guarantor 1 Contact" />
          <xs:enumeration value="Guarantor 2 Contact" />
          <xs:enumeration value="Guarantor 3 Contact" />
          <xs:enumeration value="Guarantor 4 Contact" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type4">
        <xs:annotation>
          <xs:documentation>Type of merchant contact.   
 1) Only primary contact
      is mandatory. May be the same as any owner contact information. 
 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  
 3) For all other contact types, firstName and lastName are mandatory during POST.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Primary Contact" />
          <xs:enumeration value="Store Primary Contact" />
          <xs:enumeration value="Accounting Contact" />
          <xs:enumeration value="Customer Service Contact" />
          <xs:enumeration value="Shipping Contact" />
          <xs:enumeration value="Third Party Contact" />
          <xs:enumeration value="Vendor Contact Info" />
          <xs:enumeration value="PCI Contact" />
          <xs:enumeration value="Corporate" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Warranty">
        <xs:annotation>
          <xs:documentation>Does the business offer warranties, dues, subscriptions, memberships, or other extended services?</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="1 YEAR" />
          <xs:enumeration value="30 DAY" />
          <xs:enumeration value="60 DAY" />
          <xs:enumeration value="90 DAY" />
          <xs:enumeration value="LIFETIME" />
          <xs:enumeration value="NO" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="FetchApplication200_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ExistingApplication">
            <xs:annotation>
              <xs:documentation>Success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FetchApplication0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExisitingApplication_Request">
        <xs:sequence>
          <xs:element minOccurs="1" name="body" type="schemas:ExistingApplication_1" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExisitingApplication0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NewApplication_Request">
        <xs:sequence>
          <xs:element minOccurs="1" name="body" type="schemas:Application" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NewApplication201_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response201" type="schemas:ApplicationResponse">
            <xs:annotation>
              <xs:documentation>Created</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NewApplication0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetEquipmentSupported200_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:inline_response_200">
            <xs:annotation>
              <xs:documentation>Success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetEquipmentSupported0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetAdditionalConfigurations200_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:AdditionalConfigurationsResponse">
            <xs:annotation>
              <xs:documentation>Response is a list of valid terminal configurations.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetAdditionalConfigurations0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetTerminalInfo200_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:EquipmentSetup">
            <xs:annotation>
              <xs:documentation>Success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetTerminalInfo0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UpdateTerminal_Request">
        <xs:sequence>
          <xs:element minOccurs="1" name="body" type="schemas:EquipmentSetup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UpdateTerminal0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConfigStandaloneTerminal_Request">
        <xs:sequence>
          <xs:element minOccurs="1" name="body" type="schemas:EquipmentSetup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConfigStandaloneTerminal0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateBoard0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InititateBoard0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetApplicationStatus200_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:ApplicationStatus">
            <xs:annotation>
              <xs:documentation>Success

ApplicationStatus gives following Information,

- 'contractStatus' - Current status of contract processing.

- 'description' - Detailed description of the contractStatus.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetApplicationStatus0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchApplicationStatusHistory200_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:StatusHistoryResponse">
            <xs:annotation>
              <xs:documentation>Success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchApplicationStatusHistory0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchSignerStatus200_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:SignerStatus">
            <xs:annotation>
              <xs:documentation>Success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchSignerStatus0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetContract0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DocusignLink_Request">
        <xs:sequence>
          <xs:element minOccurs="1" name="body" type="schemas:DocumentLink" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DocusignLink200_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:DocuSignLink">
            <xs:annotation>
              <xs:documentation>Success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DocusignLink0_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response0" type="schemas:ErrorResponse">
            <xs:annotation>
              <xs:documentation>Default errors</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Gethealth200_Response0">
        <xs:sequence>
          <xs:element minOccurs="1" name="response200" type="schemas:inline_response_200_1">
            <xs:annotation>
              <xs:documentation>Response is UP or DOWN of Launchpad &amp; it's downstream system.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </grammars>
  <resources base="https://apis.cert.worldpay.com/merchant-boarding/v2">
    <resource id="_applications" path="/applications">
      <method id="FetchApplication" name="GET">
        <doc title="FetchApplication" xml:lang="en">Retrieves existing application data.</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <representation element="schemas:FetchApplication200_Response0" mediaType="application/json" />
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:FetchApplication0_Response0" mediaType="application/json" />
        </response>
      </method>
      <method id="ExisitingApplication" name="PUT">
        <doc title="ExisitingApplication" xml:lang="en">This endpoint allows merchants to update an existing application with new information.</doc>
        <request>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <param name="Content-Type" style="header" default="application/json">
            <doc title="Content-Type" xml:lang="en">Indicates the media type of the request-body. Accepts application/json.</doc>
            <option value="Enum_applicationjson">
              <doc title="Enum_applicationjson" xml:lang="en" />
            </option>
          </param>
          <representation element="schemas:ExisitingApplication_Request" mediaType="application/json" />
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:ExisitingApplication0_Response0" mediaType="application/json" />
        </response>
      </method>
      <method id="NewApplication" name="POST">
        <doc title="NewApplication" xml:lang="en">Use this endpoint to collect the merchant information needed to initiate a new contract. </doc>
        <request>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <param name="Content-Type" style="header" default="application/json">
            <doc title="Content-Type" xml:lang="en">Indicates the media type of the request-body. Accepts application/json.</doc>
            <option value="Enum_applicationjson">
              <doc title="Enum_applicationjson" xml:lang="en" />
            </option>
          </param>
          <representation element="schemas:NewApplication_Request" mediaType="application/json" />
        </request>
        <response status="201">
          <doc title="201" xml:lang="en">Created</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <representation element="schemas:NewApplication201_Response0" mediaType="application/json" />
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:NewApplication0_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_equipmentsupported" path="/equipment/supported">
      <method id="GetEquipmentSupported" name="GET">
        <doc title="GetEquipmentSupported" xml:lang="en">Retrieve applicable equipment for an existing application.</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <representation element="schemas:GetEquipmentSupported200_Response0" mediaType="application/json" />
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:GetEquipmentSupported0_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_terminaladditional-configurations" path="/terminal/additional-configurations">
      <method id="GetAdditionalConfigurations" name="GET">
        <doc title="GetAdditionalConfigurations" xml:lang="en">Fetches a list of valid terminal customizations and peripherals, such as electing to password protect a void.</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <param name="logicalApplicationId" style="header" type="xsd:string" default="">
            <doc title="logicalApplicationId" xml:lang="en">Logical App ID of the terminal.</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Response is a list of valid terminal configurations.</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <representation element="schemas:GetAdditionalConfigurations200_Response0" mediaType="application/json" />
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:GetAdditionalConfigurations0_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_equipmentterminal-var" path="/equipment/terminal-var">
      <method id="GetTerminalInfo" name="GET">
        <doc title="GetTerminalInfo" xml:lang="en">Gets the terminal configuration information for a specific partner.</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <param name="Content-Type" style="header" default="application/json">
            <doc title="Content-Type" xml:lang="en">Indicates the media type of the request-body. Accepts application/json.</doc>
            <option value="Enum_applicationjson">
              <doc title="Enum_applicationjson" xml:lang="en" />
            </option>
          </param>
          <param name="locationId" style="header" type="xsd:string" default="">
            <doc title="locationId" xml:lang="en">The locationId returned from POST /locations call.</doc>
          </param>
          <param name="merchantId" style="header" type="xsd:string" default="">
            <doc title="merchantId" xml:lang="en">The merchantId returned from POST /merchants call.</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <representation element="schemas:GetTerminalInfo200_Response0" mediaType="application/json" />
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:GetTerminalInfo0_Response0" mediaType="application/json" />
        </response>
      </method>
      <method id="UpdateTerminal" name="PUT">
        <doc title="UpdateTerminal" xml:lang="en">Updates terminal configurations.</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <param name="Content-Type" style="header" default="application/json">
            <doc title="Content-Type" xml:lang="en">Indicates the media type of the request-body. Accepts application/json.</doc>
            <option value="Enum_applicationjson">
              <doc title="Enum_applicationjson" xml:lang="en" />
            </option>
          </param>
          <param name="locationId" style="header" type="xsd:string" default="">
            <doc title="locationId" xml:lang="en">The locationId returned from POST /locations call.</doc>
          </param>
          <param name="merchantId" style="header" type="xsd:string" default="">
            <doc title="merchantId" xml:lang="en">The merchantId returned from POST /merchants call.</doc>
          </param>
          <representation element="schemas:UpdateTerminal_Request" mediaType="application/json" />
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:UpdateTerminal0_Response0" mediaType="application/json" />
        </response>
      </method>
      <method id="ConfigStandaloneTerminal" name="POST">
        <doc title="ConfigStandaloneTerminal" xml:lang="en">Sets up terminal configurations.</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <param name="Content-Type" style="header" default="application/json">
            <doc title="Content-Type" xml:lang="en">Indicates the media type of the request-body. Accepts application/json.</doc>
            <option value="Enum_applicationjson">
              <doc title="Enum_applicationjson" xml:lang="en" />
            </option>
          </param>
          <param name="locationId" style="header" type="xsd:string" default="">
            <doc title="locationId" xml:lang="en">The locationId returned from POST /locations call.</doc>
          </param>
          <param name="merchantId" style="header" type="xsd:string" default="">
            <doc title="merchantId" xml:lang="en">The merchantId returned from POST /merchants call.</doc>
          </param>
          <representation element="schemas:ConfigStandaloneTerminal_Request" mediaType="application/json" />
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:ConfigStandaloneTerminal0_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_applicationsvalidate" path="/applications/validate">
      <method id="validateBoard" name="PUT">
        <doc title="validateBoard" xml:lang="en">Begins the merchant validation process before boarding after all necessary information has been submitted to the API. Please see the reference guide for specific boarding requirements.</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <param name="Content-Type" style="header" default="application/json">
            <doc title="Content-Type" xml:lang="en">Indicates the media type of the request-body. Accepts application/json.</doc>
            <option value="Enum_applicationjson">
              <doc title="Enum_applicationjson" xml:lang="en" />
            </option>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:validateBoard0_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_applicationsboard" path="/applications/board">
      <method id="InititateBoard" name="PUT">
        <doc title="InititateBoard" xml:lang="en">Begins the merchant boarding process after all necessary information has been submitted to the API. Please see the reference guide for specific boarding requirements.</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <param name="Content-Type" style="header" default="application/json">
            <doc title="Content-Type" xml:lang="en">Indicates the media type of the request-body. Accepts application/json.</doc>
            <option value="Enum_applicationjson">
              <doc title="Enum_applicationjson" xml:lang="en" />
            </option>
          </param>
          <param name="threatmetrixId" style="header" type="xsd:string" default="">
            <doc title="threatmetrixId" xml:lang="en">A unique session id</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:InititateBoard0_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_applicationsstatus" path="/applications/status">
      <method id="GetApplicationStatus" name="GET">
        <doc title="GetApplicationStatus" xml:lang="en">Retrieves the status of a contract when passed with an externalRefID. Both the externalRefID and authorization header are required.</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success

ApplicationStatus gives following Information,

- 'contractStatus' - Current status of contract processing.

- 'description' - Detailed description of the contractStatus.</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <representation element="schemas:GetApplicationStatus200_Response0" mediaType="application/json" />
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:GetApplicationStatus0_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_applicationsstatushistory" path="/applications/status/history">
      <method id="fetchApplicationStatusHistory" name="GET">
        <doc title="fetchApplicationStatusHistory" xml:lang="en">Use this endpoint to get a application's status history.</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <representation element="schemas:fetchApplicationStatusHistory200_Response0" mediaType="application/json" />
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:fetchApplicationStatusHistory0_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_applicationsstatussigners" path="/applications/status/signers">
      <method id="fetchSignerStatus" name="GET">
        <doc title="fetchSignerStatus" xml:lang="en">Use this endpoint to get signer status</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <param name="Content-Type" style="header" default="application/json">
            <doc title="Content-Type" xml:lang="en">Indicates the media type of the request-body. Accepts application/json.</doc>
            <option value="Enum_applicationjson">
              <doc title="Enum_applicationjson" xml:lang="en" />
            </option>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <representation element="schemas:fetchSignerStatus200_Response0" mediaType="application/json" />
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:fetchSignerStatus0_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_contracts" path="/contracts">
      <method id="GetContract" name="GET">
        <doc title="GetContract" xml:lang="en">Returns a PDF contract to be signed.</doc>
        <request>
          <param name="externalRefId" style="header" type="xsd:string" default="" required="true">
            <doc title="externalRefId" xml:lang="en">The externalRefId returned from POST /applications call.</doc>
          </param>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Response is a PDF file.</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <representation element="schemas:response200" mediaType="application/pdf" />
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:GetContract0_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_applicationsdocumentlink" path="/applications/documentlink">
      <method id="DocusignLink" name="POST">
        <doc title="DocusignLink" xml:lang="en">Retrieves a Docusign link to view the contract.</doc>
        <request>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <param name="Content-Type" style="header" default="application/json">
            <doc title="Content-Type" xml:lang="en">Indicates the media type of the request-body. Accepts application/json.</doc>
            <option value="Enum_applicationjson">
              <doc title="Enum_applicationjson" xml:lang="en" />
            </option>
          </param>
          <representation element="schemas:DocusignLink_Request" mediaType="application/json" />
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Success</doc>
          <param name="v-correlation-id" style="plain" type="xsd:string" required="true">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
          <representation element="schemas:DocusignLink200_Response0" mediaType="application/json" />
        </response>
        <response status="0">
          <doc title="0" xml:lang="en">Default errors</doc>
          <representation element="schemas:DocusignLink0_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_applicationshealth" path="/applications/health">
      <method id="Gethealth" name="GET">
        <doc title="Gethealth" xml:lang="en">Checks the the health of Launchpad and its dependent down streams systems like CPQ, Sales Force, XAA and Jigsaw at regular intervals to check the system is up or down.</doc>
        <request>
          <param name="v-correlation-id" style="header" type="xsd:string" default="">
            <doc title="v-correlation-id" xml:lang="en">Unique transaction Id. Will be generated if not provided and returned in response headers.</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">Response is UP or DOWN of Launchpad &amp; it's downstream system.</doc>
          <representation element="schemas:Gethealth200_Response0" mediaType="application/json" />
        </response>
      </method>
    </resource>
  </resources>
</application>