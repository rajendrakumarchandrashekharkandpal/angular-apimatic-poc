openapi: 3.0.0
info:
  title: 'Launchpad: Non-POS Merchant Boarding'
  description: >
    The Launchpads Merchant Boarding API allows Worldpay partners to onboard merchants to Worldpay's Payments Platform. Please see the Getting Started page for more information. </br> </br> To contact our certifications team, please email <a href="mailto:Certification2@fisglobal.com">Certification2@fisglobal.com</a>.   </br> To contact the product team, please email <a href="mailto:APICustomerIntegration@fisglobal.com">APICustomerIntegration@fisglobal.com</a>.
  contact:
    email: Certification2@fisglobal.com
  version: '2.6.2'
servers:
- url: https://apis.cert.worldpay.com/merchant-boarding/v2
  variables: {}
- url: https://apis.cert.worldpay.com/merchant-boarding/v1
  variables: {}
paths:
  /applications:
    get:
      tags:
      - Initiate Boarding Application
      summary: FetchApplication
      description: Retrieves existing application data.
      operationId: FetchApplication
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingApplication'
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
    put:
      tags:
      - Initiate Boarding Application
      summary: ExisitingApplication
      description: This endpoint allows merchants to update an existing application with new information.
      operationId: ExisitingApplication
      parameters:
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExistingApplication_1'
        required: true
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content: {}
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
    post:
      tags:
      - Initiate Boarding Application
      summary: NewApplication
      description: 'Use this endpoint to collect the merchant information needed to initiate a new contract. '
      operationId: NewApplication
      parameters:
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      responses:
        '201':
          description: Created
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
  /equipment/supported:
    get:
      tags:
      - Equipment Lookup
      summary: GetEquipmentSupported
      description: Retrieve applicable equipment for an existing application.
      operationId: GetEquipmentSupported
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
  /terminal/additional-configurations:
    get:
      tags:
      - Equipment Lookup
      summary: GetAdditionalConfigurations
      description: Fetches a list of valid terminal customizations and peripherals, such as electing to password protect a void.
      operationId: GetAdditionalConfigurations
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: logicalApplicationId
        in: header
        description: Logical App ID of the terminal.
        style: simple
        schema:
          type: string
          example: '1073'
      responses:
        '200':
          description: Response is a list of valid terminal configurations.
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalConfigurationsResponse'
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
  /equipment/terminal-var:
    get:
      tags:
      - Choose Equipment
      summary: GetTerminalInfo
      description: Gets the terminal configuration information for a specific partner.
      operationId: GetTerminalInfo
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: Content-Type
        in: header
        description: Indicates the media type of the request-body. Accepts application/json.
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/Content-Type'
          - description: Indicates the media type of the request-body. Accepts application/json.
      - name: locationId
        in: header
        description: The locationId returned from POST /locations call.
        style: simple
        schema:
          type: string
      - name: merchantId
        in: header
        description: The merchantId returned from POST /merchants call.
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentSetup'
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
    put:
      tags:
      - Choose Equipment
      summary: UpdateTerminal
      description: Updates terminal configurations.
      operationId: UpdateTerminal
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: locationId
        in: header
        description: The locationId returned from POST /locations call.
        style: simple
        schema:
          type: string
      - name: merchantId
        in: header
        description: The merchantId returned from POST /merchants call.
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/EquipmentSetup'
              - example:
                  shippingOption: next day
                  terminals:
                  - terminalConfigs:
                      requestId: '41231'
                      terminalId: '67'
                      terminalModel: VAR - Xpient Solutions
                      price: 187.99
                      quantity: 1
                      logicalApplicationId: '194'
                      accessMethod: SSL
                      paymentMethod: PURCHASE / SALE
                      environmentName: Restaurant
                    products:
                    - productId: '1'
                      productName: Credit
            examples:
              Partners - Standalone Terminals:
                value:
                  shippingOption: next day
                  terminals:
                  - terminalConfigs:
                      requestId: '41231'
                      terminalId: '67'
                      terminalModel: VAR - Xpient Solutions
                      price: 187.99
                      quantity: 1
                      logicalApplicationId: '194'
                      accessMethod: SSL
                      paymentMethod: PURCHASE / SALE
                      environmentName: Restaurant
                    products:
                    - productId: '1'
                      productName: Credit
        required: true
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content: {}
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
    post:
      tags:
      - Choose Equipment
      summary: ConfigStandaloneTerminal
      description: Sets up terminal configurations.
      operationId: ConfigStandaloneTerminal
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: locationId
        in: header
        description: The locationId returned from POST /locations call.
        style: simple
        schema:
          type: string
      - name: merchantId
        in: header
        description: The merchantId returned from POST /merchants call.
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/EquipmentSetup'
              - example:
                  shippingOption: next day
                  terminals:
                  - terminalConfigs:
                      requestId: '41231'
                      terminalId: '67'
                      terminalModel: VAR - Xpient Solutions
                      price: 187.99
                      quantity: 1
                      logicalApplicationId: '194'
                      accessMethod: SSL
                      paymentMethod: PURCHASE / SALE
                      environmentName: Restaurant
                    products:
                    - productId: '1'
                      productName: Credit
            examples:
              Partners - Standalone Terminals:
                value:
                  shippingOption: next day
                  terminals:
                  - terminalConfigs:
                      requestId: '41231'
                      terminalId: '67'
                      terminalModel: VAR - Xpient Solutions
                      price: 187.99
                      quantity: 1
                      logicalApplicationId: '194'
                      accessMethod: SSL
                      paymentMethod: PURCHASE / SALE
                      environmentName: Restaurant
                    products:
                    - productId: '1'
                      productName: Credit
        required: true
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content: {}
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
  /applications/validate:
    put:
      tags:
      - Submit Application
      summary: validateBoard
      description: Begins the merchant validation process before boarding after all necessary information has been submitted to the API. Please see the reference guide for specific boarding requirements.
      operationId: validateBoard
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: Content-Type
        in: header
        description: Indicates the media type of the request-body. Accepts application/json.
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/Content-Type'
          - description: Indicates the media type of the request-body. Accepts application/json.
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content: {}
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
  /applications/board:
    put:
      tags:
      - Submit Application
      summary: InititateBoard
      description: Begins the merchant boarding process after all necessary information has been submitted to the API. Please see the reference guide for specific boarding requirements.
      operationId: InititateBoard
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: Content-Type
        in: header
        description: Indicates the media type of the request-body. Accepts application/json.
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/Content-Type'
          - description: Indicates the media type of the request-body. Accepts application/json.
      - name: threatmetrixId
        in: header
        description: A unique session id
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content: {}
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
  /applications/status:
    get:
      tags:
      - Check Application Status
      summary: GetApplicationStatus
      description: Retrieves the status of a contract when passed with an externalRefID. Both the externalRefID and authorization header are required.
      operationId: GetApplicationStatus
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      responses:
        '200':
          description: >-
            Success


            ApplicationStatus gives following Information,


            - 'contractStatus' - Current status of contract processing.


            - 'description' - Detailed description of the contractStatus.
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStatus'
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
  /applications/status/history:
    get:
      tags:
      - Check Application Status
      summary: fetchApplicationStatusHistory
      description: Use this endpoint to get a application's status history.
      operationId: fetchApplicationStatusHistory
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusHistoryResponse'
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
  /applications/status/signers:
    get:
      tags:
      - Check Application Status
      summary: fetchSignerStatus
      description: Use this endpoint to get signer status
      operationId: fetchSignerStatus
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: Content-Type
        in: header
        description: Indicates the media type of the request-body. Accepts application/json.
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/Content-Type'
          - description: Indicates the media type of the request-body. Accepts application/json.
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignerStatus'
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
  /contracts:
    get:
      tags:
      - Review and Sign Contract
      summary: GetContract
      description: Returns a PDF contract to be signed.
      operationId: GetContract
      parameters:
      - name: externalRefId
        in: header
        description: The externalRefId returned from POST /applications call.
        required: true
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      responses:
        '200':
          description: Response is a PDF file.
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content:
            application/pdf:
              schema: {}
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
  /applications/documentlink:
    post:
      tags:
      - Review and Sign Contract
      summary: DocusignLink
      description: Retrieves a Docusign link to view the contract.
      operationId: DocusignLink
      parameters:
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentLink'
        required: true
      responses:
        '200':
          description: Success
          headers:
            v-correlation-id:
              description: Unique transaction Id. Will be generated if not provided and returned in response headers.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Unique transaction Id. Will be generated if not provided and returned in response headers.
                    format: uuid
                    example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
                  example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocuSignLink'
        default:
          description: Default errors
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - example:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
              examples:
                400 Bad Request:
                  description: Bad Request
                  value:
                    httpStatusCode: 400
                    httpStatusMessage: BAD_REQUEST
                    errors:
                    - errorCode: PARAMETER_VALIDATION_ERROR
                      errorMessage: PartnerId is missing in header.
                      target: partnerId
                401 Unauthorized:
                  value:
                    httpStatusCode: 401
                    httpStatusMessage: Invalid API Key
                    errors:
                    - errorCode: INVALID_API_KEY
                      errorMessage: Invalid API key. Please ensure the key is accurate and authorization is included.
                      target: Authorization
                403 Forbidden:
                  value:
                    httpStatusCode: 403
                    httpStatusMessage: AUTH-ERROR
                    errors:
                    - errorCode: AUTH_ERROR
                      errorMessage: Invalid Authorization header. Please ensure the license token is valid and properly formatted.
                      target: Authorization
                404 Not Found:
                  value:
                    httpStatusCode: 404
                    httpStatusMessage: STATUS-MESSAGE
                    errors:
                    - errorCode: ERROR_CODE
                      errorMessage: Error message here.
                      target: Target
                412 Pre Condition:
                  value:
                    httpStatusCode: 412
                    httpStatusMessage: PRECONDITION_FAILED
                    errors:
                    - errorCode: ERROR_VALIDATION_REQUEST_PARAM
                      errorMessage: 'JSONMappingException: Cannot deserialize.'
                      target: Bad Contract Request
                415 Bad content Type:
                  value:
                    httpStatusCode: 415
                    httpStatusMessage: Bad-Content-Type
                    errors:
                    - errorCode: BAD_CONTENT_TYPE
                      errorMessage: text/xml is not supported.
                      target: Bad Content Type
                500 Server Error:
                  value:
                    httpStatusCode: 500
                    httpStatusMessage: env:Client
                    errors:
                    - errorCode: Internal Error
                      errorMessage: Internal Client Error
                      target: exampleTarget
      deprecated: false
  /applications/health:
    get:
      tags:
      - Check Launchpad health
      summary: Gethealth
      description: Checks the the health of Launchpad and its dependent down streams systems like CPQ, Sales Force, XAA and Jigsaw at regular intervals to check the system is up or down.
      operationId: Gethealth
      parameters:
      - name: v-correlation-id
        in: header
        description: Unique transaction Id. Will be generated if not provided and returned in response headers.
        style: simple
        schema:
          type: string
          format: uuid
          example: 3fcb1437-4e52-4946-9ae1-e618351b6d16
      responses:
        '200':
          description: Response is UP or DOWN of Launchpad & it's downstream system.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
      deprecated: false
components:
  schemas:
    Schema:
      title: Schema
      type: object
      properties:
        id:
          type: integer
          format: int64
    ExistingApplication:
      title: ExistingApplication
      required:
      - externalRefId
      - businessInfo
      - transactionInfo
      type: object
      properties:
        externalRefId:
          maxLength: 36
          pattern: ([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})
          type: string
          description: A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.
          example: df8a6d82-3bb4-4f3b-ba18-57a5981ede8e
        leadSource:
          maxLength: 12
          type: string
          description: The source of a lead.
          example: Activate
        businessInfo:
          $ref: '#/components/schemas/BusinessInfo'
        transactionInfo:
          $ref: '#/components/schemas/TransactionInfo'
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Owner'
          description: ''
        guarantors:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Guarantor'
          description: Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.
        authorizedSigners:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedSigner'
          description: ''
        contacts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        addresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: ''
          example:
          - type: Mailing Address
            addressLine1: 1234 W Tester Ave.
            city: City Town
            state: CO
            country: United States
            postalCode: '80123'
            postalCodeExtension: '1234'
          - type: Physical Address
            addressLine1: 1234 W Tester Ave.
            city: City Town
            state: CO
            country: United States
            postalCode: '80123'
            postalCodeExtension: '1234'
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
        salesAgent:
          allOf:
          - $ref: '#/components/schemas/SalesAgent'
          - description: The agent who is submitting the deal.
        installationContact:
          allOf:
          - $ref: '#/components/schemas/InstallationContact'
          - description: The Technical Agent who is going to do setup.
        routeToSalesRep:
          type: boolean
          description: Used to route a application to a worldpay or partner sales rep. By default the API is configured to route to a Worldpay sales rep. If you would like to route to partner (Launchpad UI) please work with your implementation consultant.
          example: false
    BusinessInfo:
      title: BusinessInfo
      required:
      - dbaName
      - legalName
      - ownershipType
      - mccCode
      type: object
      properties:
        dbaName:
          maxLength: 50
          minLength: 1
          type: string
          description: The merchant name they do business as.  Generally with what their customers know the business.
          example: The DBA Name
        legalName:
          maxLength: 50
          minLength: 1
          type: string
          description: Business Legal Name as filed with the IRS.
          example: Timothy Jones
        ownershipType:
          allOf:
          - $ref: '#/components/schemas/OwnershipType'
          - description: Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).
            example: LLC
        mccCode:
          maxLength: 4
          minLength: 4
          type: string
          description: SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.
          example: '5812'
        businessEstablishedDate:
          type: string
          description: Date (CCYY-MM-DD) on which the merchant's business was established.
          format: date
          example: 2000-03-23
        websiteUrl:
          maxLength: 80
          minLength: 0
          type: string
          description: The URL of the merchant's website.
          example: www.thefoodplace.com
        numberOfLocation:
          type: integer
          description: Number of current locations.
          format: int32
          example: 2
        federalTaxId:
          maxLength: 9
          minLength: 9
          pattern: ^[0-9]{9}$
          type: string
          description: The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.
          example: '123456789'
        paymentAcceptanceMethod:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAcceptanceMethod'
          description: The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.
          example:
          - inPerson
          - onlineSite
        pciadc:
          allOf:
          - $ref: '#/components/schemas/Pciadc'
          - description: Indication if the merchant has had an account data compromise.
            example: No
        pcidssValidated:
          allOf:
          - $ref: '#/components/schemas/PcidssValidated'
          - description: Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.
            example: No
        surroundingArea:
          allOf:
          - $ref: '#/components/schemas/SurroundingArea'
          - description: Type of area surroundning the business.
            example: Commercial
        productServiceSold:
          maxLength: 40
          minLength: 1
          pattern: (^[-a-zA-Z0-9_ &()*+,./:;=_'‘]{1,40}$)
          type: string
          description: Type of goods or services sold.
          example: Food
        ownAddYears:
          maximum: 99
          minimum: 0
          type: integer
          description: Years the business has been operating in their current location.
          format: int32
          example: 2
        lengthOfContract:
          pattern: ([0-9]{3})$
          type: string
          description: Inital contract term in months.
        seasonal:
          allOf:
          - $ref: '#/components/schemas/Seasonal'
          - description: Does the business operate seasonally?
            example: Yes
        activeMonths:
          type: array
          items:
            $ref: '#/components/schemas/ActiveMonth'
          description: The months during which the business is actively operating.
          example:
          - Jan
          - Feb
          - Mar
        warranty:
          allOf:
          - $ref: '#/components/schemas/Warranty'
          - description: Does the business offer warranties, dues, subscriptions, memberships, or other extended services?
            example: 1 YEAR
        returnPolicy:
          allOf:
          - $ref: '#/components/schemas/ReturnPolicy'
          - description: The business's return policy.
            example: 30 Day
        taxExempt:
          $ref: '#/components/schemas/TaxExempt'
        acceptCreditCards:
          allOf:
          - $ref: '#/components/schemas/AcceptCreditCards'
          - description: Does the business accept credit cards?
    TransactionInfo:
      title: TransactionInfo
      required:
      - annualSalesVolume
      - percentRetailSwipedTransactions
      type: object
      properties:
        annualSalesVolume:
          maximum: 9999999999999.99
          minimum: 0
          type: number
          description: Projected annual sales volume.
          example: 20000.12
        percentRetailSwipedTransactions:
          maximum: 100
          minimum: 0
          type: integer
          description: Projected Percentage of daily card-present transactions.
          format: int32
          example: 82
        averageTicket:
          maximum: 9999999.99
          minimum: 0
          type: number
          description: Average ticket dollar amount.
          example: 2.3
        highestTicket:
          maximum: 9999999.99
          minimum: 0
          type: number
          description: Highest ticket dollar amount.
          example: 32.41
        currentProcessor:
          type: string
          description: the current processor
          example: Global Payments
        acceptChargebacks:
          allOf:
          - $ref: '#/components/schemas/AcceptChargebacks'
          - description: Do you have more than 25 chargeback accepted in the last 12 months?
            example: No
        chargebackPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: >-
            Projected chargeback percentage.


            ```Required when acceptChargebacks is 'Yes'```


            ```Optional when acceptChargebacks is null or 'No'.```
          format: int32
          example: 0
        returnPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: Projected return percent of  goods sold
          format: int32
          example: 10
        cardNotPresentPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: Percent of card not present transactions.
          format: int32
          example: 20
        businessToBusinessPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: Percent of business-to-business transactions.
          format: int32
          example: 20
        internetTransactionPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: Percent of internet transactions.
          format: int32
          example: 10
        annualCreditSalesVolume:
          maximum: 999999999.99
          minimum: 0
          type: number
          description: Projected annual credit card sales volume.
          example: 123.32
        annualDebitSalesVolume:
          maximum: 999999999.99
          minimum: 0
          type: number
          description: Projected annual debit card sales volume.
          example: 32.23
        annualAmexVolume:
          maximum: 999999999.99
          minimum: 0
          type: number
          description: Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```
          example: 10000
        amexAverageTicket:
          maximum: 9999999.99
          minimum: 0
          type: number
          description: >-
            AverageTicket dollar amount for Amex.
             ```This field is required when you opt-in for Amex```
          example: 2.3
        averageNumberofDays:
          minimum: 0
          type: integer
          description: Average number of days from when cardholder is charged & when products or services are received IN FULL by cardholder.
          format: int32
          example: 10
    Owner:
      title: Owner
      required:
      - type
      - firstName
      - lastName
      - phoneNumber
      - email
      - addressLine1
      - city
      - state
      - country
      - postalCode
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: The Owner Type. Please note the above Ownership Types where a Control Owner is required.
        title:
          maxLength: 30
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Required for AMEX acquired merchants otherwise optional.
          example: President
        firstName:
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: First name. Region based validations will be applied to this field.
          example: Todd
        middleInitial:
          maxLength: 1
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Middle initial.
          example: M
        lastName:
          maxLength: 25
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Last name. Region based validations will be applied to this field.
          example: Davis
        phoneNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit phone number of the format  5131234567.
          example: '5131234567'
        phoneNumberExt:
          maxLength: 8
          pattern: ^[0-9]{1,8}$
          type: string
          description: Phone number extension. Up to 8 digits of the format 12345678.
          example: '1234'
        phoneType:
          allOf:
          - $ref: '#/components/schemas/PhoneType'
          - description: Phone type.
            example: mobile
        alternatePhone:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit alternate phone number of the format  5131234567.
          example: '5131234567'
        alternatePhoneType:
          allOf:
          - $ref: '#/components/schemas/AlternatePhoneType'
          - description: Alternate phone type.
            example: home
        faxNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit fax number of the format 5131234567
          example: '5131234567'
        email:
          maxLength: 64
          minLength: 1
          pattern: '\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}'
          type: string
          description: Email address of the contact. Must have @ and a .
          example: test@gmail.com
        ownershipPercentage:
          maximum: 100
          minimum: 0
          type: integer
          description: Ownership stake percentage.
          format: int32
        ssn:
          pattern: ^[0-9]{9}$
          type: string
          description: Social security number. Do not include dashes.
          example: '123456789'
        dob:
          type: string
          description: Date of Birth (CCYY-MM-DD). Must be at least 18 years old.
          format: date
          example: 2000-03-23
        addressLine1:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 1. Field for house number, street and direction.
          example: 4355 N Coalwhipe St.
        addressLine2:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 2. Field for apartment or suite numbers, etc.
          example: suite 104
        city:
          maxLength: 28
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          example: Denver
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: Valid US state, commonwealth, and territory codes are allowed.
            example: CO
        country:
          enum:
          - United States
          type: string
          description: Only United States is allowed.
        postalCode:
          maxLength: 5
          minLength: 5
          pattern: ^[0-9]{5}$
          type: string
          description: Postal code / zip code. The postal code must be valid for the address' country code.
          example: '12345'
        postalCodeExtension:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Postal code / zip code extension.  The postal code extension must be valid for the address' country code.
          example: '1234'
        identification:
          type: array
          items:
            $ref: '#/components/schemas/Identification'
          description: Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.
      description: A Control Owner is required for the following ownership types > LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT
      example:
        type: Control Owner Contact
        title: Owner
        firstName: Timothy
        middleInitial: M
        lastName: Jones
        phoneNumber: '1234567890'
        phoneNumberExt: '1234'
        faxNumber: '1234567890'
        email: test@test.com
        ownershipPercentage: 23
        ssn: '123456789'
        dob: 2000-03-23
        addressLine1: 4355 N Coalwhipe St.
        city: City Town
        state: OH
        country: United States
        postalCode: '80123'
        postalCodeExtension: '1234'
    PhoneType:
      title: PhoneType
      enum:
      - mobile
      - home
      type: string
      description: Phone type.
      example: mobile
    AlternatePhoneType:
      title: AlternatePhoneType
      enum:
      - mobile
      - home
      type: string
      description: Alternate phone type.
      example: home
    State:
      title: State
      enum:
      - AK
      - AL
      - AR
      - AS
      - AZ
      - CA
      - CO
      - CT
      - DC
      - DE
      - FL
      - FM
      - GA
      - GU
      - HI
      - IA
      - ID
      - IL
      - IN
      - KS
      - KY
      - LA
      - MA
      - MD
      - ME
      - MH
      - MI
      - MN
      - MO
      - MP
      - MS
      - MT
      - NC
      - ND
      - NE
      - NH
      - NJ
      - NM
      - NV
      - NY
      - OH
      - OK
      - OR
      - PA
      - PR
      - PW
      - RI
      - SC
      - SD
      - TN
      - TX
      - UT
      - VA
      - VI
      - VT
      - WA
      - WI
      - WV
      - WY
      type: string
      description: Valid US state, commonwealth, and territory codes are allowed.
      example: CO
    Country:
      title: Country
      enum:
      - United States
      type: string
      description: Only United States is allowed.
    Identification:
      title: Identification
      required:
      - idType
      - idNumber
      type: object
      properties:
        idType:
          allOf:
          - $ref: '#/components/schemas/IdType'
          - description: Type of ID provided by the owner.
            example: PASSPORT
        idNumber:
          maxLength: 40
          type: string
          description: Owner's ID number.
          example: '312312341'
        issuedCity:
          maxLength: 28
          type: string
          description: City in which ID was issued.
          example: City Town
        issuedState:
          allOf:
          - $ref: '#/components/schemas/IssuedState'
          - maxLength: 2
            description: Valid state code where ID was issued.
            example: CO
        issuedCountry:
          maxLength: 2
          type: string
          description: Country where ID was issued.
          example: US
        dateIssued:
          type: string
          description: Date ID was issued (CCYY-MM-DD).
          format: date
          example: 1999-01-30
        dateExpires:
          type: string
          description: Date ID expires (CCYY-MM-DD).
          format: date
          example: 2020-02-11
    Guarantor:
      title: Guarantor
      required:
      - type
      - firstName
      - lastName
      - phoneNumber
      - email
      - addressLine1
      - city
      - state
      - country
      - postalCode
      type: object
      properties:
        type:
          enum:
          - Guarantor 1 Contact
          type: string
          example: Guarantor 1 Contact
        title:
          maxLength: 30
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Required for AMEX acquired merchants otherwise optional.
          example: President
        firstName:
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: First name. Region based validations will be applied to this field.
          example: Todd
        middleInitial:
          maxLength: 1
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Middle initial.
          example: M
        lastName:
          maxLength: 25
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Last name. Region based validations will be applied to this field.
          example: Davis
        phoneNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit phone number of the format  5131234567.
          example: '5131234567'
        phoneNumberExt:
          maxLength: 8
          pattern: ^[0-9]{1,8}$
          type: string
          description: Phone number extension. Up to 8 digits of the format 12345678.
          example: '1234'
        phoneType:
          allOf:
          - $ref: '#/components/schemas/PhoneType'
          - description: Phone type.
            example: mobile
        alternatePhone:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit alternate phone number of the format  5131234567.
          example: '5131234567'
        alternatePhoneType:
          allOf:
          - $ref: '#/components/schemas/AlternatePhoneType'
          - description: Alternate phone type.
            example: home
        faxNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit fax number of the format 5131234567
          example: '5131234567'
        email:
          maxLength: 64
          minLength: 1
          pattern: '\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}'
          type: string
          description: Email address of the contact. Must have @ and a .
          example: test@gmail.com
        ownershipPercentage:
          maximum: 100
          minimum: 0
          type: integer
          description: Ownership stake percentage.
          format: int32
        ssn:
          pattern: ^[0-9]{9}$
          type: string
          description: Social security number. Do not include dashes.
          example: '123456789'
        dob:
          type: string
          description: Date of Birth (CCYY-MM-DD). Must be at least 18 years old.
          format: date
          example: 2000-03-23
        addressLine1:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 1. Field for house number, street and direction.
          example: 4355 N Coalwhipe St.
        addressLine2:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 2. Field for apartment or suite numbers, etc.
          example: suite 104
        city:
          maxLength: 28
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          example: Denver
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: Valid US state, commonwealth, and territory codes are allowed.
            example: CO
        country:
          enum:
          - United States
          type: string
          description: Only United States is allowed.
        postalCode:
          maxLength: 5
          minLength: 5
          pattern: ^[0-9]{5}$
          type: string
          description: Postal code / zip code. The postal code must be valid for the address' country code.
          example: '12345'
        postalCodeExtension:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Postal code / zip code extension.  The postal code extension must be valid for the address' country code.
          example: '1234'
        identification:
          type: array
          items:
            $ref: '#/components/schemas/Identification'
          description: Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.
    AuthorizedSigner:
      title: AuthorizedSigner
      required:
      - roleName
      - signingExperience
      - signingOrder
      - firstName
      - lastName
      - phoneNumber
      - email
      - ssn
      - dob
      - addressLine1
      - city
      - state
      - country
      - postalCode
      type: object
      properties:
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleName'
          - description: >-
              The role of the signer. Please note the below.

               1) Merchant role name is mandatory.
               2) Required fields indicated in schema are those required for all role names other than "SalesRep"
               3) The "SalesRep" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email
               4) The "Signer2" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.
            example: Merchant
        signingExperience:
          allOf:
          - $ref: '#/components/schemas/SigningExperience'
          - description: Signing ceremony type
            example: email
        signingOrder:
          type: string
          description: Define the signing order for multiple signers
          example: '2'
        title:
          maxLength: 30
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Required for AMEX acquired merchants otherwise optional.
          example: President
        firstName:
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: First name. Region based validations will be applied to this field.
          example: Todd
        middleInitial:
          maxLength: 1
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Middle initial.
          example: M
        lastName:
          maxLength: 25
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Last name. Region based validations will be applied to this field.
          example: Davis
        phoneNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit phone number of the format  5131234567.
          example: '5131234567'
        phoneNumberExt:
          maxLength: 8
          pattern: ^[0-9]{1,8}$
          type: string
          description: Phone number extension. Up to 8 digits of the format 12345678.
          example: '1234'
        phoneType:
          allOf:
          - $ref: '#/components/schemas/PhoneType'
          - description: Phone type.
            example: mobile
        alternatePhone:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit alternate phone number of the format  5131234567.
          example: '5131234567'
        alternatePhoneType:
          allOf:
          - $ref: '#/components/schemas/AlternatePhoneType'
          - description: Alternate phone type.
            example: home
        faxNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit fax number of the format 5131234567
          example: '5131234567'
        email:
          maxLength: 64
          minLength: 1
          pattern: '\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}'
          type: string
          description: Email address of the contact. Must have @ and a .
          example: test@gmail.com
        ssn:
          pattern: ^[0-9]{9}$
          type: string
          description: Social security number. Do not include dashes.
          example: '123456789'
        dob:
          type: string
          description: Date of Birth (CCYY-MM-DD). Must be at least 18 years old.
          format: date
          example: 2000-03-23
        addressLine1:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 1. Field for house number, street and direction.
          example: 4355 N Coalwhipe St.
        addressLine2:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 2. Field for apartment or suite numbers, etc.
          example: suite 104
        city:
          maxLength: 28
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          example: Denver
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: Valid US state, commonwealth, and territory codes are allowed.
            example: CO
        country:
          enum:
          - United States
          type: string
          description: Only United States is allowed.
        postalCode:
          maxLength: 5
          minLength: 5
          pattern: ^[0-9]{5}$
          type: string
          description: Postal code / zip code. The postal code must be valid for the address' country code.
          example: '12345'
        postalCodeExtension:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Postal code / zip code extension.  The postal code extension must be valid for the address' country code.
          example: '1234'
        identification:
          type: array
          items:
            $ref: '#/components/schemas/Identification'
          description: Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.
    RoleName:
      title: RoleName
      enum:
      - SalesRep
      - Merchant
      - Reviewer
      - Signer2
      - Signer3
      - Signer4
      - Signer5
      - Signer6
      - Signer7
      - Signer8
      type: string
      description: >-
        The role of the signer. Please note the below.

         1) Merchant role name is mandatory.
         2) Required fields indicated in schema are those required for all role names other than "SalesRep"
         3) The "SalesRep" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email
         4) The "Signer2" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.
      example: Merchant
    SigningExperience:
      title: SigningExperience
      enum:
      - embed
      - email
      - wet
      type: string
      description: Signing ceremony type
      example: email
    Contact:
      title: Contact
      required:
      - type
      - firstName
      - lastName
      - phoneNumber
      - email
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type1'
          - description: "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST."
            example: Primary Contact
        title:
          maxLength: 30
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Required for AMEX acquired merchants otherwise optional.
          example: President
        firstName:
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: First name. Region based validations will be applied to this field.
          example: Todd
        middleInitial:
          maxLength: 1
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Middle initial.
          example: M
        lastName:
          maxLength: 25
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Last name. Region based validations will be applied to this field.
          example: Davis
        ssn:
          pattern: ^[0-9]{9}$
          type: string
          description: Social security number. Do not include dashes.
          example: '123456789'
        birthDate:
          type: string
          description: Date of Birth (CCYY-MM-DD). Must be at least 18 years old.
          format: date
          example: 2000-03-23
        phoneNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit phone number of the format  5131234567.
          example: '5131234567'
        phoneNumberExt:
          maxLength: 8
          pattern: ^[0-9]{1,8}$
          type: string
          description: Phone number extension. Up to 8 digits of the format 12345678.
          example: '1234'
        phoneType:
          allOf:
          - $ref: '#/components/schemas/PhoneType'
          - description: Phone type.
            example: mobile
        alternatePhone:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit alternate phone number of the format  5131234567.
          example: '5131234567'
        alternatePhoneType:
          allOf:
          - $ref: '#/components/schemas/AlternatePhoneType'
          - description: Alternate phone type.
            example: home
        email:
          maxLength: 64
          minLength: 1
          pattern: '\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}'
          type: string
          description: Email address of the contact. Must have @ and a .
          example: test@gmail.com
        faxNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit fax number of the format 5131234567
          example: '5131234567'
    Address:
      title: Address
      required:
      - type
      - addressLine1
      - city
      - state
      - country
      - postalCode
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/AddressType'
          - description: "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory."
            example: Physical Address
        addressLine1:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 1. Field for house number, street and direction.
          example: 4355 N Coalwhipe St.
        addressLine2:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 2. Field for apartment or suite numbers, etc.
          example: suite 104
        city:
          maxLength: 28
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          example: Denver
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: Valid US state, commonwealth, and territory codes are allowed.
            example: CO
        country:
          enum:
          - United States
          type: string
          description: Only United States is allowed.
        postalCode:
          maxLength: 5
          minLength: 5
          pattern: ^[0-9]{5}$
          type: string
          description: Postal code / zip code. The postal code must be valid for the address' country code.
          example: '12345'
        postalCodeExtension:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Postal code / zip code extension.  The postal code extension must be valid for the address' country code.
          example: '1234'
    AddressType:
      title: AddressType
      enum:
      - Mailing Address
      - Physical Address
      - Shipping Address
      type: string
      description: "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory."
      example: Physical Address
    BankAccount:
      title: BankAccount
      type: object
      properties:
        ddaType:
          allOf:
          - $ref: '#/components/schemas/DdaType'
          - description: Direct deposit account type.
            example: Checking
        achType:
          allOf:
          - $ref: '#/components/schemas/AchType'
          - description: Check deposit type
            example: Commercial Checking
        accountNumber:
          maxLength: 17
          minLength: 1
          type: string
          description: Direct deposit account number.  Maximum 17 characters.
          example: '011401545'
        routingNumber:
          maxLength: 9
          minLength: 9
          type: string
          description: Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.
          example: '102000076'
        bankName:
          type: string
          description: Bank name used for credit card processing services.
          example: Bank name
    SalesAgent:
      title: SalesAgent
      required:
      - firstName
      - lastName
      - email
      type: object
      properties:
        id:
          maxLength: 15
          minLength: 1
          type: string
          description: Id for the Sales Contact.
          example: U15315
        firstName:
          maxLength: 15
          minLength: 1
          type: string
          description: Sales agent's first name.
          example: John
        lastName:
          maxLength: 25
          minLength: 1
          type: string
          description: Sales agent's last name.
          example: Doe
        mobilePhoneNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: Sales agent's 10-digit phone number of the format 5131234567.
          example: '1234567890'
        email:
          maxLength: 64
          minLength: 1
          pattern: (\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}\\b{0,64})
          type: string
          description: Sales agent's email address.  Must have @ and a .
      description: The agent who is submitting the deal.
    InstallationContact:
      title: InstallationContact
      required:
      - firstName
      - lastName
      - email
      type: object
      properties:
        id:
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Id for Technical Contact
          example: U15318
        firstName:
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Contact's first name.
          example: Sam
        lastName:
          maxLength: 25
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Contact's last name.
          example: Doe
        mobilePhoneNumber:
          maxLength: 10
          minLength: 10
          pattern: ([0-9]{10})$
          type: string
          description: Contact's 10-digit phone number of the format 5131234567.
          example: '1234567890'
        email:
          maxLength: 64
          minLength: 1
          pattern: (\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}\\b{0,64})
          type: string
          description: Contact's email address. Must have @ and a .
      description: The Technical Agent who is going to do setup.
    ErrorResponse:
      title: ErrorResponse
      type: object
      properties:
        httpStatusCode:
          type: integer
          format: int32
          example: 404
        httpStatusMessage:
          type: string
          example: STATUS-MESSAGE
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          description: ''
    Error:
      title: Error
      type: object
      properties:
        errorCode:
          type: string
          example: ERROR_CODE
        errorMessage:
          type: string
          example: Error message here.
        target:
          type: string
          example: Target
    ExistingApplication_1:
      title: ExistingApplication_1
      required:
      - externalRefId
      - businessInfo
      - transactionInfo
      type: object
      properties:
        externalRefId:
          maxLength: 36
          pattern: ([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})
          type: string
          description: A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.
          example: df8a6d82-3bb4-4f3b-ba18-57a5981ede8e
        leadSource:
          maxLength: 12
          type: string
          description: The source of a lead.
          example: Activate
        businessInfo:
          $ref: '#/components/schemas/BusinessInfo_1'
        transactionInfo:
          $ref: '#/components/schemas/TransactionInfo_1'
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Owner_1'
          description: ''
        guarantors:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Guarantor_1'
          description: Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.
        authorizedSigners:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedSigner_1'
          description: ''
        contacts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact_1'
          description: ''
        addresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Address_1'
          description: ''
          example:
          - type: Mailing Address
            addressLine1: 1234 W Tester Ave.
            city: City Town
            state: CO
            country: United States
            postalCode: '80123'
            postalCodeExtension: '1234'
          - type: Physical Address
            addressLine1: 1234 W Tester Ave.
            city: City Town
            state: CO
            country: United States
            postalCode: '80123'
            postalCodeExtension: '1234'
        bankAccount:
          allOf:
          - $ref: '#/components/schemas/BankAccount_1'
          - description: Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber & bankName.
        advancedSettelment:
          type: array
          items:
            $ref: '#/components/schemas/AdvancedSettlement_inner'
          description: ''
        salesAgent:
          allOf:
          - $ref: '#/components/schemas/SalesAgent_1'
          - description: The agent who is submitting the deal. It is an optional object. It becomes required, when  partner wants to route deals to their own sales rep. Please work with your integration specialist for route to sales rep functionality.
        installationContact:
          allOf:
          - $ref: '#/components/schemas/InstallationContact'
          - description: The Technical Agent who is going to do setup.
        routeToSalesRep:
          type: boolean
          description: Used to route a application to a worldpay or partner sales rep. By default the API is configured to route to a Worldpay sales rep. If you would like to route to partner (Launchpad UI) please work with your implementation consultant.
          example: false
    BusinessInfo_1:
      title: BusinessInfo_1
      required:
      - dbaName
      - legalName
      - ownershipType
      - mccCode
      type: object
      properties:
        dbaName:
          maxLength: 50
          minLength: 1
          type: string
          description: The merchant name they do business as.  Generally with what their customers know the business.
          example: The DBA Name
        legalName:
          maxLength: 40
          minLength: 1
          pattern: ^([a-z0-9& -]{1,40})$
          type: string
          description: Business Legal Name as filed with the IRS.
        ownershipType:
          allOf:
          - $ref: '#/components/schemas/OwnershipType'
          - description: Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).
            example: LLC
        mccCode:
          maxLength: 4
          minLength: 4
          type: string
          description: SIC Code / MCC Code (Merchant Category Code) is the code use to describe what the merchant is selling. Use MCC look up call to search valid codes, with sort and long description to find the MCC that most closely matches what the merchant is selling.
          example: '5812'
        businessEstablishedDate:
          type: string
          description: Date (CCYY-MM-DD) on which the merchant's business was established.
          format: date
          example: 2000-03-23
        websiteUrl:
          maxLength: 80
          minLength: 0
          type: string
          description: The URL of the merchant's website.
          example: www.thefoodplace.com
        numberOfLocation:
          type: integer
          description: Number of current locations.
          format: int32
          example: 2
        federalTaxId:
          maxLength: 9
          minLength: 9
          pattern: ^([a-z0-9& -]{1,40})$
          type: string
          description: >-
            The Federal Tax ID is the business Tax Identification Number (TIN) or Employer Identification Number (EIN). If the business is a sole proprietor they may use the social security number of the sole proprietor.The full list of restricted federal tax id-
              “000000000” “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009" "111111110" “111111111” "111111112" "111111113" "111111114" "111111115" "111111116" "111111117" "111111118" "111111119" "222222220" "222222221" “222222222” "222222223" "222222224" "222222225" "222222226" "222222227" "222222228" "222222229" "333333330" "333333331" "333333332" “333333333” "333333334" "333333335" "333333336" "333333337" "333333338" "333333339"  "444444440" "444444441" "444444442" "444444443" “444444444” "444444445" "444444446" "444444447" "444444448" "444444449" "555555550" "555555551" "555555552" "555555553" "555555554" “555555555” "555555556" "555555557" "555555558" "555555559"  "666666660" "666666661" "666666662" "666666663" "666666664" "666666665" “666666666” "666666667" "666666668" "666666669" "777777770" "777777771” "777777772" "777777773" "777777774" "777777775" "777777776" “777777777” "777777778" "777777779" "888888880" "888888881" "888888882" "888888883" "888888884" "888888885" "888888886" "888888887" “888888888” "888888889"  "999999990" "999999991" "999999992" "999999993" "999999994" "999999995" "99999996"   "999999997" "999999998" “999999999”  "123456780" to "123456789" "123123123"
          example: '123456781'
        paymentAcceptanceMethod:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAcceptanceMethod'
          description: The ways in which the business is accepting payments. Multiple options may be selected. 'In person', would be card present at a brick and mortar store, 'onlinesite' would be card not present use on an ecommerce website, and 'phoneormailorder' would be card not present used for mail and telephone orders.
          example:
          - inPerson
          - onlineSite
        pciadc:
          allOf:
          - $ref: '#/components/schemas/Pciadc'
          - description: Indication if the merchant has had an account data compromise.
            example: No
        pcidssValidated:
          allOf:
          - $ref: '#/components/schemas/PcidssValidated'
          - description: Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.
            example: No
        surroundingArea:
          allOf:
          - $ref: '#/components/schemas/SurroundingArea'
          - description: Type of area surroundning the business.
            example: Commercial
        productServiceSold:
          maxLength: 40
          minLength: 1
          pattern: (^[-a-zA-Z0-9_ &()*+,./:;=_'‘]{1,40}$)
          type: string
          description: Type of goods or services sold.
          example: Food
        ownAddYears:
          maximum: 99
          minimum: 0
          type: integer
          description: Years the business has been operating in their current location.
          format: int32
          example: 2
        lengthOfContract:
          pattern: ([0-9]{3})$
          type: string
          description: Inital contract term in months.
        seasonal:
          allOf:
          - $ref: '#/components/schemas/Seasonal'
          - description: Does the business operate seasonally?
            example: Yes
        activeMonths:
          type: array
          items:
            $ref: '#/components/schemas/ActiveMonth'
          description: The months during which the business is actively operating.
          example:
          - Jan
          - Feb
          - Mar
        warranty:
          allOf:
          - $ref: '#/components/schemas/Warranty'
          - description: Does the business offer warranties, dues, subscriptions, memberships, or other extended services?
            example: 1 YEAR
        returnPolicy:
          allOf:
          - $ref: '#/components/schemas/ReturnPolicy'
          - description: The business's return policy.
            example: 30 Day
        taxExempt:
          $ref: '#/components/schemas/TaxExempt'
        acceptCreditCards:
          allOf:
          - $ref: '#/components/schemas/AcceptCreditCards'
          - description: Does the business accept credit cards?
        govOwnedMerchantCountry:
          type: string
          description: If merchant is a government entity or an entity at least 50% owned or controlled by government entity than provide 2 digit country code which belongs to the country.
          example: US
    TransactionInfo_1:
      title: TransactionInfo_1
      required:
      - annualSalesVolume
      - percentRetailSwipedTransactions
      type: object
      properties:
        annualSalesVolume:
          maximum: 9999999999999.99
          minimum: 0
          type: number
          description: Projected annual sales volume.
          example: 20000.12
        percentRetailSwipedTransactions:
          maximum: 100
          minimum: 0
          type: integer
          description: Projected Percentage of daily card-present transactions.
          format: int32
          example: 82
        averageTicket:
          maximum: 9999999.99
          minimum: 0
          type: number
          description: Average ticket dollar amount.
          example: 2.3
        highestTicket:
          maximum: 9999999.99
          minimum: 0
          type: number
          description: Highest ticket dollar amount.
          example: 32.41
        currentProcessor:
          type: string
          description: the current processor
          example: Global Payments
        acceptChargebacks:
          allOf:
          - $ref: '#/components/schemas/AcceptChargebacks'
          - description: Do you have more than 25 chargeback accepted in the last 12 months?
            example: No
        chargebackPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: >-
            Projected chargeback percentage.


            ```Required when acceptChargebacks is 'Yes'```


            ```Optional when acceptChargebacks is null or 'No'.```
          format: int32
          example: 0
        returnPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: Projected return percent of  goods sold
          format: int32
          example: 10
        cardNotPresentPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: Percent of card not present transactions.
          format: int32
          example: 20
        businessToBusinessPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: Percent of business-to-business transactions.
          format: int32
          example: 20
        internetTransactionPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: Percent of internet transactions.
          format: int32
          example: 10
        inPersonTransactionPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: Percent of in person transactions.
          format: int32
          example: 10
        motoTransactionPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: Percent of mail or phone order transactions.
          format: int32
          example: 10
        annualCreditSalesVolume:
          maximum: 999999999.99
          minimum: 0
          type: number
          description: Projected annual credit card sales volume.
          example: 123.32
        annualDebitSalesVolume:
          maximum: 999999999.99
          minimum: 0
          type: number
          description: Projected annual debit card sales volume.
          example: 32.23
        annualAmexVolume:
          maximum: 999999999.99
          minimum: 0
          type: number
          description: Projected annual Amex volume. ``` This field is required when you opt-in for Amex ```
          example: 10000
        amexAverageTicket:
          maximum: 9999999.99
          minimum: 0
          type: number
          description: >-
            AverageTicket dollar amount for Amex.
             ```This field is required when you opt-in for Amex```
          example: 2.3
        averageNumberofDays:
          maximum: 365
          minimum: 0
          type: integer
          description: Average number of days from when cardholder is charged & when products or services are received IN FULL by cardholder.
          format: int32
          example: 10
        needsProcessingBy:
          type: string
          description: Date (CCYY-MM-DD) by which the Equipment needs to be setup. This field may be required for a given partner.
          format: date
          example: 2022-11-01
    Owner_1:
      title: Owner_1
      required:
      - type
      - firstName
      - lastName
      - phoneNumber
      - email
      - addressLine1
      - city
      - state
      - country
      - postalCode
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: The Owner Type. Please note the above Ownership Types where a Control Owner is required.
        title:
          maxLength: 30
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Required for AMEX acquired merchants otherwise optional.
          example: President
        firstName:
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: First name. Region based validations will be applied to this field.
          example: Todd
        middleInitial:
          maxLength: 1
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Middle initial.
          example: M
        lastName:
          maxLength: 25
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Last name. Region based validations will be applied to this field.
          example: Davis
        phoneNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit phone number of the format  5131234567.
          example: '5131234567'
        phoneNumberExt:
          maxLength: 8
          pattern: ^[0-9]{1,8}$
          type: string
          description: Phone number extension. Up to 8 digits of the format 12345678.
          example: '1234'
        phoneType:
          allOf:
          - $ref: '#/components/schemas/PhoneType'
          - description: Phone type.
            example: mobile
        alternatePhone:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit alternate phone number of the format  5131234567.
          example: '5131234567'
        alternatePhoneType:
          allOf:
          - $ref: '#/components/schemas/AlternatePhoneType'
          - description: Alternate phone type.
            example: home
        faxNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit fax number of the format 5131234567
          example: '5131234567'
        email:
          maxLength: 64
          minLength: 1
          pattern: '\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}'
          type: string
          description: Email address of the contact. Must have @ and a .
          example: test@gmail.com
        ownershipPercentage:
          maximum: 100
          minimum: 0
          type: integer
          description: Ownership stake percentage.
          format: int32
        ssn:
          pattern: ^[0-9]{9}$
          type: string
          description: Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009" "111111110" “111111111” "111111112" "111111113" "111111114" "111111115" "111111116" "111111117" "111111118" "111111119" "222222220" "222222221" “222222222” "222222223" "222222224" "222222225" "222222226" "222222227" "222222228" "222222229" "333333330" "333333331" "333333332" “333333333” "333333334" "333333335" "333333336" "333333337" "333333338" "333333339"  "444444440" "444444441" "444444442" "444444443" “444444444” "444444445" "444444446" "444444447" "444444448" "444444449" "555555550" "555555551" "555555552" "555555553" "555555554" “555555555” "555555556" "555555557" "555555558" "555555559"  "666666660" "666666661" "666666662" "666666663" "666666664" "666666665" “666666666" "666666667" "666666668" "666666669" "777777770" "777777771” "777777772" "777777773" "777777774" "777777775" "777777776" “777777777” "777777778" "777777779" "888888880" "888888881" "888888882" "888888883" "888888884" "888888885" "888888886" "888888887" “888888888” "888888889"  "999999990" "999999991" "999999992" "999999993" "999999994" "999999995" "99999996"   "999999997" "999999998" “999999999”  "123456780" to "123456789" "123123123"
          example: '123456789'
        dob:
          type: string
          description: Date of Birth (CCYY-MM-DD). Must be at least 18 years old.
          format: date
          example: 2000-03-23
        addressLine1:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 1. Field for house number, street and direction.
          example: 4355 N Coalwhipe St.
        addressLine2:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 2. Field for apartment or suite numbers, etc.
          example: suite 104
        city:
          maxLength: 28
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          example: Denver
        state:
          allOf:
          - $ref: '#/components/schemas/State_1'
          - description: Valid US state, commonwealth, and territory codes are allowed.
            example: CO
        country:
          enum:
          - United States
          type: string
          description: Only United States is allowed.
        postalCode:
          maxLength: 5
          minLength: 5
          pattern: ^[0-9]{5}$
          type: string
          description: Postal code / zip code. The postal code must be valid for the address' country code.
          example: '12345'
        postalCodeExtension:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Postal code / zip code extension.  The postal code extension must be valid for the address' country code.
          example: '1234'
        identification:
          type: array
          items:
            $ref: '#/components/schemas/Identification'
          description: Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.
      description: A Control Owner is required for the following ownership types > LLC, PARTNERSHIP, PRIVATE CORPORATION, ASSOCIATION/ESTATE/TRUST, NON-PROFIT
      example:
        type: Control Owner Contact
        title: Owner
        firstName: Timothy
        middleInitial: M
        lastName: Jones
        phoneNumber: '1234567890'
        phoneNumberExt: '1234'
        faxNumber: '1234567890'
        email: test@test.com
        ownershipPercentage: 23
        ssn: '123456789'
        dob: 2000-03-23
        addressLine1: 4355 N Coalwhipe St.
        city: City Town
        state: OH
        country: United States
        postalCode: '80123'
        postalCodeExtension: '1234'
    State_1:
      title: State_1
      enum:
      - AK
      - AL
      - AR
      - AS
      - AZ
      - CA
      - CO
      - CT
      - DC
      - DE
      - FL
      - FM
      - GA
      - GU
      - HI
      - IA
      - ID
      - IL
      - IN
      - KS
      - KY
      - LA
      - MA
      - MD
      - ME
      - MH
      - MI
      - MN
      - MO
      - MP
      - MS
      - MT
      - NC
      - ND
      - NE
      - NH
      - NJ
      - NM
      - NV
      - NY
      - OH
      - OK
      - OR
      - PA
      - PR
      - PW
      - RI
      - SC
      - SD
      - TN
      - TX
      - UM
      - UT
      - VA
      - VI
      - VT
      - WA
      - WI
      - WV
      - WY
      type: string
      description: Valid US state, commonwealth, and territory codes are allowed.
      example: CO
    Guarantor_1:
      title: Guarantor_1
      required:
      - type
      - firstName
      - lastName
      - phoneNumber
      - email
      - addressLine1
      - city
      - state
      - country
      - postalCode
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type3'
          - example: Guarantor 1 Contact
        title:
          maxLength: 30
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Required for AMEX acquired merchants otherwise optional.
          example: President
        firstName:
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: First name. Region based validations will be applied to this field.
          example: Todd
        middleInitial:
          maxLength: 1
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Middle initial.
          example: M
        lastName:
          maxLength: 25
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Last name. Region based validations will be applied to this field.
          example: Davis
        phoneNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit phone number of the format  5131234567.
          example: '5131234567'
        phoneNumberExt:
          maxLength: 8
          pattern: ^[0-9]{1,8}$
          type: string
          description: Phone number extension. Up to 8 digits of the format 12345678.
          example: '1234'
        phoneType:
          allOf:
          - $ref: '#/components/schemas/PhoneType'
          - description: Phone type.
            example: mobile
        alternatePhone:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit alternate phone number of the format  5131234567.
          example: '5131234567'
        alternatePhoneType:
          allOf:
          - $ref: '#/components/schemas/AlternatePhoneType'
          - description: Alternate phone type.
            example: home
        faxNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit fax number of the format 5131234567
          example: '5131234567'
        email:
          maxLength: 64
          minLength: 1
          pattern: '\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}'
          type: string
          description: Email address of the contact. Must have @ and a .
          example: test@gmail.com
        ownershipPercentage:
          maximum: 100
          minimum: 0
          type: integer
          description: Ownership stake percentage.
          format: int32
        ssn:
          pattern: ^[0-9]{9}$
          type: string
          description: Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009" "111111110" “111111111” "111111112" "111111113" "111111114" "111111115" "111111116" "111111117" "111111118" "111111119" "222222220" "222222221" “222222222” "222222223" "222222224" "222222225" "222222226" "222222227" "222222228" "222222229" "333333330" "333333331" "333333332" “333333333” "333333334" "333333335" "333333336" "333333337" "333333338" "333333339"  "444444440" "444444441" "444444442" "444444443" “444444444” "444444445" "444444446" "444444447" "444444448" "444444449" "555555550" "555555551" "555555552" "555555553" "555555554" “555555555” "555555556" "555555557" "555555558" "555555559"  "666666660" "666666661" "666666662" "666666663" "666666664" "666666665" “666666666" "666666667" "666666668" "666666669" "777777770" "777777771” "777777772" "777777773" "777777774" "777777775" "777777776" “777777777” "777777778" "777777779" "888888880" "888888881" "888888882" "888888883" "888888884" "888888885" "888888886" "888888887" “888888888” "888888889"  "999999990" "999999991" "999999992" "999999993" "999999994" "999999995" "99999996"   "999999997" "999999998" “999999999”  "123456780" to "123456789" "123123123"
          example: '123456789'
        dob:
          type: string
          description: Date of Birth (CCYY-MM-DD). Must be at least 18 years old.
          format: date
          example: 2000-03-23
        addressLine1:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 1. Field for house number, street and direction.
          example: 4355 N Coalwhipe St.
        addressLine2:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 2. Field for apartment or suite numbers, etc.
          example: suite 104
        city:
          maxLength: 28
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          example: Denver
        state:
          allOf:
          - $ref: '#/components/schemas/State_1'
          - description: Valid US state, commonwealth, and territory codes are allowed.
            example: CO
        country:
          enum:
          - United States
          type: string
          description: Only United States is allowed.
        postalCode:
          maxLength: 5
          minLength: 5
          pattern: ^[0-9]{5}$
          type: string
          description: Postal code / zip code. The postal code must be valid for the address' country code.
          example: '12345'
        postalCodeExtension:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Postal code / zip code extension.  The postal code extension must be valid for the address' country code.
          example: '1234'
        identification:
          type: array
          items:
            $ref: '#/components/schemas/Identification'
          description: Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.
    AuthorizedSigner_1:
      title: AuthorizedSigner_1
      required:
      - roleName
      - signingExperience
      - signingOrder
      - firstName
      - lastName
      - phoneNumber
      - email
      - ssn
      - dob
      - addressLine1
      - city
      - state
      - country
      - postalCode
      type: object
      properties:
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleName_1'
          - description: >-
              The role of the signer. Please note the below.

               1) Merchant role name is mandatory.
               2) Required fields indicated in schema are those required for all role names other than "SalesRep"
               3) The "SalesRep" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email
               4) The "Signer2" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.
            example: Merchant
        signingExperience:
          allOf:
          - $ref: '#/components/schemas/SigningExperience'
          - description: Signing ceremony type
            example: email
        signingOrder:
          type: string
          description: Define the signing order for multiple signers
          example: '2'
        title:
          maxLength: 30
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Required for AMEX acquired merchants otherwise optional.
          example: President
        firstName:
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: First name. Region based validations will be applied to this field.
          example: Todd
        middleInitial:
          maxLength: 1
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Middle initial.
          example: M
        lastName:
          maxLength: 25
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Last name. Region based validations will be applied to this field.
          example: Davis
        phoneNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit phone number of the format  5131234567.
          example: '5131234567'
        phoneNumberExt:
          maxLength: 8
          pattern: ^[0-9]{1,8}$
          type: string
          description: Phone number extension. Up to 8 digits of the format 12345678.
          example: '1234'
        phoneType:
          allOf:
          - $ref: '#/components/schemas/PhoneType'
          - description: Phone type.
            example: mobile
        alternatePhone:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit alternate phone number of the format  5131234567.
          example: '5131234567'
        alternatePhoneType:
          allOf:
          - $ref: '#/components/schemas/AlternatePhoneType'
          - description: Alternate phone type.
            example: home
        faxNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit fax number of the format 5131234567
          example: '5131234567'
        email:
          maxLength: 64
          minLength: 1
          pattern: '\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}'
          type: string
          description: Email address of the contact. Must have @ and a .
          example: test@gmail.com
        ssn:
          pattern: ^[0-9]{9}$
          type: string
          description: Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009" "111111110" “111111111” "111111112" "111111113" "111111114" "111111115" "111111116" "111111117" "111111118" "111111119" "222222220" "222222221" “222222222” "222222223" "222222224" "222222225" "222222226" "222222227" "222222228" "222222229" "333333330" "333333331" "333333332" “333333333” "333333334" "333333335" "333333336" "333333337" "333333338" "333333339"  "444444440" "444444441" "444444442" "444444443" “444444444” "444444445" "444444446" "444444447" "444444448" "444444449" "555555550" "555555551" "555555552" "555555553" "555555554" “555555555” "555555556" "555555557" "555555558" "555555559"  "666666660" "666666661" "666666662" "666666663" "666666664" "666666665" “666666666" "666666667" "666666668" "666666669" "777777770" "777777771” "777777772" "777777773" "777777774" "777777775" "777777776" “777777777” "777777778" "777777779" "888888880" "888888881" "888888882" "888888883" "888888884" "888888885" "888888886" "888888887" “888888888” "888888889"  "999999990" "999999991" "999999992" "999999993" "999999994" "999999995" "99999996"   "999999997" "999999998" “999999999”  "123456780" to "123456789" "123123123"
          example: '123456789'
        dob:
          type: string
          description: Date of Birth (CCYY-MM-DD). Must be at least 18 years old.
          format: date
          example: 2000-03-23
        addressLine1:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 1. Field for house number, street and direction.
          example: 4355 N Coalwhipe St.
        addressLine2:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 2. Field for apartment or suite numbers, etc.
          example: suite 104
        city:
          maxLength: 28
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          example: Denver
        state:
          allOf:
          - $ref: '#/components/schemas/State_1'
          - description: Valid US state, commonwealth, and territory codes are allowed.
            example: CO
        country:
          enum:
          - United States
          type: string
          description: Only United States is allowed.
        postalCode:
          maxLength: 5
          minLength: 5
          pattern: ^[0-9]{5}$
          type: string
          description: Postal code / zip code. The postal code must be valid for the address' country code.
          example: '12345'
        postalCodeExtension:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Postal code / zip code extension.  The postal code extension must be valid for the address' country code.
          example: '1234'
        identification:
          type: array
          items:
            $ref: '#/components/schemas/Identification'
          description: Optional. If any attribute in the identification object is populated then at least idNumber and idType are required.
    RoleName_1:
      title: RoleName_1
      enum:
      - SalesRep
      - Merchant
      - Signer2
      - Signer3
      - Signer4
      - Signer5
      - Signer6
      - Signer7
      - Signer8
      - Guarantor2
      - Guarantor3
      - Guarantor4
      type: string
      description: >-
        The role of the signer. Please note the below.

         1) Merchant role name is mandatory.
         2) Required fields indicated in schema are those required for all role names other than "SalesRep"
         3) The "SalesRep" role name only requires the following fields > roleName, signingExperience, signingOrder, firstName, lastName, email
         4) The "Signer2" role name is for a Personal Guarantor. This signer must be included if a Personal Guarantor is on the application. Include the Guarnator's information in this object.
      example: Merchant
    Contact_1:
      title: Contact_1
      required:
      - type
      - firstName
      - lastName
      - phoneNumber
      - email
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type4'
          - description: "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST."
            example: Primary Contact
        title:
          maxLength: 30
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Required for AMEX acquired merchants otherwise optional.
          example: President
        firstName:
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: First name. Region based validations will be applied to this field.
          example: Todd
        middleInitial:
          maxLength: 1
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Middle initial.
          example: M
        lastName:
          maxLength: 25
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Last name. Region based validations will be applied to this field.
          example: Davis
        ssn:
          pattern: ^[0-9]{9}$
          type: string
          description: Social security number. Do not include dashes.The full list of restricted SSN is- “000000001” “000000002” “000000003” “000000004” “000000005” “000000006” “000000007” “000000008” “000000009" "111111110" “111111111” "111111112" "111111113" "111111114" "111111115" "111111116" "111111117" "111111118" "111111119" "222222220" "222222221" “222222222” "222222223" "222222224" "222222225" "222222226" "222222227" "222222228" "222222229" "333333330" "333333331" "333333332" “333333333” "333333334" "333333335" "333333336" "333333337" "333333338" "333333339"  "444444440" "444444441" "444444442" "444444443" “444444444” "444444445" "444444446" "444444447" "444444448" "444444449" "555555550" "555555551" "555555552" "555555553" "555555554" “555555555” "555555556" "555555557" "555555558" "555555559"  "666666660" "666666661" "666666662" "666666663" "666666664" "666666665" “666666666" "666666667" "666666668" "666666669" "777777770" "777777771” "777777772" "777777773" "777777774" "777777775" "777777776" “777777777” "777777778" "777777779" "888888880" "888888881" "888888882" "888888883" "888888884" "888888885" "888888886" "888888887" “888888888” "888888889"  "999999990" "999999991" "999999992" "999999993" "999999994" "999999995" "99999996"   "999999997" "999999998" “999999999”  "123456780" to "123456789" "123123123"
          example: '123456789'
        birthDate:
          type: string
          description: Date of Birth (CCYY-MM-DD). Must be at least 18 years old.
          format: date
          example: 2000-03-23
        phoneNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit phone number of the format  5131234567.
          example: '5131234567'
        phoneNumberExt:
          maxLength: 8
          pattern: ^[0-9]{1,8}$
          type: string
          description: Phone number extension. Up to 8 digits of the format 12345678.
          example: '1234'
        phoneType:
          allOf:
          - $ref: '#/components/schemas/PhoneType'
          - description: Phone type.
            example: mobile
        alternatePhone:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit alternate phone number of the format  5131234567.
          example: '5131234567'
        alternatePhoneType:
          allOf:
          - $ref: '#/components/schemas/AlternatePhoneType'
          - description: Alternate phone type.
            example: home
        email:
          maxLength: 64
          minLength: 1
          pattern: '\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}'
          type: string
          description: Email address of the contact. Must have @ and a .
          example: test@gmail.com
        faxNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: 10-digit fax number of the format 5131234567
          example: '5131234567'
    Address_1:
      title: Address_1
      required:
      - type
      - addressLine1
      - city
      - state
      - country
      - postalCode
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/AddressType'
          - description: "Address Type  \n 1) Physical address is mandatory.\n 2) If equipment needs to be sent to a different location than the physical address, then shipping address should be added.\n3) For any address type, addressLine1, city, state, postalCode and country are mandatory."
            example: Physical Address
        addressLine1:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 1. Field for house number, street and direction.
          example: 4355 N Coalwhipe St.
        addressLine2:
          maxLength: 40
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Address Line 2. Field for apartment or suite numbers, etc.
          example: suite 104
        city:
          maxLength: 28
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          example: Denver
        state:
          allOf:
          - $ref: '#/components/schemas/State_1'
          - description: Valid US state, commonwealth, and territory codes are allowed.
            example: CO
        country:
          enum:
          - United States
          type: string
          description: Only United States is allowed.
        postalCode:
          maxLength: 5
          minLength: 5
          pattern: ^[0-9]{5}$
          type: string
          description: Postal code / zip code. The postal code must be valid for the address' country code.
          example: '12345'
        postalCodeExtension:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Postal code / zip code extension.  The postal code extension must be valid for the address' country code.
          example: '1234'
    BankAccount_1:
      title: BankAccount_1
      type: object
      properties:
        ddaType:
          allOf:
          - $ref: '#/components/schemas/DdaType'
          - description: Direct deposit account type.
            example: Checking
        achType:
          allOf:
          - $ref: '#/components/schemas/AchType'
          - description: Check deposit type
            example: Commercial Checking
        accountNumber:
          maxLength: 17
          minLength: 1
          type: string
          description: Direct deposit account number.  Maximum 17 characters.
          example: '011401545'
        routingNumber:
          maxLength: 9
          minLength: 9
          type: string
          description: Bank routing number. Must be 9 characters and pass ACH Mod-10 validation.
          example: '102000076'
        bankName:
          type: string
          description: Bank name used for credit card processing services.
          example: Bank name
      description: Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber & bankName.
    AdvancedSettlement_inner:
      title: AdvancedSettlement_inner
      type: object
      properties:
        settlementCategories:
          type: array
          items:
            $ref: '#/components/schemas/SettlementCategory'
          description: ''
        bankAccount:
          allOf:
          - $ref: '#/components/schemas/BankAccount_1'
          - description: Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber & bankName.
      description: Advanced Settlement gives merchants options to settle their account according to their needs with different settlement categories.
    SalesAgent_1:
      title: SalesAgent_1
      required:
      - firstName
      - lastName
      - email
      type: object
      properties:
        id:
          maxLength: 15
          minLength: 1
          type: string
          description: Id for the Sales Contact.
          example: U15315
        firstName:
          maxLength: 15
          minLength: 1
          type: string
          description: Sales agent's first name.
          example: John
        lastName:
          maxLength: 25
          minLength: 1
          type: string
          description: Sales agent's last name.
          example: Doe
        mobilePhoneNumber:
          pattern: ^[0-9]{10}$
          type: string
          description: Sales agent's 10-digit phone number of the format 5131234567.
          example: '1234567890'
        email:
          maxLength: 64
          minLength: 1
          pattern: (\\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z0-9]{2,}\\b{0,64})
          type: string
          description: Sales agent's email address.  Must have @ and a .
      description: The agent who is submitting the deal. It is an optional object. It becomes required, when  partner wants to route deals to their own sales rep. Please work with your integration specialist for route to sales rep functionality.
    Application:
      title: Application
      required:
      - businessInfo
      - transactionInfo
      - authorizedSigners
      - contacts
      - addresses
      type: object
      properties:
        clientTrackingId:
          maxLength: 36
          minLength: 1
          type: string
          description: This is an optional field that can be used by the partners to send a unique Id from their application for reporting purposes.
          example: '1341341234132412341'
        businessInfo:
          $ref: '#/components/schemas/BusinessInfo_1'
        transactionInfo:
          $ref: '#/components/schemas/TransactionInfo_1'
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Owner_1'
          description: ''
        authorizedSigners:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedSigner_1'
          description: ''
        guarantors:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Guarantor_1'
          description: Guarantor information. A guarantor is the person whose credit report will be pulled during the underwriting process.
        contacts:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact_1'
          description: ''
        addresses:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Address_1'
          description: ''
          example:
          - type: Mailing Address
            addressLine1: 1234 W Tester Ave.
            city: City Town
            state: CO
            country: United States
            postalCode: '80123'
            postalCodeExtension: '1234'
          - type: Physical Address
            addressLine1: 1234 W Tester Ave.
            city: City Town
            state: CO
            country: United States
            postalCode: '80123'
            postalCodeExtension: '1234'
          - type: Shipping Address
            addressLine1: 1234 W Tester Ave.
            city: City Town
            state: CO
            country: United States
            postalCode: '80123'
            postalCodeExtension: '1234'
        bankAccount:
          allOf:
          - $ref: '#/components/schemas/BankAccount_1'
          - description: Bank account collects bank account information from merchant. It is optional till the time of boarding where bank account becomes required along with ddaType, achType, accountNumber, routingNumber & bankName.
        advancedSettelment:
          type: array
          items:
            $ref: '#/components/schemas/AdvancedSettlement_inner'
          description: ''
        salesAgent:
          allOf:
          - $ref: '#/components/schemas/SalesAgent_1'
          - description: The agent who is submitting the deal. It is an optional object. It becomes required, when  partner wants to route deals to their own sales rep. Please work with your integration specialist for route to sales rep functionality.
        installationContact:
          allOf:
          - $ref: '#/components/schemas/InstallationContact'
          - description: The Technical Agent who is going to do setup.
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformationObject'
          description: ''
        leadSource:
          maxLength: 150
          type: string
          description: The source of the lead.
          example: LP Connect API
        routeToSalesRep:
          type: boolean
          description: Used to route a application to a worldpay or partner sales rep.
        productsInquiry:
          uniqueItems: true
          type: array
          items:
            maxLength: 25
            minLength: 1
            type: string
          description: ''
    AdditionalInformationObject:
      title: AdditionalInformationObject
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/Key'
          - example: partnerEmployeeId
        value:
          type: string
          example: '4656'
      description: Required for some partners. Work with your Developer Integrations specialist for more information.
    ApplicationResponse:
      title: ApplicationResponse
      type: object
      properties:
        externalRefId:
          maxLength: 36
          pattern: ([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})
          type: string
          description: A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.
          example: df8a6d82-3bb4-4f3b-ba18-57a5981ede8e
    AdditionalConfigurationsResponse:
      title: AdditionalConfigurationsResponse
      type: object
      properties:
        customizations:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalConfigurationCustomization'
          description: ''
        peripherals:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalConfigurationPeripheral'
          description: ''
    AdditionalConfigurationCustomization:
      title: AdditionalConfigurationCustomization
      type: object
      properties:
        customizationId:
          type: string
          description: Customization Id is internally populated from a master list.
          example: '1'
        customizationType:
          type: string
          description: type of customization
          example: time
        useProductMatrix:
          type: string
          description: Whether or not used in product matrix
          example: N
        productId:
          type: string
          description: unique ID for the product
          example: '12'
        code:
          type: string
          description: product code
          example: CST01
        customizationCodeDetails:
          type: array
          items:
            $ref: '#/components/schemas/CustomizationCodeDetails'
          description: ''
        customizationValue:
          type: string
          description: Actual Customization Value
          example: H
        customizationFieldLength:
          type: string
          description: Length of the customization value
          example: '1'
        customizationDecimalPlace:
          type: string
          description: Number of decimal places
          example: '0'
        customizationMinValue:
          type: string
          description: Minimum Value. Only applicable if the customization value is a number
          example: '0'
        customizationMaxValue:
          type: string
          description: Maximum Value. Only applicable if the customization value is a number
          example: '6'
        charactersAllowed:
          type: string
          description: All characters allowed for customization. Only applicable if the customization value is a string.
          example: abcdefghijklmnopqrstuvwxyz
        rule:
          type: string
          description: customization rule
        regex:
          type: string
          description: Regular expression to validate the customization value
          example: ^[a-z]{1}
        multiMerchantFlag:
          type: boolean
          description: Applicable in a multiple merchant situation
          default: false
          example: false
        shortDescription:
          type: string
          description: Description of the customization
          example: CVV_PROMPTING
        longDescription:
          type: string
          description: Verbose description of the customiztion
          example: CVV_PROMPTING
    CustomizationCodeDetails:
      title: CustomizationCodeDetails
      type: object
      properties:
        value:
          type: string
          description: customization code
          example: H
        shortDescription:
          type: string
          description: short description of the customization code
          example: Host Auto Close
        longDescription:
          type: string
          description: long description of the customization code
          example: Host Auto Close
    AdditionalConfigurationPeripheral:
      title: AdditionalConfigurationPeripheral
      type: object
      properties:
        peripheralId:
          type: string
          description: Peripheral IDs are internally populated.
          example: '35'
        model:
          type: string
          description: Peripheral Name
          example: Pin Pad 1000 SE
        shortDescription:
          type: string
          description: Description of the peripheral
          example: PP1S
        longDescription:
          type: string
          description: Verbose description of the peripheral
          example: PPAD
        isEMVCertified:
          type: boolean
          description: Whether peripheral is EMV certified
          example: true
        isEMVCapable:
          type: boolean
          description: Whether peripheral is EMV Capable
          example: true
        activePeripheralFlag:
          type: string
          example: Y
        purchasePrice:
          type: string
          description: purchase price of the peripheral
          example: '168.12'
        leasePrice:
          type: string
          description: lease price of the peripheral
          example: '100.12'
        rentalPrice:
          type: string
          description: rental price of the peripheral
          example: '90'
        hardwareCost:
          type: string
          description: hardware cost of the terminal
          example: '50.75'
    EquipmentSetup:
      title: EquipmentSetup
      type: object
      properties:
        shippingOption:
          allOf:
          - $ref: '#/components/schemas/ShippingOption'
          - description: The speed you would like the equipment to be shipped.
            example: next day
        terminals:
          type: array
          items:
            $ref: '#/components/schemas/Terminal'
          description: ''
    Terminal:
      title: Terminal
      required:
      - terminalConfigs
      - products
      type: object
      properties:
        terminalConfigs:
          $ref: '#/components/schemas/TerminalConfig'
        customizations:
          type: array
          items:
            $ref: '#/components/schemas/TerminalCustomization'
          description: ''
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          description: ''
        peripherals:
          type: array
          items:
            $ref: '#/components/schemas/Peripheral'
          description: ''
        vendors:
          type: array
          items:
            $ref: '#/components/schemas/PaymentApplicationVendor'
          description: ''
        gateways:
          type: array
          items:
            $ref: '#/components/schemas/Gateway'
          description: ''
        supply:
          type: array
          items:
            $ref: '#/components/schemas/TerminalSupply'
          description: ''
        deployment:
          $ref: '#/components/schemas/TerminalDeployment'
    TerminalConfig:
      title: TerminalConfig
      required:
      - terminalId
      - price
      - quantity
      - logicalApplicationId
      - accessMethod
      - paymentMethod
      - environmentName
      type: object
      properties:
        requestId:
          type: string
          description: Partner assigned unique request ID for terminal setup.
          example: '41231'
        terminalId:
          type: string
          description: Terminal ID number.
          example: iCT220
        terminalModel:
          type: string
          description: The model name of the terminal in use.
          example: Ingenico iCT220 CTLS 3.X Dial
        price:
          type: number
          description: Terminal price
          example: 187.99
        quantity:
          type: integer
          format: int32
          example: 1
        logicalApplicationId:
          type: string
          description: Logical application ID.
          example: MONE510
        accessMethod:
          type: string
          description: Methods of terminal access.
          example: SSL
        paymentMethod:
          allOf:
          - $ref: '#/components/schemas/PaymentMethod'
          - description: Payment method for the selected terminal.
            example: PURCHASE / SALE
        environmentName:
          type: string
          description: Environment name
          example: Retail
        isVar:
          type: boolean
          description: The value added reseller. Default value is false.
          default: false
          example: false
        emvCapable:
          type: boolean
          description: Is it EMV capabale?
          default: false
          example: true
        leaseId:
          type: string
          description: Lease ID. Required when PaymentMethod is selected as lease.
          example: '12'
        leaseTermLength:
          allOf:
          - $ref: '#/components/schemas/LeaseTermLength'
          - description: Lease term for the peripheral
            example: '24'
        terminalSequenceNumber:
          pattern: ^[0-9]
          type: string
          description: Terminal sequence number. If not sent, the API will autogenerate a number.
          example: '14'
        specialCustomizations:
          maxLength: 255
          type: string
          description: Any customization request for a terminal configuration.
          example: Mulitple merchant setup is Yes
    TerminalCustomization:
      title: TerminalCustomization
      type: object
      properties:
        customizationId:
          type: string
          description: Customization ID is internally populated from a master list.
          example: '10'
        customizationName:
          type: string
          example: Auto-Close Time
        customizationFieldValue:
          type: string
          example: N
    Product:
      title: Product
      type: object
      properties:
        productId:
          type: string
          description: Product ID is populated internally.
          example: '1'
        productName:
          type: string
          description: Payment method associated with the internally-populated ID.
          example: Debit
    Peripheral:
      title: Peripheral
      type: object
      properties:
        peripheralId:
          type: string
          description: Peripheral IDs are internally populated.
          example: '231'
        peripheralType:
          type: string
          description: Peripheral type
          example: PPAD
        model:
          type: string
          example: Magtek Check Reader
        leaseId:
          type: string
          description: Lease ID for the peripheral
          example: '18'
        leaseTermLength:
          allOf:
          - $ref: '#/components/schemas/LeaseTermLength'
          - description: Lease term for the peripheral
            example: '24'
        paymentMethod:
          allOf:
          - $ref: '#/components/schemas/PaymentMethod1'
          - description: Payment method for the selected peripheral.
            example: PURCHASE / SALE
        amount:
          pattern: (^\d{1,10}([.]\d{1,2})?)$
          type: string
          description: >-
            "Payment Amount for the peripheral. Valid values are 0.00
              - 9999999999.99."
          example: '220.21'
        paymentConfirmationNumber:
          pattern: '[0-9a-zA-Z]{6}|'
          type: string
          description: Payment confirmation number for the peripheral.
          example: '123456'
    PaymentApplicationVendor:
      title: PaymentApplicationVendor
      type: object
      properties:
        paymentApplicationId:
          type: string
          description: Payment application ID
          example: '9'
        paymentApplicationName:
          type: string
          example: PurchaseExpress
        vendorId:
          type: string
          description: Vendor ID for the payment application.
          example: '4'
        version:
          type: string
          description: Payment application version.
          example: '1'
        reseller:
          type: string
          description: Reseller
          example: Agilysys Inc
        lastUpgradeDate:
          type: string
          description: Last date payment application was upgraded.
          format: date-time
          example: 2012-02-18T00:00:00Z
        notes:
          type: string
          description: Custom notes can go here.
          example: Paymetric Gateway v3
      description: 'A payment application is installed software developed for processing various payments types: Credit, Debit, Gift, Checks, etc. and can be integrated with a POS system or used in a standalone manner.'
    Gateway:
      title: Gateway
      type: object
      properties:
        gatewayId:
          type: string
          description: Internally-generated gateway ID.
          example: '15'
        gatewayName:
          type: string
          example: Paymetric Gateway
        notes:
          type: string
          description: Add any custom notes here.
          example: Paymetric Gateway v3
      description: A gateway is a hosted payment processing application provided by a service provider and accessed through an internet connection.
    TerminalSupply:
      title: TerminalSupply
      required:
      - supplyType
      type: object
      properties:
        supplyType:
          type: string
        name:
          type: string
          description: Supply name
        quantity:
          type: integer
          description: Supply quantity
          format: int32
          example: 2
        total:
          pattern: (^\d{1,10}([.]\d{1,2})?)$
          type: string
          description: >-
            Total Supplies. Valid values are 0.00
              - 9999999999.99."
          example: '220.21'
    TerminalDeployment:
      title: TerminalDeployment
      required:
      - equipmentUpdateDeploy
      type: object
      properties:
        equipmentUpdateDeploy:
          allOf:
          - $ref: '#/components/schemas/EquipmentUpdateDeploy'
          - example: M
        terminalBuildFlag:
          type: boolean
          example: true
        frontEndBuildFlag:
          type: boolean
          example: true
        sicMerchantFlag:
          type: boolean
          example: false
        specialInstructions:
          maxLength: 255
          type: string
          description: Special instructions for terminal deployment.
          example: Retail - H52460A (SP)
    ApplicationStatus:
      title: ApplicationStatus
      type: object
      properties:
        externalRefId:
          maxLength: 36
          pattern: ([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})
          type: string
          description: A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.
          example: df8a6d82-3bb4-4f3b-ba18-57a5981ede8e
        contractStatus:
          $ref: '#/components/schemas/ContractStatus'
        description:
          type: string
        pendedReason:
          type: string
          description: Detailed Underwriting Pended reason of the deal.
      example:
        externalRefId: a57223b9-578a-4294-93bf-30f64fdd24a7
        contractStatus: In Progress
        description: Underwriting is in progress.
        pendedReason: Credit Report|Website address needed
    StatusHistoryResponse:
      title: StatusHistoryResponse
      type: object
      properties:
        externalRefId:
          maxLength: 36
          pattern: ([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})
          type: string
          description: A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.
          example: df8a6d82-3bb4-4f3b-ba18-57a5981ede8e
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/StatusHistory'
          description: ''
    StatusHistory:
      title: StatusHistory
      type: object
      properties:
        statusSeqNumber:
          type: integer
          format: int32
          example: 2200
        detailStatus:
          type: string
          example: Contract Signed
        summaryStatus:
          type: string
          example: App Submitted
        statusCategory:
          type: string
          example: Contract
        statusDateTime:
          type: string
          format: date-time
    SignerStatus:
      title: SignerStatus
      type: object
      properties:
        externalRefId:
          maxLength: 36
          pattern: ([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})
          type: string
          description: A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.
          example: df8a6d82-3bb4-4f3b-ba18-57a5981ede8e
        authorizedSigners:
          type: array
          items:
            $ref: '#/components/schemas/AuthSigners'
          description: ''
    AuthSigners:
      title: AuthSigners
      type: object
      properties:
        firstName:
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: First name. Region based validations will be applied to this field.
          example: Todd
        middleInitial:
          maxLength: 1
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Middle initial.
          example: M
        lastName:
          maxLength: 25
          minLength: 1
          pattern: ^[a-zA-Z0-9 \p{P}\p{S}]+$
          type: string
          description: Last name. Region based validations will be applied to this field.
          example: Davis
        email:
          maxLength: 64
          minLength: 1
          pattern: '\b[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z0-9]{2,}'
          type: string
          description: Email address of the contact. Must have @ and a .
          example: test@gmail.com
        status:
          type: string
          description: Status of the signer
          example: sent
        lastUpdated:
          type: string
          description: Date contract was last updated
          format: date-time
        dateSubmitted:
          type: string
          description: Date contract was last updated
          format: date-time
        dateSent:
          type: string
          description: Date contract was sent
          format: date-time
        dateDelivered:
          type: string
          description: Date contract was delivered
          format: date-time
        dateSigned:
          type: string
          description: Date contract was signed
          format: date-time
        signerRoleName:
          type: string
          description: Role of the signer
          example: Merchant
        signerExperience:
          type: string
          description: Method of sign
          example: wet
    DocumentLink:
      title: DocumentLink
      required:
      - externalRefId
      type: object
      properties:
        externalRefId:
          maxLength: 36
          pattern: ([0-9a-z]{8})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{4})-([0-9a-z]{12})
          type: string
          description: A unique GUID generated by POST resource, used for retrieving and updating a deal. Do not send in the request, API will always generate one and assign it to the deal.
          example: df8a6d82-3bb4-4f3b-ba18-57a5981ede8e
        returnUrl:
          type: string
          description: 'The recipient will be directed to the returnUrl once signing is complete. For example on how it looks:  https://docusign.com/Signing/StartInSession.aspx?t=7f0d21a4-2798-402f-8b26-b12dbb37ae40'
          example: https://docusign.com
    DocuSignLink:
      title: DocuSignLink
      type: object
      properties:
        embeddingUrl:
          type: string
          description: UI embeded link of the Docusign contract for the externalRefId.
          example: https://docusign.com/Signing/StartInSession.aspx?t=7f0d21a4-2798-402f-8b26-b12dbb37ae40
    inline_response_200:
      title: inline_response_200
      type: object
      properties:
        equipment:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_equipment'
          description: ''
    inline_response_200_1:
      title: inline_response_200_1
      type: object
      properties:
        status:
          type: string
          description: UP or DOWN status of Lauchpad & it's downstream system.
          example: UP
    inline_response_200_equipment:
      title: inline_response_200_equipment
      type: object
      properties:
        id:
          type: string
          example: '1'
        name:
          type: string
          example: Verifone LX570
        logicalApplicationId:
          type: string
          example: '1073'
        environment:
          type: string
          example: Retail
    AcceptChargebacks:
      title: AcceptChargebacks
      enum:
      - Yes
      - No
      type: string
      description: Do you have more than 25 chargeback accepted in the last 12 months?
      example: No
    AcceptCreditCards:
      title: AcceptCreditCards
      enum:
      - 'true'
      - 'false'
      type: string
      description: Does the business accept credit cards?
    AchType:
      title: AchType
      enum:
      - Commercial Checking
      - Private Checking
      type: string
      description: Check deposit type
      example: Commercial Checking
    ActiveMonth:
      title: ActiveMonth
      enum:
      - Jan
      - Feb
      - Mar
      - Apr
      - May
      - Jun
      - Jul
      - Aug
      - Sep
      - Oct
      - Nov
      - Dec
      type: string
    Content-Type:
      title: Content-Type
      enum:
      - application/json
      type: string
    ContractStatus:
      title: ContractStatus
      enum:
      - Complete
      - In Progress
      - Error
      - Pending
      type: string
    DdaType:
      title: DdaType
      enum:
      - Checking
      - Savings
      type: string
      description: Direct deposit account type.
      example: Checking
    EquipmentUpdateDeploy:
      title: EquipmentUpdateDeploy
      enum:
      - M
      - D
      - N
      type: string
      example: M
    IdType:
      title: IdType
      enum:
      - ALIEN ID
      - CREDIT BUREAU
      - DRIVERS LICENSE
      - STATE ID
      - MEXICAN CONSULATE
      - MILITARY ID
      - OTHER
      - PASSPORT
      type: string
      description: Type of ID provided by the owner.
      example: PASSPORT
    IssuedState:
      title: IssuedState
      enum:
      - AK
      - AL
      - AR
      - AS
      - AZ
      - CA
      - CO
      - CT
      - DC
      - DE
      - FL
      - FM
      - GA
      - GU
      - HI
      - IA
      - ID
      - IL
      - IN
      - KS
      - KY
      - LA
      - MA
      - MD
      - ME
      - MH
      - MI
      - MN
      - MO
      - MP
      - MS
      - MT
      - NC
      - ND
      - NE
      - NH
      - NJ
      - NM
      - NV
      - NY
      - OH
      - OK
      - OR
      - PA
      - PR
      - PW
      - RI
      - SC
      - SD
      - TN
      - TX
      - UT
      - VA
      - VI
      - VT
      - WA
      - WI
      - WV
      - WY
      type: string
      description: Valid state code where ID was issued.
      example: CO
    Key:
      title: Key
      enum:
      - partnerEmployeeId
      - partnerEmployeeName
      - partnerEmployeePhoneNumber
      - partnerEmployeeEmail
      - partnerEmployeeType
      - partnerEmployeeBranch
      - partnerEmployeeCostCentre
      - partnerEmployeeRegion
      - partnerEmployeeOfficerCode
      - partnerEmployeeCompany
      - partnerEmployeeId2
      - partnerEmployeeName2
      - partnerEmployeePhoneNumber2
      - partnerEmployeeEmail2
      - partnerEmployeeType2
      - partnerEmployeeBranch2
      - partnerEmployeeCostCentre2
      - partnerEmployeeRegion2
      - partnerEmployeeOfficerCode2
      - partnerEmployeeCompany2
      - partnerEmployeeIndustry
      - partnerLeadSource
      - partnerEmployeeRef
      - partnerMethod
      - partnerVipIndicator
      - partnerMarketRegion
      - partnerPromotionCampaign
      - partnerLeadType
      - partnerCustom1
      - partnerCustom2
      - partnerCustom3
      - partnerCustom4
      - partnerCustom5
      - leadInitiatedBy
      type: string
      example: partnerEmployeeId
    LeaseTermLength:
      title: LeaseTermLength
      enum:
      - '24'
      - '36'
      - '48'
      - '60'
      type: string
      description: Lease term for the peripheral
      example: '24'
    OwnershipType:
      title: OwnershipType
      enum:
      - GOVERNMENT
      - SOLE PROPRIETOR
      - LLC
      - PARTNERSHIP
      - FIN INSTITUTION
      - NON-PROFIT
      - ASSOCIATION/ESTATE/TRUST
      - PRIVATE CORPORATION
      - SEC REGISTERED
      - PUBLIC CORPORATION
      - OTHER
      type: string
      description: Required. OwnershipType defines the type of the Merchant Organization, and drives the requirements for data collections of beneficial and control owners under U.S. Financial Crimes Enforcement Network (FinCEN).
      example: LLC
    PaymentAcceptanceMethod:
      title: PaymentAcceptanceMethod
      enum:
      - inPerson
      - onlineSite
      - phoneOrMailOrder
      type: string
    PaymentMethod:
      title: PaymentMethod
      enum:
      - PURCHASE / SALE
      - REPROGRAM / OWN
      - MONTH-TO-MONTH RENTAL
      - LEASE
      type: string
      description: Payment method for the selected terminal.
      example: PURCHASE / SALE
    PaymentMethod1:
      title: PaymentMethod1
      enum:
      - PURCHASE / SALE
      - REPROGRAM / OWN
      - MONTH-TO-MONTH RENTAL
      - LEASE
      type: string
      description: Payment method for the selected peripheral.
      example: PURCHASE / SALE
    Pciadc:
      title: Pciadc
      enum:
      - Yes
      - No
      type: string
      description: Indication if the merchant has had an account data compromise.
      example: No
    PcidssValidated:
      title: PcidssValidated
      enum:
      - Yes
      - No
      type: string
      description: Indictor showing if the merchant is compliant or not with the Payment Card Industry Data Security Standards.
      example: No
    ReturnPolicy:
      title: ReturnPolicy
      enum:
      - 3 Day
      - 30 Day
      - 60 Day
      - 60+ Day
      - ALL SALES FINAL
      - EXCHANGE ONLY/STORE CREDIT
      - NO RETURN POLICY
      type: string
      description: The business's return policy.
      example: 30 Day
    Seasonal:
      title: Seasonal
      enum:
      - Yes
      - No
      type: string
      description: Does the business operate seasonally?
      example: Yes
    SettlementCategory:
      title: SettlementCategory
      enum:
      - Deposits
      - Fees
      - Exceptions
      type: string
      description: Settlement categories gives merhant an option to settle their account with different settlement categories. It is an optional field. However at time of boarding it becomes a required field.
    ShippingOption:
      title: ShippingOption
      enum:
      - ground
      - next day
      - 2nd day
      type: string
      description: The speed you would like the equipment to be shipped.
      example: next day
    SurroundingArea:
      title: SurroundingArea
      enum:
      - Commercial
      - Industrial
      - Residential
      type: string
      description: Type of area surroundning the business.
      example: Commercial
    TaxExempt:
      title: TaxExempt
      enum:
      - 'true'
      - 'false'
      type: string
    Type:
      title: Type
      enum:
      - Control Owner Contact
      - Owner 1 Contact
      - Owner 2 Contact
      - Owner 3 Contact
      - Owner 4 Contact
      type: string
      description: The Owner Type. Please note the above Ownership Types where a Control Owner is required.
    Type1:
      title: Type1
      enum:
      - Primary Contact
      - Accounting Contact
      - Customer Service Contact
      - Shipping Contact
      - Third Party Contact
      - Vendor Contact Info
      - PCI Contact
      - Corporate
      type: string
      description: "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST."
      example: Primary Contact
    Type3:
      title: Type3
      enum:
      - Guarantor 1 Contact
      - Guarantor 2 Contact
      - Guarantor 3 Contact
      - Guarantor 4 Contact
      type: string
      example: Guarantor 1 Contact
    Type4:
      title: Type4
      enum:
      - Primary Contact
      - Store Primary Contact
      - Accounting Contact
      - Customer Service Contact
      - Shipping Contact
      - Third Party Contact
      - Vendor Contact Info
      - PCI Contact
      - Corporate
      type: string
      description: "Type of merchant contact.   \n 1) Only primary contact\n      is mandatory. May be the same as any owner contact information. \n 2) For primary contact, firstName, lastName, phoneNumber and email are mandatory during POST.  \n 3) For all other contact types, firstName and lastName are mandatory during POST."
      example: Primary Contact
    Warranty:
      title: Warranty
      enum:
      - 1 YEAR
      - 30 DAY
      - 60 DAY
      - 90 DAY
      - LIFETIME
      - NO
      type: string
      description: Does the business offer warranties, dues, subscriptions, memberships, or other extended services?
      example: 1 YEAR
  securitySchemes:
    api_key:
      type: apiKey
      description: "``` License format is WORLDPAY license='xxxx'```"
      name: Authorization
      in: header
security:
- api_key: []
tags:
- name: Initiate Boarding Application
  description: Resources to create/edit and read pending boarding applications.
- name: Equipment Lookup
- name: Choose Equipment
  description: Resources to choose the terminals.
- name: Submit Application
  description: Resources to validate and submit the final application for boarding.
- name: Check Application Status
  description: Resource to check status of the application.
- name: Review and Sign Contract
  description: Resources to retrieve the contract and digitally sign.
- name: Check Launchpad health
  description: Resources to check the the health of Launchpad and its dependent down streams systems at regular intervals to check the system is up or down.
